{"version":3,"file":"static/js/600.98ac75ff.chunk.js","mappings":"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","sources":["components/Blog/Common/Card/PostTeaser.tsx","components/Blog/Overview/ListBlogOverview/ListBlogOverview.tsx","hooks/blog/useBlogPosts.ts","hooks/blog/useBlogPostsInfinite.ts","templates/Home/Common/ChannelTeaser/ChannelTeaser.tsx","templates/Home/Common/Posts/VerticalPosts.tsx","templates/Home/Common/Links/Links.tsx","hooks/biography/useBiography.ts","templates/Home/Common/About/About.tsx","templates/Home/Common/Posts/Channels.tsx","templates/Home/Common/Connections/ConnectionTeaser.tsx","templates/Home/Common/Connections/Connections.tsx","templates/Home/Classic/HomeClassic.tsx","templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.tsx","templates/Home/Common/Posts/HorizontalPosts.tsx","templates/Home/Content/HomeContent.tsx","templates/Home/Cover/HomeCover.tsx","templates/Home/Home.tsx","webpack://public-app/./src/templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.css?c33c"],"sourcesContent":["import { Article, PostContent, getChannelDrive, PostFile } from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Image from '../../../Image/Image';\nimport Arrow from '../../../ui/Icons/Arrow/Arrow';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Triangle from '../../../ui/Icons/Triangle/Triangle';\nimport Bubble from '../../../ui/Icons/Bubble/Bubble';\nimport useChannel from '../../../../hooks/blog/useChannel';\nimport { ellipsisAtMaxChar } from '../../../../helpers/common';\n\ninterface PostTeaserProps {\n  className?: string;\n  postFile: PostFile<PostContent>;\n  isSingleCol?: boolean;\n  hideImageWhenNone?: boolean;\n  showChannel?: boolean;\n}\n\nconst PostTeaser: FC<PostTeaserProps> = ({\n  className,\n  postFile: { content: post, previewThumbnail },\n\n  isSingleCol,\n  hideImageWhenNone,\n  showChannel,\n}) => {\n  const { data: channel } = useChannel({ channelId: post.channelId });\n\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <Link to={`/home/posts/${channel?.slug}/${post.slug ?? '#'}`} className=\"contents\">\n        <div className=\"relative h-full overflow-hidden rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 \">\n          {(!hideImageWhenNone || post.primaryImageFileId) && (\n            <div className={`relative ${isSingleCol ? 'sm:p-6 sm:pb-2' : ''}`}>\n              {post.primaryImageFileId ? (\n                <>\n                  <Image\n                    className={`${isSingleCol && 'sm:rounded-lg'} ${\n                      post.type === 'Image' || post.type === 'Video'\n                        ? 'h-full max-h-[30rem] w-auto'\n                        : 'h-64 w-full md:h-36 lg:h-48'\n                    } ${post.type === 'Image' && ''} ${post.type === 'Video' && 'aspect-video'}`}\n                    fileId={post.primaryImageFileId}\n                    targetDrive={getChannelDrive(post.channelId)}\n                    alt=\"blog\"\n                    fit=\"cover\"\n                    previewThumbnail={previewThumbnail}\n                  />\n                  {post.type === 'Video' && (\n                    <>\n                      <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                    </>\n                  )}\n                </>\n              ) : !hideImageWhenNone ? (\n                <div\n                  className={`max-w-full overflow-hidden text-ellipsis whitespace-nowrap bg-slate-50 text-slate-200 dark:bg-slate-700 dark:text-slate-600 ${\n                    isSingleCol && 'sm:rounded-lg'\n                  } ${\n                    post.type === 'Image' || post.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${post.type === 'Video' && 'aspect-video'}`}\n                >\n                  <p className=\"p-2 text-9xl \">{post.caption}</p>\n                </div>\n              ) : null}\n            </div>\n          )}\n          <div className=\"px-6 py-4\">\n            <div className=\"flex flex-row text-foreground text-opacity-40\">\n              <span className=\"my-auto text-xs\">\n                {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"my-auto ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {post.type}\n                {showChannel && channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            <h1 className=\"text-lg font-medium text-foreground text-opacity-90\">{post.caption}</h1>\n            {post.type === 'Article' ? (\n              <>\n                <p className=\"my-3 leading-relaxed\">\n                  {ellipsisAtMaxChar((post as Article).abstract, 240)}\n                  {(post as Article)?.abstract?.length > 240 ? (\n                    <span className=\"text-button\">{t('Read more')}</span>\n                  ) : null}\n                </p>\n                <div className=\"flex flex-wrap items-center \">\n                  <span className=\"inline-flex items-center text-button md:mb-2 lg:mb-0\">\n                    {t('Read more')}\n                    <Arrow className=\"ml-2 h-4 w-4\" />\n                  </span>\n                </div>\n              </>\n            ) : null}\n          </div>\n          <div className=\"absolute bottom-0 right-0 flex items-center p-5 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default PostTeaser;\n","import { PostContent, PostFile } from '@youfoundation/dotyoucore-js';\nimport PostTeaser from '../../Common/Card/PostTeaser';\n\nconst ListBlogOverview = ({\n  blogPosts,\n  showChannel,\n}: {\n  blogPosts: PostFile<PostContent>[];\n  showChannel?: boolean;\n}) => {\n  return (\n    <div className=\"-my-4 max-w-4xl\">\n      {blogPosts?.map((postFile) => {\n        return (\n          <PostTeaser\n            key={postFile.content.id}\n            postFile={postFile}\n            className=\"my-4\"\n            isSingleCol={true}\n            hideImageWhenNone={true}\n            showChannel={showChannel}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListBlogOverview;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  PostContent,\n  PostFile,\n  PostType,\n  postTypeToTag,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  postType?: PostType;\n  pageSize?: number;\n};\n\nconst useBlogPosts = ({ channelId, postType, pageSize = 10 }: useBlogPostsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({ channelId }: { channelId?: string }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n\n    let foundBlogPosts: PostFile<PostContent>[];\n    // If located in a specific channel, only fetch those, otherwise fallback to recents;\n    if (channelId) {\n      if (fileData.has(channelId)) {\n        foundBlogPosts =\n          fileData\n            .get(channelId)\n            ?.map((entry) => {\n              return {\n                content: entry.payload,\n                previewThumbnail: entry.header.fileMetadata.appData.previewThumbnail,\n              } as PostFile<PostContent>;\n            })\n            .filter((post) => (postType ? post.content.type === postType : true)) ?? [];\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getPosts(\n            channelId,\n            postType ? [postTypeToTag(postType).toString()] : undefined,\n            undefined,\n            pageSize\n          )\n        ).results;\n      }\n    } else {\n      if (fileData.size >= 1) {\n        foundBlogPosts = [];\n\n        for (const channelId of fileData.keys()) {\n          foundBlogPosts = [\n            ...foundBlogPosts,\n            ...(fileData\n              .get(channelId)\n              ?.map((entry) => {\n                return {\n                  content: entry.payload,\n                  previewThumbnail: entry.header.fileMetadata.appData.previewThumbnail,\n                } as PostFile<PostContent>;\n              })\n              ?.filter((post) => (postType ? post.content.type === postType : true)) ?? []),\n          ];\n\n          // Sorted descending\n          foundBlogPosts.sort((a, b) => b?.content?.dateUnixTime - a?.content?.dateUnixTime);\n        }\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getRecentPosts(\n            postType ? [postTypeToTag(postType).toString()] : undefined,\n            pageSize\n          )\n        ).results;\n      }\n    }\n\n    return foundBlogPosts\n      .filter((post) => post !== undefined && post?.content?.id !== undefined && !post.isDraft)\n      .slice(0, pageSize);\n  };\n\n  return useQuery(['blog-recents', channelId], () => fetchBlogData({ channelId }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    onError: (er) => {\n      console.log(er);\n    },\n  });\n};\n\nexport default useBlogPosts;\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsInfiniteProps = {\n  channelId?: string;\n  pageSize?: number;\n  enabled?: boolean;\n};\n\nconst useBlogPostsInfinite = ({\n  channelId,\n  pageSize = 30,\n  enabled = true,\n}: useBlogPostsInfiniteProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({\n    channelId,\n    pageParam,\n  }: {\n    channelId?: string;\n    pageParam: string | Record<string, string> | undefined;\n  }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    if (channelId) {\n      // run get posts from channel\n      const response = await client.blogPostReadonlyProvider.getPosts(\n        channelId,\n        undefined,\n        typeof pageParam === 'string' ? pageParam : undefined,\n        pageSize\n      );\n\n      return {\n        results: response.results.filter((file) => !file.isDraft),\n        cursorState: response.cursorState,\n      };\n    } else {\n      // run get recents\n      const response = await client.blogPostReadonlyProvider.getRecentPosts(\n        undefined,\n        pageSize,\n        typeof pageParam === 'object' ? pageParam : undefined\n      );\n\n      return {\n        results: response.results.filter((file) => !file.isDraft),\n        cursorState: response.cursorState,\n      };\n    }\n  };\n\n  return useInfiniteQuery(\n    ['blogs', channelId],\n    ({ pageParam }) => fetchBlogData({ channelId, pageParam }),\n    {\n      getNextPageParam: (lastPage) =>\n        (lastPage?.results?.length >= pageSize && lastPage?.cursorState) ?? undefined,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      enabled: enabled,\n      // onError: (er) => {\n      //   console.log(er);\n      // },\n    }\n  );\n};\n\nexport default useBlogPostsInfinite;\n","import { FC } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport { ChannelDefinitionVm } from '../../../../hooks/blog/useChannels';\n\nimport Arrow from '../../../../components/ui/Icons/Arrow/Arrow';\n\ninterface ChannelTeaserProps {\n  className?: string;\n  channel: ChannelDefinitionVm;\n}\n\nconst ChannelTeaser: FC<ChannelTeaserProps> = ({ className, channel }) => {\n  const navigate = useNavigate();\n\n  const targetHref = `/home/posts/${channel.slug ?? '#'}`;\n\n  return (\n    <div className={className} onClick={() => navigate(targetHref)}>\n      <div className=\"relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-4 py-4 dark:bg-gray-800 dark:bg-opacity-40 lg:px-8 lg:py-16\">\n        <h1 className=\"title-font mb-3 text-xl font-medium sm:text-2xl\">{channel.name}</h1>\n        {channel.description && <p className=\"mb-3 leading-relaxed\">{channel.description}</p>}\n        <Link className=\"inline-flex items-center text-button\" to={targetHref}>\n          {t('See all')}\n          <Arrow className=\"ml-2 h-4 w-4\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default ChannelTeaser;\n","import { PostContent, PostFile } from '@youfoundation/dotyoucore-js';\nimport { useRef, useState } from 'react';\nimport ListBlogOverview from '../../../../components/Blog/Overview/ListBlogOverview/ListBlogOverview';\nimport { flattenInfinteData } from '../../../../helpers/common';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport useBlogPosts from '../../../../hooks/blog/useBlogPosts';\nimport useBlogPostsInfinite from '../../../../hooks/blog/useBlogPostsInfinite';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport { useIntersection } from '../../../../hooks/intersection/useIntersection';\nimport ChannelTeaser from '../ChannelTeaser/ChannelTeaser';\n\nconst PAGE_SIZE = 10;\nconst VerticalPosts = ({ className }: { className?: string }) => {\n  const [isStatic, setIsStatic] = useState(true);\n\n  const { data: channels } = useChannels();\n  const { data: staticPosts, isFetchedAfterMount: staticPostsLoaded } = useBlogPosts({\n    pageSize: PAGE_SIZE,\n  });\n  const {\n    data: blogPosts,\n    hasNextPage: hasMoreBlogs,\n    fetchNextPage,\n    isFetchingNextPage,\n    isFetchedAfterMount,\n  } = useBlogPostsInfinite({ pageSize: PAGE_SIZE, enabled: !isStatic });\n\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useIntersection(\n    hasMoreBlogs || (isStatic && staticPostsLoaded) ? loadMoreRef : undefined,\n    () => {\n      if (isStatic) {\n        setIsStatic(false);\n      } else {\n        fetchNextPage();\n      }\n    },\n    true\n  );\n\n  const flattenedPosts = flattenInfinteData<PostFile<PostContent>>(blogPosts, PAGE_SIZE);\n\n  // Combine and remove duplicates from static and dynamic requests\n  const combinedPosts = [\n    ...(staticPosts ? staticPosts : []),\n    ...(flattenedPosts ? flattenedPosts : []),\n  ].reduce((uniquePosts, post) => {\n    if (uniquePosts.some((unique) => unique.content.id === post.content.id)) {\n      return uniquePosts;\n    } else {\n      return [...uniquePosts, post];\n    }\n  }, [] as PostFile<PostContent>[]);\n\n  combinedPosts.sort((a, b) => b.content.dateUnixTime - a.content.dateUnixTime);\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:order-2 lg:w-1/3 xl:px-4\">\n          <div className=\"-my-2\">\n            {channels?.map((channel) => {\n              return (\n                <ChannelTeaser\n                  key={channel.channelId}\n                  channel={channel}\n                  className={'w-full py-2'}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          {combinedPosts && <ListBlogOverview blogPosts={combinedPosts} showChannel={true} />}\n          <div ref={loadMoreRef} className=\"h-1 w-full\"></div>\n          {!hasMoreBlogs && isFetchedAfterMount && (\n            <div className=\"mt-5 bg-button p-2 text-center text-white\">{t('No more posts')}</div>\n          )}\n          {isFetchingNextPage && (\n            <div className=\"mt-5 animate-pulse bg-button p-2 text-center text-white\">\n              {t('Loading..')}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerticalPosts;\n","import Links from '../../../../components/ui/Layout/Links/Links';\n\nconst LinksHome = ({ className }: { className?: string }) => {\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          <Links includeSocials={true} direction={'col'} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LinksHome;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  MinimalProfileFields,\n  Attribute,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useBiography = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchData: () => Promise<\n    { title: string; body: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('sitedata.json');\n    if (fileData.has('bio')) {\n      const bioAttributes = fileData.get('bio')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n          body: attribute.data[MinimalProfileFields.FullBioId] as string,\n          id: attribute.id,\n        };\n      });\n      if (bioAttributes?.length) {\n        return bioAttributes;\n      }\n    }\n\n    const biographyAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId,\n      BuiltInProfiles.PersonalInfoSectionId,\n      [AttributeDefinitions.FullBio.type]\n    );\n\n    return biographyAttributes?.map((attribute) => {\n      return {\n        title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n        body: attribute.data[MinimalProfileFields.FullBioId] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['biography'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBiography;\n","import { ReactNode } from 'react';\nimport useBiography from '../../../../hooks/biography/useBiography';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\n\nconst About = ({ className }: { className?: string }) => {\n  const { home } = useSiteData().data ?? {};\n  const { data: bioData } = useBiography();\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          {home?.leadText && <p className=\"pb-10\">{home.leadText}</p>}\n          {bioData ? (\n            <div className=\"-my-5\">\n              {bioData.map((bioItem) => (\n                <BiographyBlock\n                  title={bioItem.title}\n                  children={bioItem.body}\n                  key={bioItem.id}\n                  className=\"my-5\"\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BiographyBlock = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: string | ReactNode;\n  className: string;\n}) => {\n  return (\n    <div\n      className={`relative overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 py-12 dark:bg-gray-800 dark:bg-opacity-40 ${className}`}\n    >\n      <h1 className=\"title-font mb-3 text-xl font-medium sm:text-2xl\">{title}</h1>\n      <p className=\"leading-relaxed\" style={{ whiteSpace: 'pre-line' }}>\n        {children}\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import useChannels from '../../../../hooks/blog/useChannels';\nimport ChannelTeaser from '../ChannelTeaser/ChannelTeaser';\n\nconst Channels = ({ className }: { className?: string }) => {\n  const { data: channels } = useChannels();\n  return channels?.length ? (\n    <div className={className}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          <div className=\"-m-2 flex flex-row flex-wrap\">\n            {channels.map((channel) => {\n              return (\n                <ChannelTeaser\n                  key={channel.channelId}\n                  channel={channel}\n                  className={'w-full p-2 md:w-1/2'}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\nexport default Channels;\n","import { useRef, useState } from 'react';\nimport useConnectionDetails from '../../../../hooks/connections/useConnectionDetails';\nimport { useIntersection } from '../../../../hooks/intersection/useIntersection';\n\nconst ConnectionTeaser = ({ dotYouId, className }: { dotYouId: string; className: string }) => {\n  const [isInView, setIsInView] = useState(false);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const { data: connectionDetails } = useConnectionDetails({\n    dotYouId: isInView ? dotYouId : undefined,\n  }).fetch;\n\n  const fullName = connectionDetails?.name?.givenName\n    ? `${connectionDetails.name?.givenName ?? ''} ${connectionDetails.name?.surname ?? ''}`\n    : undefined;\n  const title = undefined;\n\n  useIntersection(wrapperRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <div className={`w-full ${className ?? ''}`} ref={wrapperRef}>\n      <a\n        href={`https://${dotYouId}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        className=\"contents\"\n      >\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 p-4 hover:shadow-md dark:border-gray-700 hover:dark:shadow-slate-600\">\n          {connectionDetails?.profileImage ? (\n            <img\n              src={connectionDetails.profileImage.url}\n              width={connectionDetails.profileImage.naturalSize.width}\n              height={connectionDetails.profileImage.naturalSize.height}\n              className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"\n            />\n          ) : (\n            <div className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"></div>\n          )}\n\n          <div className=\"flex-grow text-foreground text-opacity-50\">\n            <h2 className=\"title-font font-medium\">{fullName ?? dotYouId}</h2>\n            <p className=\"\">{title ?? ''}</p>\n            <p className=\"text-right text-sm\">{dotYouId}</p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectionTeaser;\n","import useConnections from '../../../../hooks/connections/useConnections';\nimport ConnectionTeaser from './ConnectionTeaser';\n\nconst Connections = ({ className }: { className?: string }) => {\n  const { data: connections, isFetched: connectionsFetched } = useConnections({}).fetch;\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"py-2 px-2\">\n        {\n          connectionsFetched && connections?.length ? (\n            <div className=\"-m-3 flex flex-wrap\">\n              {connections.map((item, index) => {\n                return (\n                  <ConnectionTeaser\n                    key={index}\n                    dotYouId={item?.dotYouId}\n                    className=\"p-2 md:w-1/2 lg:w-1/3\"\n                  />\n                );\n              })}\n            </div>\n          ) : null\n          // <>{t('No connections')}</>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Connections;\n","import ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport NavPills from '../../../components/ui/Submenu/NavPills';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport VerticalPosts from '../Common/Posts/VerticalPosts';\nimport LinksHome from '../Common/Links/Links';\nimport About from '../Common/About/About';\nimport Channels from '../Common/Posts/Channels';\nimport Connections from '../Common/Connections/Connections';\nimport useTabs from '../../../hooks/tabs/useTabs';\n\nconst HomeClassic = (props: { leadText?: string; templateSettings: unknown; tab?: string }) => {\n  const { tabs, isTabs } = useTabs();\n\n  /// Tabs\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(props.tab || (isTabs ? tabs[0] : null));\n\n  useEffect(() => {\n    if (isTabs && props.tab !== activeTab) {\n      setActiveTab(props.tab ?? tabs[0].key);\n    }\n  }, [props.tab]);\n  /// End tabs\n\n  return (\n    <>\n      <ProfileHero hideLinks={true} />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        <>\n          {isTabs ? (\n            <div className=\"bg-slate-500 bg-opacity-5 dark:bg-slate-500 dark:bg-opacity-5\">\n              <div className=\"container mx-auto overflow-auto px-5 py-4\">\n                <NavPills\n                  onChange={(newTab) => navigate(`/home/${newTab}`)}\n                  items={tabs.map((tab) => {\n                    return { ...tab, isActive: tab.key === activeTab };\n                  })}\n                  disallowWrap={true}\n                />\n              </div>\n            </div>\n          ) : null}\n          <div className=\"container mx-auto px-5\">\n            <div className=\"py-10\">\n              {(activeTab === 'about' || !isTabs) && <About className=\"mb-10\" />}\n              {(activeTab === 'links' || !isTabs) && <LinksHome className=\"mb-10\" />}\n              {isTabs ? activeTab === 'posts' && <VerticalPosts /> : <Channels className=\"mb-10\" />}\n              {(activeTab === 'connections' || !isTabs) && <Connections className=\"mb-10\" />}\n            </div>\n          </div>\n        </>\n      </section>\n    </>\n  );\n};\n\nexport default HomeClassic;\n","import { getChannelDrive, PostContent, PostFile } from '@youfoundation/dotyoucore-js';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useBlogPosts from '../../../../hooks/blog/useBlogPosts';\nimport { ChannelDefinitionVm } from '../../../../hooks/blog/useChannels';\nimport Arrow from '../../../../components/ui/Icons/Arrow/Arrow';\nimport Image from '../../../../components/Image/Image';\n\nrequire('./BlogChannelTeaser.css');\n\ninterface BlogChannelTeaserProps {\n  className?: string;\n  title: string;\n  channel: ChannelDefinitionVm;\n}\n\nexport const BlogChannelTeaser: FC<BlogChannelTeaserProps> = ({ className, title, channel }) => {\n  const [index, setIndex] = useState(0);\n  const [disableAutomaticIndexCalculcation, setDisableAutomaticIndexCalculation] = useState(false);\n  const [maxIndex, setMaxIndex] = useState(1);\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const { data: blogPosts, isFetched: blogsFetched } = useBlogPosts({\n    channelId: channel?.channelId,\n  });\n\n  const doScroll = (direction: number) => {\n    if (scrollContainer?.current) {\n      const newIndex = index + direction;\n      setIndex(newIndex);\n      setDisableAutomaticIndexCalculation(true);\n\n      scrollContainer.current.scrollTo({\n        left: newIndex * scrollContainer.current.clientWidth,\n        behavior: 'smooth',\n      });\n      setMaxIndex(scrollContainer.current.scrollWidth / scrollContainer.current.clientWidth - 1);\n    }\n  };\n\n  const calculateIndex = () => {\n    if (scrollContainer?.current && !disableAutomaticIndexCalculcation) {\n      const calculcatedIndex =\n        scrollContainer.current.scrollLeft / scrollContainer.current.clientWidth;\n      setIndex(calculcatedIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (disableAutomaticIndexCalculcation) {\n      setTimeout(() => {\n        setDisableAutomaticIndexCalculation(false);\n      }, 1000);\n    }\n  }, [disableAutomaticIndexCalculcation]);\n\n  useEffect(() => {\n    // calculate index on load to ensure that there was no scroll state enforced by the browser\n    calculateIndex();\n  }, []);\n\n  if (!blogPosts?.length && blogsFetched) {\n    return null;\n  }\n\n  return (\n    <section className={`body-font overflow-hidden ${className ?? ''}`}>\n      <div className=\"container mx-auto px-5 py-6\">\n        <h2 className=\"mb-5 text-2xl text-gray-600 dark:text-gray-300\">{title}</h2>\n        <div className=\"relative\">\n          <div\n            className=\"overflow-vertical-hidden overflow-horizontal-scroll -m-1 flex flex-nowrap\"\n            ref={scrollContainer}\n            onScroll={calculateIndex}\n          >\n            {blogPosts?.map((postFile) => {\n              return (\n                <BlogTeaser\n                  className=\"w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/6\"\n                  postFile={postFile}\n                  linkRoot={`/home/posts/${channel.slug ? channel.slug + '/' : ''}`}\n                  key={`${postFile?.content?.channelId}_${postFile?.content?.id}`}\n                />\n              );\n            })}\n          </div>\n          {index !== 0 ? (\n            <div className=\"absolute top-0 bottom-20 left-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\" rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(-1)}\n              >\n                <Arrow className=\"rotate-180\" />\n              </button>\n            </div>\n          ) : null}\n          {index < maxIndex ? (\n            <div className=\"absolute bottom-20 top-0 right-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\"rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(+1)}\n              >\n                <Arrow />\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\ninterface BlogTeaserProps {\n  className: string;\n  postFile: PostFile<PostContent>;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({\n  className,\n  postFile: { content: blog, previewThumbnail },\n  linkRoot,\n}) => {\n  return (\n    <div className={`mb-0 flex-shrink-0 p-1  ${className}`}>\n      <Link to={linkRoot + (blog.slug ?? '#')} className=\"contents\">\n        <div className=\"aspect-video overflow-hidden transition-transform duration-300 hover:scale-110\">\n          {blog.primaryImageFileId ? (\n            <Image\n              className=\"h-full w-full object-cover object-center\"\n              fileId={blog.primaryImageFileId}\n              targetDrive={getChannelDrive(blog.channelId)}\n              alt=\"blog\"\n              fit=\"cover\"\n              previewThumbnail={previewThumbnail}\n            />\n          ) : (\n            <div className=\"flex h-full items-center bg-slate-200 p-2  text-center dark:bg-slate-700\">\n              {blog.caption}\n            </div>\n          )}\n        </div>\n        <div>\n          <h2 className=\"title-font text-md fade-overflow max-h-14 pt-2 font-medium text-gray-900 dark:text-gray-200\">\n            {blog.caption}\n          </h2>\n          <span className=\"text-gray-500 md:pt-1 md:text-sm\">\n            {new Date(blog.dateUnixTime).toLocaleDateString()}\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import useChannels from '../../../../hooks/blog/useChannels';\nimport { BlogChannelTeaser } from '../BlogChannelTeaser/BlogChannelTeaser';\n\nconst HorizontalPosts = () => {\n  const { data: channels } = useChannels();\n\n  return (\n    <>\n      {channels?.length\n        ? channels.map((channel) => {\n            return (\n              <BlogChannelTeaser key={channel.channelId} title={channel.name} channel={channel} />\n            );\n          })\n        : null}\n    </>\n  );\n};\n\nexport default HorizontalPosts;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavPills from '../../../components/ui/Submenu/NavPills';\nimport ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport About from '../Common/About/About';\nimport LinksHome from '../Common/Links/Links';\nimport HorizontalPosts from '../Common/Posts/HorizontalPosts';\nimport Channels from '../Common/Posts/Channels';\nimport Connections from '../Common/Connections/Connections';\nimport useTabs from '../../../hooks/tabs/useTabs';\n\nconst HomeContent = (props: { leadText?: string; templateSettings: unknown; tab?: string }) => {\n  const { tabs, isTabs } = useTabs();\n\n  /// Tabs\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(props.tab || (isTabs ? tabs[0] : null));\n\n  useEffect(() => {\n    if (isTabs && props.tab !== activeTab) {\n      setActiveTab(props.tab ?? tabs[0].key);\n    }\n  }, [props.tab]);\n  /// End tabs\n\n  return (\n    <>\n      <ProfileHero />\n      <>\n        {isTabs ? (\n          <div className=\"bg-slate-500 bg-opacity-5 dark:bg-slate-500 dark:bg-opacity-5\">\n            <div className=\"container mx-auto overflow-auto px-5 py-4\">\n              <NavPills\n                onChange={(newTab) => navigate(`/home/${newTab}`)}\n                items={tabs.map((tab) => {\n                  return { ...tab, isActive: tab.key === activeTab };\n                })}\n                disallowWrap={true}\n              />\n            </div>\n          </div>\n        ) : null}\n        <div className=\"container mx-auto px-5\">\n          <div className=\"py-10\">\n            {(activeTab === 'about' || !isTabs) && <About />}\n            {(activeTab === 'links' || !isTabs) && <LinksHome />}\n            {isTabs ? activeTab === 'posts' && <HorizontalPosts /> : <Channels className=\"mb-10\" />}\n            {(activeTab === 'connections' || !isTabs) && <Connections />}\n          </div>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default HomeContent;\n","import ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useSiteData from '../../../hooks/siteData/useSiteData';\nimport { BuiltInProfiles, ProfileConfig } from '@youfoundation/dotyoucore-js';\nimport Image from '../../../components/Image/Image';\nimport useChannels from '../../../hooks/blog/useChannels';\nimport Links from '../../../components/ui/Layout/Links/Links';\nimport ConnectionTeaser from '../Common/Connections/ConnectionTeaser';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport FollowLink from '../../../components/ConnectionActions/FollowLink/FollowLink';\nimport ConnectLink from '../../../components/ConnectionActions/ConnectLink/ConnectLink';\nimport { OwnerName } from '../../../components/Blog/Common/Blocks/Author/Name';\n\nconst HomeCover = (props: { leadText?: string; templateSettings: unknown }) => {\n  const { owner, home } = useSiteData().data ?? {};\n  const { data: channels } = useChannels();\n  const { data: connections } = useConnections({}).fetch;\n\n  if (!owner) {\n    return <></>;\n  }\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  return (\n    <>\n      <section className=\"body-font my-auto\">\n        <div className=\"container mx-auto\">\n          <div className=\"lg:flex\">\n            <div className=\"mb-12 lg:w-1/2\">\n              {owner?.profileImageId && targetDrive ? (\n                <Image\n                  fileId={owner?.profileImageId}\n                  targetDrive={targetDrive}\n                  className=\"w-full max-w-[none] sm:mx-auto md:max-w-[30rem] lg:max-w-[none]\"\n                />\n              ) : null}\n            </div>\n            <div className=\"flex h-full flex-col px-5 lg:w-1/2\">\n              <h1 className=\"mb-4 text-2xl\">\n                <OwnerName />\n                <br />\n                <small>{home?.tagLine ?? ''}</small>\n              </h1>\n              {props?.leadText && <p>{props.leadText}</p>}\n              <div className=\"mt-4 flex flex-row\">\n                <FollowLink className=\"my-1 mr-3\" />\n                <ConnectLink className=\"my-1\" />\n              </div>\n              <div className=\"mt-auto -mb-4 py-12\">\n                {channels?.map((channel) => {\n                  return (\n                    <ChannelTeaser\n                      key={channel.channelId}\n                      channel={channel}\n                      className={'w-full py-4'}\n                    />\n                  );\n                })}\n                <Links className=\"justify-center\" style=\"secondary\" direction=\"row\" />\n              </div>\n            </div>\n          </div>\n          {connections?.length ? (\n            <div className=\"mt-16 mb-20 px-5\">\n              <div className=\"-m-3 flex flex-wrap\">\n                {connections.map((item, index) => {\n                  return (\n                    <ConnectionTeaser\n                      key={index}\n                      dotYouId={item?.dotYouId}\n                      className=\"p-2 md:w-1/2 lg:w-1/3\"\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeCover;\n","import { Helmet } from 'react-helmet-async';\nimport { HomePageTheme } from '@youfoundation/dotyoucore-js';\nimport useSiteData from '../../hooks/siteData/useSiteData';\nimport HomeClassic from './Classic/HomeClassic';\nimport HomeContent from './Content/HomeContent';\nimport HomeCover from './Cover/HomeCover';\nimport useAuth from '../../hooks/auth/useAuth';\nimport SocialFeed from '../SocialFeed/SocialFeed';\n\nconst Home = ({ tab }: { tab?: string }) => {\n  const { isOwner } = useAuth();\n  const { home, owner } = useSiteData().data ?? {};\n\n  if (!home) {\n    return <></>;\n  }\n\n  const renderBody = () => {\n    if (isOwner && (tab === 'feed' || tab === undefined)) {\n      return <SocialFeed />;\n    }\n\n    if (home?.template === HomePageTheme.SocialClassic.toString()) {\n      return (\n        <HomeClassic leadText={home.leadText} templateSettings={home.templateSettings} tab={tab} />\n      );\n    } else if (home?.template === HomePageTheme.ContentProducer.toString()) {\n      return (\n        <HomeContent leadText={home.leadText} templateSettings={home.templateSettings} tab={tab} />\n      );\n    } else {\n      return <HomeCover leadText={home?.leadText} templateSettings={home.templateSettings} />;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{owner?.firstName ?? 'Home'} | Youniverse</title>\n      </Helmet>\n      {renderBody()}\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["className","postFile","post","content","previewThumbnail","isSingleCol","hideImageWhenNone","showChannel","channel","useChannel","channelId","data","to","slug","primaryImageFileId","type","fileId","targetDrive","getChannelDrive","alt","fit","caption","Date","dateUnixTime","toLocaleDateString","undefined","month","day","year","name","ellipsisAtMaxChar","abstract","length","t","blogPosts","map","id","postType","pageSize","useAuth","getSharedSecret","getApiType","fetchBlogData","client","PublicClient","api","sharedSecret","fileReadOnlyProvider","GetFile","fileData","has","foundBlogPosts","get","entry","payload","header","fileMetadata","appData","filter","blogPostReadonlyProvider","getPosts","postTypeToTag","toString","results","size","keys","sort","a","b","getRecentPosts","isDraft","slice","useQuery","refetchOnMount","refetchOnWindowFocus","onError","er","console","log","enabled","pageParam","response","file","cursorState","useInfiniteQuery","getNextPageParam","lastPage","staleTime","Infinity","navigate","useNavigate","targetHref","onClick","description","Arrow","useState","isStatic","setIsStatic","channels","useChannels","useBlogPosts","staticPosts","staticPostsLoaded","isFetchedAfterMount","useBlogPostsInfinite","hasMoreBlogs","hasNextPage","fetchNextPage","isFetchingNextPage","loadMoreRef","useRef","useIntersection","flattenedPosts","flattenInfinteData","combinedPosts","reduce","uniquePosts","some","unique","ListBlogOverview","ref","Links","includeSocials","direction","fetchData","bioAttributes","attribute","title","MinimalProfileFields","body","profileDataProvider","getAttributeVersions","BuiltInProfiles","AttributeDefinitions","biographyAttributes","BiographyBlock","children","style","whiteSpace","home","useSiteData","bioData","useBiography","leadText","bioItem","dotYouId","isInView","setIsInView","wrapperRef","connectionDetails","useConnectionDetails","fetch","fullName","givenName","surname","href","target","rel","profileImage","src","url","width","naturalSize","height","useConnections","connections","connectionsFetched","isFetched","item","index","props","useTabs","tabs","isTabs","tab","activeTab","setActiveTab","useEffect","key","ProfileHero","hideLinks","NavPills","onChange","newTab","items","isActive","disallowWrap","require","BlogChannelTeaser","setIndex","disableAutomaticIndexCalculcation","setDisableAutomaticIndexCalculation","maxIndex","setMaxIndex","scrollContainer","blogsFetched","doScroll","current","newIndex","scrollTo","left","clientWidth","behavior","scrollWidth","calculateIndex","calculcatedIndex","scrollLeft","setTimeout","onScroll","BlogTeaser","linkRoot","blog","Image","owner","alias","ProfileConfig","profileImageId","tagLine","FollowLink","ConnectLink","isOwner","firstName","template","HomePageTheme","templateSettings","SocialFeed"],"sourceRoot":""}