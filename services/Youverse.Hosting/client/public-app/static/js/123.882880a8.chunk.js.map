{"version":3,"file":"static/js/123.882880a8.chunk.js","mappings":"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","sources":["components/Blog/Common/Card/BlogTeaserCard.tsx","components/Blog/Overview/ListBlogOverview/ListBlogOverview.tsx","hooks/blog/useBlogPosts.ts","hooks/blog/useBlogPostsInfinite.ts","templates/Home/Common/ChannelTeaser/ChannelTeaser.tsx","templates/Home/Common/Posts/VerticalPosts.tsx","templates/Home/Common/Links/Links.tsx","hooks/biography/useBiography.ts","templates/Home/Common/About/About.tsx","templates/Home/Common/Posts/Channels.tsx","templates/Home/Common/Connections/ConnectionTeaser.tsx","templates/Home/Common/Connections/Connections.tsx","templates/Home/Classic/HomeClassic.tsx","templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.tsx","templates/Home/Common/Posts/HorizontalPosts.tsx","templates/Home/Content/HomeContent.tsx","templates/Home/Cover/HomeCover.tsx","templates/Home/Home.tsx","webpack://public-app/./src/templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.css?c33c"],"sourcesContent":["import { Article, PostContent, getChannelDrive } from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Image from '../../../Image/Image';\nimport Arrow from '../../../ui/Icons/Arrow/Arrow';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Triangle from '../../../ui/Icons/Triangle/Triangle';\nimport Bubble from '../../../ui/Icons/Bubble/Bubble';\nimport useChannel from '../../../../hooks/blog/useChannel';\n\ninterface BlogTeaserProps {\n  className?: string;\n  blog: PostContent;\n  isSingleCol?: boolean;\n  hideImageWhenNone?: boolean;\n  showChannel?: boolean;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({\n  className,\n  blog,\n\n  isSingleCol,\n  hideImageWhenNone,\n  showChannel,\n}) => {\n  const { data: channel } = useChannel({ channelId: blog.channelId });\n\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <Link to={`/home/posts/${channel?.slug}/${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"relative h-full overflow-hidden rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 \">\n          {(!hideImageWhenNone || blog.primaryImageFileId) && (\n            <div className={`relative ${isSingleCol ? 'sm:p-6 sm:pb-2' : ''}`}>\n              {blog.primaryImageFileId ? (\n                <>\n                  <Image\n                    className={`${isSingleCol && 'sm:rounded-lg'} ${\n                      blog.type === 'Image' || blog.type === 'Video'\n                        ? 'h-full max-h-[30rem] w-auto'\n                        : 'h-64 w-full md:h-36 lg:h-48'\n                    } ${blog.type === 'Image' && ''} ${blog.type === 'Video' && 'aspect-video'}`}\n                    fileId={blog.primaryImageFileId}\n                    targetDrive={getChannelDrive(blog.channelId)}\n                    alt=\"blog\"\n                    cover={true}\n                  />\n                  {blog.type === 'Video' && (\n                    <>\n                      <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                    </>\n                  )}\n                </>\n              ) : !hideImageWhenNone ? (\n                <div\n                  className={`max-w-full overflow-hidden text-ellipsis whitespace-nowrap bg-slate-50 text-slate-200 dark:bg-slate-700 dark:text-slate-600 ${\n                    isSingleCol && 'sm:rounded-lg'\n                  } ${\n                    blog.type === 'Image' || blog.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${blog.type === 'Video' && 'aspect-video'}`}\n                >\n                  <p className=\"p-2 text-9xl \">{blog.caption}</p>\n                </div>\n              ) : null}\n            </div>\n          )}\n          <div className=\"px-6 py-4\">\n            <div className=\"flex flex-row text-foreground text-opacity-40\">\n              <span className=\"my-auto text-xs\">\n                {new Date(blog.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"my-auto ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {blog.type}\n                {showChannel && channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            <h1 className=\"text-lg font-medium text-foreground text-opacity-90\">{blog.caption}</h1>\n            {blog.type === 'Article' ? (\n              <>\n                <p className=\"my-3 leading-relaxed\">{(blog as Article).abstract}</p>\n                <div className=\"flex flex-wrap items-center \">\n                  <span className=\"inline-flex items-center text-button md:mb-2 lg:mb-0\">\n                    {t('Read more')}\n                    <Arrow className=\"ml-2 h-4 w-4\" />\n                  </span>\n                </div>\n              </>\n            ) : null}\n          </div>\n          <div className=\"absolute bottom-0 right-0 flex items-center p-5 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { PostContent } from '@youfoundation/dotyoucore-js';\nimport BlogTeaserCard from '../../Common/Card/BlogTeaserCard';\n\nconst ListBlogOverview = ({\n  blogPosts,\n  showChannel,\n}: {\n  blogPosts: PostContent[];\n  showChannel?: boolean;\n}) => {\n  return (\n    <div className=\"-my-4 max-w-4xl\">\n      {blogPosts?.map((blog) => {\n        return (\n          <BlogTeaserCard\n            key={blog.id}\n            blog={blog}\n            className=\"my-4\"\n            isSingleCol={true}\n            hideImageWhenNone={true}\n            showChannel={showChannel}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListBlogOverview;\n","import { useQuery } from '@tanstack/react-query';\nimport { PostContent, PostType, PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  postType?: PostType;\n  pageSize?: number;\n};\n\nconst useBlogPosts = ({ channelId, postType, pageSize = 10 }: useBlogPostsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({ channelId }: { channelId?: string }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n\n    let foundBlogPosts: PostContent[];\n    // If located in a specific channel, only fetch those, otherwise fallback to recents;\n    if (channelId) {\n      if (fileData.has(channelId)) {\n        foundBlogPosts =\n          fileData\n            .get(channelId)\n            ?.map((entry) => entry.payload as PostContent)\n            .filter((post) => (postType ? post.type === postType : true)) ?? [];\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getPosts(channelId, postType, undefined, pageSize)\n        ).results.map((postFile) => postFile.content);\n      }\n    } else {\n      if (fileData.size >= 1) {\n        foundBlogPosts = [];\n\n        for (const channelId of fileData.keys()) {\n          foundBlogPosts = [\n            ...foundBlogPosts,\n            ...(fileData\n              .get(channelId)\n              ?.map((entry) => entry.payload as PostContent)\n              .filter((post) => (postType ? post.type === postType : true)) ?? []),\n          ];\n\n          // Sorted descending\n          foundBlogPosts.sort((a, b) => b.dateUnixTime - a.dateUnixTime);\n        }\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getRecentPosts(postType, pageSize)\n        ).results.map((postFile) => postFile.content);\n      }\n    }\n\n    return foundBlogPosts\n      .filter((post) => post !== undefined && post.id !== undefined)\n      .slice(0, pageSize);\n  };\n\n  return useQuery(['blog-recents', channelId], () => fetchBlogData({ channelId }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    onError: (er) => {\n      console.log(er);\n    },\n  });\n};\n\nexport default useBlogPosts;\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsInfiniteProps = {\n  channelId?: string;\n  pageSize?: number;\n  enabled?: boolean;\n};\n\nconst useBlogPostsInfinite = ({\n  channelId,\n  pageSize = 30,\n  enabled = true,\n}: useBlogPostsInfiniteProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({\n    channelId,\n    pageParam,\n  }: {\n    channelId?: string;\n    pageParam: string | Record<string, string> | undefined;\n  }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    if (channelId) {\n      // run get posts from channel\n      const response = await client.blogPostReadonlyProvider.getPosts(\n        channelId,\n        undefined,\n        typeof pageParam === 'string' ? pageParam : undefined,\n        pageSize\n      );\n\n      return {\n        results: response.results.map((postFile) => postFile.content),\n        cursorState: response.cursorState,\n      };\n    } else {\n      // run get recents\n      const response = await client.blogPostReadonlyProvider.getRecentPosts(\n        undefined,\n        pageSize,\n        typeof pageParam === 'object' ? pageParam : undefined\n      );\n\n      return {\n        results: response.results.map((postFile) => postFile.content),\n        cursorState: response.cursorState,\n      };\n    }\n  };\n\n  return useInfiniteQuery(\n    ['blogs', channelId],\n    ({ pageParam }) => fetchBlogData({ channelId, pageParam }),\n    {\n      getNextPageParam: (lastPage) =>\n        (lastPage?.results?.length >= pageSize && lastPage?.cursorState) ?? undefined,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      enabled: enabled,\n      // onError: (er) => {\n      //   console.log(er);\n      // },\n    }\n  );\n};\n\nexport default useBlogPostsInfinite;\n","import { FC } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport { ChannelDefinitionVm } from '../../../../hooks/blog/useChannels';\n\nimport Arrow from '../../../../components/ui/Icons/Arrow/Arrow';\n\ninterface ChannelTeaserProps {\n  className?: string;\n  channel: ChannelDefinitionVm;\n}\n\nconst ChannelTeaser: FC<ChannelTeaserProps> = ({ className, channel }) => {\n  const navigate = useNavigate();\n\n  const targetHref = `/home/posts/${channel.slug ?? '#'}`;\n\n  return (\n    <div className={className} onClick={() => navigate(targetHref)}>\n      <div className=\"relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-4 py-4 dark:bg-gray-800 dark:bg-opacity-40 lg:px-8 lg:py-16\">\n        <h1 className=\"title-font mb-3 text-xl font-medium sm:text-2xl\">{channel.name}</h1>\n        {channel.description && <p className=\"mb-3 leading-relaxed\">{channel.description}</p>}\n        <Link className=\"inline-flex items-center text-button\" to={targetHref}>\n          {t('See all')}\n          <Arrow className=\"ml-2 h-4 w-4\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default ChannelTeaser;\n","import { PostContent } from '@youfoundation/dotyoucore-js';\nimport { useRef, useState } from 'react';\nimport ListBlogOverview from '../../../../components/Blog/Overview/ListBlogOverview/ListBlogOverview';\nimport { flattenInfinteData } from '../../../../helpers/common';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport useBlogPosts from '../../../../hooks/blog/useBlogPosts';\nimport useBlogPostsInfinite from '../../../../hooks/blog/useBlogPostsInfinite';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport { useIntersection } from '../../../../hooks/intersection/useIntersection';\nimport ChannelTeaser from '../ChannelTeaser/ChannelTeaser';\n\nconst PAGE_SIZE = 10;\nconst VerticalPosts = ({ className }: { className?: string }) => {\n  const [isStatic, setIsStatic] = useState(true);\n\n  const { data: channels } = useChannels();\n  const { data: staticPosts, isFetchedAfterMount: staticPostsLoaded } = useBlogPosts({\n    pageSize: PAGE_SIZE,\n  });\n  const {\n    data: blogPosts,\n    hasNextPage: hasMoreBlogs,\n    fetchNextPage,\n    isFetchingNextPage,\n    isFetchedAfterMount,\n  } = useBlogPostsInfinite({ pageSize: PAGE_SIZE, enabled: !isStatic });\n\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useIntersection(\n    hasMoreBlogs || (isStatic && staticPostsLoaded) ? loadMoreRef : undefined,\n    () => {\n      if (isStatic) {\n        setIsStatic(false);\n      } else {\n        fetchNextPage();\n      }\n    },\n    true\n  );\n\n  const flattenedPosts = flattenInfinteData<PostContent>(blogPosts, PAGE_SIZE);\n\n  // Combine and remove duplicates from static and dynamic requests\n  const combinedPosts = [\n    ...(staticPosts ? staticPosts : []),\n    ...(flattenedPosts ? flattenedPosts : []),\n  ].reduce((uniquePosts, post) => {\n    if (uniquePosts.some((unique) => unique.id === post.id)) {\n      return uniquePosts;\n    } else {\n      return [...uniquePosts, post];\n    }\n  }, [] as PostContent[]);\n\n  combinedPosts.sort((a, b) => b.dateUnixTime - a.dateUnixTime);\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:order-2 lg:w-1/3 xl:px-4\">\n          <div className=\"-my-2\">\n            {channels?.map((channel) => {\n              return (\n                <ChannelTeaser\n                  key={channel.channelId}\n                  channel={channel}\n                  className={'w-full py-2'}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          {combinedPosts && <ListBlogOverview blogPosts={combinedPosts} showChannel={true} />}\n          <div ref={loadMoreRef} className=\"h-1 w-full\"></div>\n          {!hasMoreBlogs && isFetchedAfterMount && (\n            <div className=\"mt-5 bg-button p-2 text-center text-white\">{t('No more posts')}</div>\n          )}\n          {isFetchingNextPage && (\n            <div className=\"mt-5 animate-pulse bg-button p-2 text-center text-white\">\n              {t('Loading..')}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerticalPosts;\n","import Links from '../../../../components/ui/Layout/Links/Links';\n\nconst LinksHome = ({ className }: { className?: string }) => {\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          <Links includeSocials={true} direction={'col'} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LinksHome;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  MinimalProfileFields,\n  Attribute,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useBiography = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchData: () => Promise<\n    { title: string; body: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('sitedata.json');\n    if (fileData.has('bio')) {\n      const bioAttributes = fileData.get('bio')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n          body: attribute.data[MinimalProfileFields.FullBioId] as string,\n          id: attribute.id,\n        };\n      });\n      if (bioAttributes?.length) {\n        return bioAttributes;\n      }\n    }\n\n    const biographyAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.FullBio.type.toString()\n    );\n\n    return biographyAttributes?.map((attribute) => {\n      return {\n        title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n        body: attribute.data[MinimalProfileFields.FullBioId] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['biography'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBiography;\n","import { ReactNode } from 'react';\nimport useBiography from '../../../../hooks/biography/useBiography';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\n\nconst About = ({ className }: { className?: string }) => {\n  const { home } = useSiteData().data ?? {};\n  const { data: bioData } = useBiography();\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          {home?.leadText && <p className=\"pb-10\">{home.leadText}</p>}\n          {bioData ? (\n            <div className=\"-my-5\">\n              {bioData.map((bioItem) => (\n                <BiographyBlock\n                  title={bioItem.title}\n                  children={bioItem.body}\n                  key={bioItem.id}\n                  className=\"my-5\"\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BiographyBlock = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: string | ReactNode;\n  className: string;\n}) => {\n  return (\n    <div\n      className={`relative overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 py-12 dark:bg-gray-800 dark:bg-opacity-40 ${className}`}\n    >\n      <h1 className=\"title-font mb-3 text-xl font-medium sm:text-2xl\">{title}</h1>\n      <p className=\"leading-relaxed\" style={{ whiteSpace: 'pre-line' }}>\n        {children}\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import useChannels from '../../../../hooks/blog/useChannels';\nimport ChannelTeaser from '../ChannelTeaser/ChannelTeaser';\n\nconst Channels = ({ className }: { className?: string }) => {\n  const { data: channels } = useChannels();\n  return channels?.length ? (\n    <div className={className}>\n      <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n        <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n          <div className=\"-m-2 flex flex-row flex-wrap\">\n            {channels.map((channel) => {\n              return (\n                <ChannelTeaser\n                  key={channel.channelId}\n                  channel={channel}\n                  className={'w-full p-2 md:w-1/2'}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\nexport default Channels;\n","import { useRef, useState } from 'react';\nimport useConnectionDetails from '../../../../hooks/connections/useConnectionDetails';\nimport { useIntersection } from '../../../../hooks/intersection/useIntersection';\n\nconst ConnectionTeaser = ({ dotYouId, className }: { dotYouId: string; className: string }) => {\n  const [isInView, setIsInView] = useState(false);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const { data: connectionDetails } = useConnectionDetails({\n    dotYouId: isInView ? dotYouId : undefined,\n  }).fetch;\n\n  const fullName = connectionDetails?.name?.givenName\n    ? `${connectionDetails.name?.givenName ?? ''} ${connectionDetails.name?.surname ?? ''}`\n    : undefined;\n  const title = undefined;\n\n  useIntersection(wrapperRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <div className={`w-full ${className ?? ''}`} ref={wrapperRef}>\n      <a\n        href={`https://${dotYouId}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        className=\"contents\"\n      >\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 p-4 hover:shadow-md dark:border-gray-700 hover:dark:shadow-slate-600\">\n          {connectionDetails?.profileImage ? (\n            <img\n              src={connectionDetails.profileImage.url}\n              width={connectionDetails.profileImage.naturalSize.width}\n              height={connectionDetails.profileImage.naturalSize.height}\n              className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"\n            />\n          ) : (\n            <div className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"></div>\n          )}\n\n          <div className=\"flex-grow text-foreground text-opacity-50\">\n            <h2 className=\"title-font font-medium\">{fullName ?? dotYouId}</h2>\n            <p className=\"\">{title ?? ''}</p>\n            <p className=\"text-right text-sm\">{dotYouId}</p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectionTeaser;\n","import useConnections from '../../../../hooks/connections/useConnections';\nimport ConnectionTeaser from './ConnectionTeaser';\n\nconst Connections = ({ className }: { className?: string }) => {\n  const { data: connections, isFetched: connectionsFetched } = useConnections({}).fetch;\n\n  return (\n    <div className={className ?? ''}>\n      <div className=\"py-2 px-2\">\n        {\n          connectionsFetched && connections?.length ? (\n            <div className=\"-m-3 flex flex-wrap\">\n              {connections.map((item, index) => {\n                return (\n                  <ConnectionTeaser\n                    key={index}\n                    dotYouId={item?.dotYouId}\n                    className=\"p-2 md:w-1/2 lg:w-1/3\"\n                  />\n                );\n              })}\n            </div>\n          ) : null\n          // <>{t('No connections')}</>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Connections;\n","import ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport NavPills from '../../../components/ui/Submenu/NavPills';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport VerticalPosts from '../Common/Posts/VerticalPosts';\nimport LinksHome from '../Common/Links/Links';\nimport About from '../Common/About/About';\nimport Channels from '../Common/Posts/Channels';\nimport Connections from '../Common/Connections/Connections';\nimport useTabs from '../../../hooks/tabs/useTabs';\n\nconst HomeClassic = (props: { leadText?: string; templateSettings: unknown; tab?: string }) => {\n  const { tabs, isTabs } = useTabs();\n\n  /// Tabs\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(props.tab || (isTabs ? tabs[0] : null));\n\n  useEffect(() => {\n    if (isTabs && props.tab !== activeTab) {\n      setActiveTab(props.tab ?? tabs[0].key);\n    }\n  }, [props.tab]);\n  /// End tabs\n\n  return (\n    <>\n      <ProfileHero hideLinks={true} />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        <>\n          {isTabs ? (\n            <div className=\"bg-slate-500 bg-opacity-5 dark:bg-slate-500 dark:bg-opacity-5\">\n              <div className=\"container mx-auto overflow-auto px-5 py-4\">\n                <NavPills\n                  onChange={(newTab) => navigate(`/home/${newTab}`)}\n                  items={tabs.map((tab) => {\n                    return { ...tab, isActive: tab.key === activeTab };\n                  })}\n                  disallowWrap={true}\n                />\n              </div>\n            </div>\n          ) : null}\n          <div className=\"container mx-auto px-5\">\n            <div className=\"py-10\">\n              {(activeTab === 'about' || !isTabs) && <About className=\"mb-10\" />}\n              {(activeTab === 'links' || !isTabs) && <LinksHome className=\"mb-10\" />}\n              {isTabs ? activeTab === 'posts' && <VerticalPosts /> : <Channels className=\"mb-10\" />}\n              {(activeTab === 'connections' || !isTabs) && <Connections className=\"mb-10\" />}\n            </div>\n          </div>\n        </>\n      </section>\n    </>\n  );\n};\n\nexport default HomeClassic;\n","import { getChannelDrive, PostContent } from '@youfoundation/dotyoucore-js';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useBlogPosts from '../../../../hooks/blog/useBlogPosts';\nimport { ChannelDefinitionVm } from '../../../../hooks/blog/useChannels';\nimport Arrow from '../../../../components/ui/Icons/Arrow/Arrow';\nimport Image from '../../../../components/Image/Image';\n\nrequire('./BlogChannelTeaser.css');\n\ninterface BlogChannelTeaserProps {\n  className?: string;\n  title: string;\n  channel: ChannelDefinitionVm;\n}\n\nexport const BlogChannelTeaser: FC<BlogChannelTeaserProps> = ({ className, title, channel }) => {\n  const [index, setIndex] = useState(0);\n  const [disableAutomaticIndexCalculcation, setDisableAutomaticIndexCalculation] = useState(false);\n  const [maxIndex, setMaxIndex] = useState(1);\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const { data: blogPosts, isFetched: blogsFetched } = useBlogPosts({\n    channelId: channel?.channelId,\n  });\n\n  const doScroll = (direction: number) => {\n    if (scrollContainer?.current) {\n      const newIndex = index + direction;\n      setIndex(newIndex);\n      setDisableAutomaticIndexCalculation(true);\n\n      scrollContainer.current.scrollTo({\n        left: newIndex * scrollContainer.current.clientWidth,\n        behavior: 'smooth',\n      });\n      setMaxIndex(scrollContainer.current.scrollWidth / scrollContainer.current.clientWidth - 1);\n    }\n  };\n\n  const calculateIndex = () => {\n    if (scrollContainer?.current && !disableAutomaticIndexCalculcation) {\n      const calculcatedIndex =\n        scrollContainer.current.scrollLeft / scrollContainer.current.clientWidth;\n      setIndex(calculcatedIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (disableAutomaticIndexCalculcation) {\n      setTimeout(() => {\n        setDisableAutomaticIndexCalculation(false);\n      }, 1000);\n    }\n  }, [disableAutomaticIndexCalculcation]);\n\n  useEffect(() => {\n    // calculate index on load to ensure that there was no scroll state enforced by the browser\n    calculateIndex();\n  }, []);\n\n  if (!blogPosts?.length && blogsFetched) {\n    return null;\n  }\n\n  return (\n    <section className={`body-font overflow-hidden ${className ?? ''}`}>\n      <div className=\"container mx-auto px-5 py-6\">\n        <h2 className=\"mb-5 text-2xl text-gray-600 dark:text-gray-300\">{title}</h2>\n        <div className=\"relative\">\n          <div\n            className=\"overflow-vertical-hidden overflow-horizontal-scroll -m-1 flex flex-nowrap\"\n            ref={scrollContainer}\n            onScroll={calculateIndex}\n          >\n            {blogPosts?.map((blog) => {\n              return (\n                <BlogTeaser\n                  className=\"w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/6\"\n                  blog={blog}\n                  linkRoot={`/home/posts/${channel.slug ? channel.slug + '/' : ''}`}\n                  key={`${blog.channelId}_${blog.id}`}\n                />\n              );\n            })}\n          </div>\n          {index !== 0 ? (\n            <div className=\"absolute top-0 bottom-20 left-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\" rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(-1)}\n              >\n                <Arrow className=\"rotate-180\" />\n              </button>\n            </div>\n          ) : null}\n          {index < maxIndex ? (\n            <div className=\"absolute bottom-20 top-0 right-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\"rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(+1)}\n              >\n                <Arrow />\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\ninterface BlogTeaserProps {\n  className: string;\n  blog: PostContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  return (\n    <div className={`mb-0 flex-shrink-0 p-1  ${className}`}>\n      <Link to={linkRoot + (blog.slug ?? '#')} className=\"contents\">\n        <div className=\"aspect-video overflow-hidden transition-transform duration-300 hover:scale-110\">\n          {blog.primaryImageFileId ? (\n            <Image\n              className=\"h-full w-full object-cover object-center\"\n              fileId={blog.primaryImageFileId}\n              targetDrive={getChannelDrive(blog.channelId)}\n              alt=\"blog\"\n              cover={true}\n            />\n          ) : (\n            <div className=\"flex h-full items-center bg-slate-200 p-2  text-center dark:bg-slate-700\">\n              {blog.caption}\n            </div>\n          )}\n        </div>\n        <div>\n          <h2 className=\"title-font text-md fade-overflow max-h-14 pt-2 font-medium text-gray-900 dark:text-gray-200\">\n            {blog.caption}\n          </h2>\n          <span className=\"text-gray-500 md:pt-1 md:text-sm\">\n            {new Date(blog.dateUnixTime).toLocaleDateString()}\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import useChannels from '../../../../hooks/blog/useChannels';\nimport { BlogChannelTeaser } from '../BlogChannelTeaser/BlogChannelTeaser';\n\nconst HorizontalPosts = () => {\n  const { data: channels } = useChannels();\n\n  return (\n    <>\n      {channels?.length\n        ? channels.map((channel) => {\n            return (\n              <BlogChannelTeaser key={channel.channelId} title={channel.name} channel={channel} />\n            );\n          })\n        : null}\n    </>\n  );\n};\n\nexport default HorizontalPosts;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavPills from '../../../components/ui/Submenu/NavPills';\nimport ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport About from '../Common/About/About';\nimport LinksHome from '../Common/Links/Links';\nimport HorizontalPosts from '../Common/Posts/HorizontalPosts';\nimport Channels from '../Common/Posts/Channels';\nimport Connections from '../Common/Connections/Connections';\nimport useTabs from '../../../hooks/tabs/useTabs';\n\nconst HomeContent = (props: { leadText?: string; templateSettings: unknown; tab?: string }) => {\n  const { tabs, isTabs } = useTabs();\n\n  /// Tabs\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(props.tab || (isTabs ? tabs[0] : null));\n\n  useEffect(() => {\n    if (isTabs && props.tab !== activeTab) {\n      setActiveTab(props.tab ?? tabs[0].key);\n    }\n  }, [props.tab]);\n  /// End tabs\n\n  return (\n    <>\n      <ProfileHero />\n      <>\n        {isTabs ? (\n          <div className=\"bg-slate-500 bg-opacity-5 dark:bg-slate-500 dark:bg-opacity-5\">\n            <div className=\"container mx-auto overflow-auto px-5 py-4\">\n              <NavPills\n                onChange={(newTab) => navigate(`/home/${newTab}`)}\n                items={tabs.map((tab) => {\n                  return { ...tab, isActive: tab.key === activeTab };\n                })}\n                disallowWrap={true}\n              />\n            </div>\n          </div>\n        ) : null}\n        <div className=\"container mx-auto px-5\">\n          <div className=\"py-10\">\n            {(activeTab === 'about' || !isTabs) && <About />}\n            {(activeTab === 'links' || !isTabs) && <LinksHome />}\n            {isTabs ? activeTab === 'posts' && <HorizontalPosts /> : <Channels className=\"mb-10\" />}\n            {(activeTab === 'connections' || !isTabs) && <Connections />}\n          </div>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default HomeContent;\n","import ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useSiteData from '../../../hooks/siteData/useSiteData';\nimport { BuiltInProfiles, ProfileConfig } from '@youfoundation/dotyoucore-js';\nimport Image from '../../../components/Image/Image';\nimport useChannels from '../../../hooks/blog/useChannels';\nimport Links from '../../../components/ui/Layout/Links/Links';\nimport ConnectionTeaser from '../Common/Connections/ConnectionTeaser';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport FollowLink from '../../../components/ConnectionActions/FollowLink/FollowLink';\nimport ConnectLink from '../../../components/ConnectionActions/ConnectLink/ConnectLink';\n\nconst HomeCover = (props: { leadText?: string; templateSettings: unknown }) => {\n  const { owner, home } = useSiteData().data ?? {};\n  const { data: channels } = useChannels();\n  const { data: connections } = useConnections({}).fetch;\n\n  if (!owner) {\n    return <></>;\n  }\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  return (\n    <>\n      <section className=\"body-font my-auto\">\n        <div className=\"container mx-auto\">\n          <div className=\"lg:flex\">\n            <div className=\"mb-12 lg:w-1/2\">\n              {owner?.profileImageId && targetDrive ? (\n                <Image\n                  fileId={owner?.profileImageId}\n                  targetDrive={targetDrive}\n                  className=\"w-full max-w-[none] sm:mx-auto md:max-w-[30rem] lg:max-w-[none]\"\n                />\n              ) : null}\n            </div>\n            <div className=\"flex h-full flex-col px-5 lg:w-1/2\">\n              <h1 className=\"mb-4 text-2xl\">\n                {owner?.firstName ?? ''} {owner?.surName ?? ''}\n                <br />\n                <small>{home?.tagLine ?? ''}</small>\n              </h1>\n              {props?.leadText && <p>{props.leadText}</p>}\n              <div className=\"mt-4 flex flex-row\">\n                <FollowLink className=\"my-1 mr-3\" />\n                <ConnectLink className=\"my-1\" />\n              </div>\n              <div className=\"mt-auto -mb-4 py-12\">\n                {channels?.map((channel) => {\n                  return (\n                    <ChannelTeaser\n                      key={channel.channelId}\n                      channel={channel}\n                      className={'w-full py-4'}\n                    />\n                  );\n                })}\n                <Links className=\"justify-center\" style=\"secondary\" direction=\"row\" />\n              </div>\n            </div>\n          </div>\n          {connections?.length ? (\n            <div className=\"mt-16 mb-20 px-5\">\n              <div className=\"-m-3 flex flex-wrap\">\n                {connections.map((item, index) => {\n                  return (\n                    <ConnectionTeaser\n                      key={index}\n                      dotYouId={item?.dotYouId}\n                      className=\"p-2 md:w-1/2 lg:w-1/3\"\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeCover;\n","import { Helmet } from 'react-helmet-async';\nimport { HomePageTheme } from '@youfoundation/dotyoucore-js';\nimport useSiteData from '../../hooks/siteData/useSiteData';\nimport HomeClassic from './Classic/HomeClassic';\nimport HomeContent from './Content/HomeContent';\nimport HomeCover from './Cover/HomeCover';\nimport useAuth from '../../hooks/auth/useAuth';\nimport SocialFeed from '../SocialFeed/SocialFeed';\n\nconst Home = ({ tab }: { tab?: string }) => {\n  const { isOwner } = useAuth();\n  const { home, owner } = useSiteData().data ?? {};\n\n  if (!home) {\n    return <></>;\n  }\n\n  const renderBody = () => {\n    if (isOwner && (tab === 'feed' || tab === undefined)) {\n      return <SocialFeed />;\n    }\n\n    if (home?.template === HomePageTheme.SocialClassic.toString()) {\n      return (\n        <HomeClassic leadText={home.leadText} templateSettings={home.templateSettings} tab={tab} />\n      );\n    } else if (home?.template === HomePageTheme.ContentProducer.toString()) {\n      return (\n        <HomeContent leadText={home.leadText} templateSettings={home.templateSettings} tab={tab} />\n      );\n    } else {\n      return <HomeCover leadText={home?.leadText} templateSettings={home.templateSettings} />;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{owner?.firstName ?? 'Home'} | Youniverse</title>\n      </Helmet>\n      {renderBody()}\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["className","blog","isSingleCol","hideImageWhenNone","showChannel","channel","useChannel","channelId","data","to","slug","primaryImageFileId","type","fileId","targetDrive","getChannelDrive","alt","cover","caption","Date","dateUnixTime","toLocaleDateString","undefined","month","day","year","name","abstract","t","blogPosts","map","id","postType","pageSize","useAuth","getSharedSecret","getApiType","fetchBlogData","client","PublicClient","api","sharedSecret","fileReadOnlyProvider","GetFile","fileData","has","foundBlogPosts","get","entry","payload","filter","post","blogPostReadonlyProvider","getPosts","results","postFile","content","size","keys","sort","a","b","getRecentPosts","slice","useQuery","refetchOnMount","refetchOnWindowFocus","onError","er","console","log","enabled","pageParam","response","cursorState","useInfiniteQuery","getNextPageParam","lastPage","length","staleTime","Infinity","navigate","useNavigate","targetHref","onClick","description","useState","isStatic","setIsStatic","channels","useChannels","useBlogPosts","staticPosts","staticPostsLoaded","isFetchedAfterMount","useBlogPostsInfinite","hasMoreBlogs","hasNextPage","fetchNextPage","isFetchingNextPage","loadMoreRef","useRef","useIntersection","flattenedPosts","flattenInfinteData","combinedPosts","reduce","uniquePosts","some","unique","ChannelTeaser","ListBlogOverview","ref","Links","includeSocials","direction","fetchData","bioAttributes","attribute","title","MinimalProfileFields","body","profileDataProvider","getAttributeVersions","BuiltInProfiles","AttributeDefinitions","biographyAttributes","BiographyBlock","children","style","whiteSpace","home","useSiteData","bioData","useBiography","leadText","bioItem","dotYouId","isInView","setIsInView","wrapperRef","connectionDetails","useConnectionDetails","fetch","fullName","givenName","surname","href","target","rel","profileImage","src","url","width","naturalSize","height","useConnections","connections","connectionsFetched","isFetched","item","index","props","useTabs","tabs","isTabs","tab","activeTab","setActiveTab","useEffect","key","ProfileHero","hideLinks","NavPills","onChange","newTab","items","isActive","disallowWrap","require","BlogChannelTeaser","setIndex","disableAutomaticIndexCalculcation","setDisableAutomaticIndexCalculation","maxIndex","setMaxIndex","scrollContainer","blogsFetched","doScroll","current","newIndex","scrollTo","left","clientWidth","behavior","scrollWidth","calculateIndex","calculcatedIndex","scrollLeft","setTimeout","onScroll","BlogTeaser","linkRoot","Arrow","Image","owner","alias","ProfileConfig","profileImageId","firstName","surName","tagLine","FollowLink","ConnectLink","isOwner","template","HomePageTheme","templateSettings","SocialFeed"],"sourceRoot":""}