{"version":3,"file":"static/js/729.f48c5f56.chunk.js","mappings":"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","sources":["components/Blog/Common/Card/BlogTeaserCard.tsx","components/Blog/Overview/ListBlogOverview/ListBlogOverview.tsx","components/ui/Icons/Arrow/Arrow.tsx","components/ui/Icons/Bubble/Bubble.tsx","components/ui/Icons/Triangle/Triangle.tsx","hooks/blog/useBlogPostsInfinite.ts","hooks/blog/useChannel.ts","hooks/blog/useChannels.ts","components/ui/Submenu/Submenu.tsx","components/Blog/Overview/CardBlogOverview/CardBlogOverview.tsx","components/Blog/Overview/MasonryBlogOverview/MasonryBlogOverview.tsx","templates/Blog/Overview/BlogOverview.tsx"],"sourcesContent":["import { Article, PostContent, getChannelDrive } from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Image from '../../../Image/Image';\nimport Arrow from '../../../ui/Icons/Arrow/Arrow';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Triangle from '../../../ui/Icons/Triangle/Triangle';\nimport Bubble from '../../../ui/Icons/Bubble/Bubble';\nimport useChannel from '../../../../hooks/blog/useChannel';\n\ninterface BlogTeaserProps {\n  className?: string;\n  blog: PostContent;\n  isSingleCol?: boolean;\n  hideImageWhenNone?: boolean;\n  showChannel?: boolean;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({\n  className,\n  blog,\n\n  isSingleCol,\n  hideImageWhenNone,\n  showChannel,\n}) => {\n  const { data: channel } = useChannel({ channelId: blog.channelId });\n\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <Link to={`/home/posts/${channel?.slug}/${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"relative h-full overflow-hidden rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 \">\n          {(!hideImageWhenNone || blog.primaryImageFileId) && (\n            <div className={`relative ${isSingleCol ? 'sm:p-6 sm:pb-2' : ''}`}>\n              {blog.primaryImageFileId ? (\n                <>\n                  <Image\n                    className={`${isSingleCol && 'sm:rounded-lg'} ${\n                      blog.type === 'Image' || blog.type === 'Video'\n                        ? 'h-full max-h-[30rem] w-auto'\n                        : 'h-64 w-full md:h-36 lg:h-48'\n                    } ${blog.type === 'Image' && ''} ${blog.type === 'Video' && 'aspect-video'}`}\n                    fileId={blog.primaryImageFileId}\n                    targetDrive={getChannelDrive(blog.channelId)}\n                    alt=\"blog\"\n                    cover={true}\n                  />\n                  {blog.type === 'Video' && (\n                    <>\n                      <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                    </>\n                  )}\n                </>\n              ) : !hideImageWhenNone ? (\n                <div\n                  className={`max-w-full overflow-hidden text-ellipsis whitespace-nowrap bg-slate-50 text-slate-200 dark:bg-slate-700 dark:text-slate-600 ${\n                    isSingleCol && 'sm:rounded-lg'\n                  } ${\n                    blog.type === 'Image' || blog.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${blog.type === 'Video' && 'aspect-video'}`}\n                >\n                  <p className=\"p-2 text-9xl \">{blog.caption}</p>\n                </div>\n              ) : null}\n            </div>\n          )}\n          <div className=\"px-6 py-4\">\n            <div className=\"flex flex-row text-foreground text-opacity-40\">\n              <span className=\"my-auto text-xs\">\n                {new Date(blog.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"my-auto ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {blog.type}\n                {showChannel && channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            <h1 className=\"text-lg font-medium text-foreground text-opacity-90\">{blog.caption}</h1>\n            {blog.type === 'Article' ? (\n              <>\n                <p className=\"my-3 leading-relaxed\">{(blog as Article).abstract}</p>\n                <div className=\"flex flex-wrap items-center \">\n                  <span className=\"inline-flex items-center text-button md:mb-2 lg:mb-0\">\n                    {t('Read more')}\n                    <Arrow className=\"ml-2 h-4 w-4\" />\n                  </span>\n                </div>\n              </>\n            ) : null}\n          </div>\n          <div className=\"absolute bottom-0 right-0 flex items-center p-5 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { PostContent } from '@youfoundation/dotyoucore-js';\nimport BlogTeaserCard from '../../Common/Card/BlogTeaserCard';\n\nconst ListBlogOverview = ({\n  blogPosts,\n  showChannel,\n}: {\n  blogPosts: PostContent[];\n  showChannel?: boolean;\n}) => {\n  return (\n    <div className=\"-my-4 max-w-4xl\">\n      {blogPosts?.map((blog) => {\n        return (\n          <BlogTeaserCard\n            key={blog.id}\n            blog={blog}\n            className=\"my-4\"\n            isSingleCol={true}\n            hideImageWhenNone={true}\n            showChannel={showChannel}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListBlogOverview;\n","import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsInfiniteProps = {\n  channelId?: string;\n  pageSize?: number;\n  enabled?: boolean;\n};\n\nconst useBlogPostsInfinite = ({\n  channelId,\n  pageSize = 30,\n  enabled = true,\n}: useBlogPostsInfiniteProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({\n    channelId,\n    pageParam,\n  }: {\n    channelId?: string;\n    pageParam: string | Record<string, string> | undefined;\n  }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    if (channelId) {\n      // run get posts from channel\n      const response = await client.blogPostReadonlyProvider.getPosts(\n        channelId,\n        undefined,\n        typeof pageParam === 'string' ? pageParam : undefined,\n        pageSize\n      );\n\n      return {\n        results: response.results.map((postFile) => postFile.content),\n        cursorState: response.cursorState,\n      };\n    } else {\n      // run get recents\n      const response = await client.blogPostReadonlyProvider.getRecentPosts(\n        undefined,\n        pageSize,\n        typeof pageParam === 'object' ? pageParam : undefined\n      );\n\n      return {\n        results: response.results.map((postFile) => postFile.content),\n        cursorState: response.cursorState,\n      };\n    }\n  };\n\n  return useInfiniteQuery(\n    ['blogs', channelId],\n    ({ pageParam }) => fetchBlogData({ channelId, pageParam }),\n    {\n      getNextPageParam: (lastPage) =>\n        (lastPage?.results?.length >= pageSize && lastPage?.cursorState) ?? undefined,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      enabled: enabled,\n      // onError: (er) => {\n      //   console.log(er);\n      // },\n    }\n  );\n};\n\nexport default useBlogPostsInfinite;\n","import { useQuery } from '@tanstack/react-query';\nimport { BlogConfig, ChannelDefinition, PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nimport { ChannelDefinitionVm, parseChannelTemplate } from './useChannels';\n\ntype useChannelsProps = {\n  channelSlug?: string;\n  channelId?: string;\n};\n\nconst useChannel = ({ channelSlug, channelId }: useChannelsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async ({ channelSlug, channelId }: useChannelsProps) => {\n    if (!channelSlug && !channelId) {\n      return;\n    }\n\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channel: ChannelDefinition | undefined = undefined;\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const foundEntry = entry.find(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n              BlogConfig.ChannelDefinitionFileType &&\n            (channelSlug\n              ? possibleChannel.payload.slug === channelSlug\n              : possibleChannel.payload.channelId === channelId)\n        );\n        if (foundEntry) {\n          channel = foundEntry.payload as ChannelDefinition;\n        }\n      });\n    }\n\n    if (!channel) {\n      channel = channelSlug\n        ? await client.blogPostReadonlyProvider.getChannelDefinitionBySlug(channelSlug)\n        : channelId\n        ? await client.blogPostReadonlyProvider.getChannelDefinition(channelId)\n        : undefined;\n    }\n\n    if (channel) {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    }\n    return;\n  };\n\n  return useQuery(\n    ['channel', channelSlug || channelId],\n    () => fetchChannelData({ channelSlug, channelId }),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }\n  );\n};\n\nexport default useChannel;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  BlogConfig,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  template: ChannelTemplate;\n}\n\nexport const parseChannelTemplate = (templateId: number | undefined) => {\n  return parseInt(templateId + '') === ChannelTemplate.LargeCards\n    ? ChannelTemplate.LargeCards\n    : parseInt(templateId + '') === ChannelTemplate.MasonryLayout\n    ? ChannelTemplate.MasonryLayout\n    : ChannelTemplate.ClassicBlog;\n};\n\nconst useChannels = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinition[] = [];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const entries = entry.filter(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n            BlogConfig.ChannelDefinitionFileType\n        );\n        channels = [\n          ...channels,\n          ...entries.map((entry) => {\n            return { ...entry.payload } as ChannelDefinition;\n          }),\n        ];\n      });\n    }\n\n    if (!channels?.length) {\n      channels = await client.blogPostReadonlyProvider.getChannels();\n    }\n\n    return channels.map((channel) => {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return useQuery(['channels'], () => fetchChannelData(), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","import { FC, ReactNode } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: ReactNode; text?: string; key: string; path: string; className?: string }[];\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items }) => {\n  const navigate = useNavigate();\n  const forceMobileView = items?.length >= 6;\n\n  return (\n    <>\n      <div\n        className={`hidden flex-col flex-wrap ${!forceMobileView ? 'sm:flex' : ''} sm:flex-row ${\n          className ?? ''\n        }`}\n      >\n        {items.map((item) => {\n          return (\n            // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n            <NavLink\n              className={({ isActive }) =>\n                `flex-grow cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                  isActive\n                    ? 'border-indigo-500 text-button dark:text-indigo-400'\n                    : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n                } ${item.className ?? ''}`\n              }\n              to={item.path}\n              key={item.key}\n              end\n            >\n              {item.title}\n            </NavLink>\n          );\n        })}\n      </div>\n      <select\n        className={`${\n          !forceMobileView ? 'sm:hidden' : ''\n        } mb-8 w-full rounded border border-gray-300 bg-white py-4 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100`}\n        onChange={(e) => navigate(e.target.value)}\n        defaultValue={window.location.pathname}\n      >\n        {items.map((item) => {\n          return (\n            <option key={item.key} value={item.path}>\n              {item.text || item.title}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n\nexport default Submenu;\n","import { PostContent } from '@youfoundation/dotyoucore-js';\nimport BlogTeaserCard from '../../Common/Card/BlogTeaserCard';\n\nconst CardBlogOverview = ({ blogPosts }: { blogPosts: PostContent[] }) => {\n  return (\n    <div className=\"-m-4 flex flex-wrap\">\n      {blogPosts?.map((blog) => {\n        return <BlogTeaserCard key={blog.id} blog={blog} className=\"p-4 md:w-1/2 lg:w-1/3\" />;\n      })}\n    </div>\n  );\n};\n\nexport default CardBlogOverview;\n","import { PostContent } from '@youfoundation/dotyoucore-js';\nimport { useCallback, useEffect, useState } from 'react';\nimport BlogTeaserCard from '../../Common/Card/BlogTeaserCard';\n\nconst MasonryBlogOverview = ({ blogPosts }: { blogPosts: PostContent[] }) => {\n  const [cols, setCols] = useState(1);\n\n  /// Function to reorder the array to make it fit in the masonry layout which by\n  ///  default is ordered from top to bottom, instead of left to right\n  ///  credit: https://github.com/jessekorzan/masonry-css-js/blob/master/src/App.js\n  const reorder = (arr: PostContent[], columns: number) => {\n    const cols = columns;\n    const out = [];\n    let col = 0;\n    while (col < cols) {\n      for (let i = 0; i < arr.length; i += cols) {\n        const _val = arr[i + col];\n        if (_val !== undefined) out.push(_val);\n      }\n      col++;\n    }\n    return out;\n  };\n\n  const calculateCols = useCallback(() => {\n    const windowWidth = document.documentElement.clientWidth;\n    const cols = windowWidth >= 1280 ? 4 : windowWidth >= 1024 ? 3 : windowWidth >= 640 ? 2 : 1;\n    setCols(cols);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', calculateCols);\n\n    calculateCols();\n\n    return () => {\n      window.removeEventListener('resize', calculateCols);\n    };\n  }, [calculateCols]);\n\n  return (\n    <div className=\"-my-4 gap-4 sm:columns-2 lg:columns-3 xl:columns-4\">\n      {reorder(blogPosts, cols).map((blog) => {\n        return (\n          <BlogTeaserCard className=\"py-2\" key={blog.id} blog={blog} hideImageWhenNone={true} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MasonryBlogOverview;\n","import { Helmet } from 'react-helmet-async';\n\nimport Submenu from '../../../components/ui/Submenu/Submenu';\nimport { useParams } from 'react-router-dom';\nimport { BlogConfig, ChannelTemplate, PostContent } from '@youfoundation/dotyoucore-js';\nimport { useRef } from 'react';\nimport useChannels from '../../../hooks/blog/useChannels';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlogPostsInfinite from '../../../hooks/blog/useBlogPostsInfinite';\nimport CardBlogOverview from '../../../components/Blog/Overview/CardBlogOverview/CardBlogOverview';\nimport ListBlogOverview from '../../../components/Blog/Overview/ListBlogOverview/ListBlogOverview';\nimport MasonryBlogOverview from '../../../components/Blog/Overview/MasonryBlogOverview/MasonryBlogOverview';\nimport { useIntersection } from '../../../hooks/intersection/useIntersection';\nimport useChannel from '../../../hooks/blog/useChannel';\nimport { flattenInfinteData } from '../../../helpers/common';\n\nconst PAGE_SIZE = 10;\nconst Overview = () => {\n  const { channelKey } = useParams();\n\n  const { data: channels } = useChannels();\n  const { data: activeChannel } = useChannel(\n    channelKey ? { channelSlug: channelKey } : { channelId: BlogConfig.PublicChannel.channelId }\n  );\n\n  const {\n    data,\n    hasNextPage: hasMoreBlogs,\n    fetchNextPage,\n  } = useBlogPostsInfinite({\n    channelId: activeChannel?.channelId,\n    pageSize: PAGE_SIZE,\n  });\n\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useIntersection(\n    hasMoreBlogs ? loadMoreRef : undefined,\n    () => {\n      fetchNextPage();\n    },\n    true\n  );\n\n  const ListComponent = activeChannel\n    ? activeChannel.template === ChannelTemplate.LargeCards\n      ? CardBlogOverview\n      : activeChannel.template === ChannelTemplate.MasonryLayout\n      ? MasonryBlogOverview\n      : ListBlogOverview\n    : ListBlogOverview;\n\n  const blogPosts = flattenInfinteData<PostContent>(\n    data,\n    PAGE_SIZE,\n    (a, b) => b.dateUnixTime - a.dateUnixTime\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('Blog')} | Youniverse</title>\n      </Helmet>\n\n      <section className=\"py-5\">\n        <div className=\"container mx-auto px-5\">\n          <section className=\"body-font text-gray-600 dark:text-gray-400\">\n            {channels && channels.length > 1 ? (\n              <Submenu\n                className=\"mb-8\"\n                items={channels.map((channel) => {\n                  return {\n                    key: channel.channelId,\n                    title: channel.name,\n                    path: `/home/posts/${channel.slug}`,\n                  };\n                })}\n              />\n            ) : null}\n            {blogPosts?.length ? (\n              <ListComponent blogPosts={blogPosts} />\n            ) : (\n              <>{t('No posts found')}</>\n            )}\n\n            <div ref={loadMoreRef} className=\"h-1 w-full\"></div>\n          </section>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Overview;\n"],"names":["className","blog","isSingleCol","hideImageWhenNone","showChannel","channel","useChannel","channelId","data","to","slug","primaryImageFileId","type","fileId","targetDrive","getChannelDrive","alt","cover","caption","Date","dateUnixTime","toLocaleDateString","undefined","month","day","year","name","abstract","t","blogPosts","map","id","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","xmlns","pageSize","enabled","useAuth","getSharedSecret","getApiType","fetchBlogData","pageParam","client","PublicClient","api","sharedSecret","blogPostReadonlyProvider","getPosts","response","results","postFile","content","cursorState","getRecentPosts","useInfiniteQuery","getNextPageParam","lastPage","length","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","channelSlug","fetchChannelData","fileReadOnlyProvider","GetFile","fileData","forEach","entry","foundEntry","find","possibleChannel","header","fileMetadata","appData","fileType","BlogConfig","payload","getChannelDefinitionBySlug","getChannelDefinition","template","parseChannelTemplate","templateId","useQuery","parseInt","ChannelTemplate","channels","entries","filter","getChannels","items","navigate","useNavigate","forceMobileView","item","isActive","path","end","title","key","onChange","e","target","value","defaultValue","window","location","pathname","text","BlogTeaserCard","useState","cols","setCols","calculateCols","useCallback","windowWidth","document","documentElement","clientWidth","useEffect","addEventListener","removeEventListener","arr","columns","out","col","i","_val","push","reorder","channelKey","useParams","useChannels","activeChannel","useBlogPostsInfinite","hasMoreBlogs","hasNextPage","fetchNextPage","loadMoreRef","useRef","useIntersection","ListComponent","CardBlogOverview","MasonryBlogOverview","ListBlogOverview","flattenInfinteData","a","b","ref"],"sourceRoot":""}