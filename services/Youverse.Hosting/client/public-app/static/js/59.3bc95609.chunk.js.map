{"version":3,"file":"static/js/59.3bc95609.chunk.js","mappings":"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","sources":["components/Auth/ProfileNav/LoginDialog.tsx","components/ConnectionActions/ConnectLink/ConnectLink.tsx","components/InfoDialog/InfoDialog.tsx","components/ConnectionActions/FollowLink/FollowLink.tsx","components/ui/Icons/Check/Check.tsx","components/ui/Icons/Loader/Loader.tsx","components/ui/Icons/Pencil/Pencil.tsx","components/ui/Icons/Plus/Plus.tsx","components/ui/Icons/Save/Save.tsx","components/ui/Icons/Shield/Shield.tsx","components/ui/Icons/Trash/Trash.tsx","components/ui/Buttons/Button.tsx","components/ui/Dialog/DialogWrapper.tsx","components/ui/Icons/Arrow/Arrow.tsx","components/ui/Icons/Bubble/Bubble.tsx","components/ui/Icons/Exclamation/Exclamation.tsx","components/ui/Icons/Question/Question.tsx","components/ui/Icons/Triangle/Triangle.tsx","hooks/links/useLinks.ts","components/ui/Icons/Globe/Globe.tsx","components/ui/Layout/Links/Links.tsx","components/ui/LoadingParagraph/LoadingParagraph.tsx","components/ui/Submenu/NavPills.tsx","hooks/blog/useChannel.ts","hooks/blog/useChannels.ts","hooks/connections/useConnections.ts","hooks/portal/usePortal.ts","templates/Home/Common/ProfileHero/ProfileHero.tsx","provider/transit/TransitProvider.ts","provider/transit/ExternalPostsDataProvider.ts","hooks/socialFeed/useSocialFeed.ts","hooks/socialFeed/useSocialChannel.ts","provider/transit/ExternalMediaProvider.ts","hooks/socialFeed/media/useExternalImage.ts","hooks/socialFeed/media/useExternalTinyThumb.ts","components/SocialFeed/media/ExternalImage.tsx","components/SocialFeed/ExternalPostTeaserCard.tsx","provider/blog/BlogPostProvider.ts","hooks/socialFeed/post/usePost.tsx","components/ui/Alerts/Alert/Alert.tsx","components/ui/Alerts/ErrorNotification/ErrorNotification.tsx","components/SocialFeed/PostComposer.tsx","templates/SocialFeed/SocialFeed.tsx","webpack://public-app/./src/components/ui/Icons/Loader/Loader.css?8b99"],"sourcesContent":["import { createPortal } from 'react-dom';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport DialogWrapper from '../../ui/Dialog/DialogWrapper';\nimport { LoginBox } from './ProfileNav';\n\nconst LoginDialog = ({\n  isOpen,\n  title,\n  //   onConfirm,\n  onCancel,\n}: {\n  isOpen: boolean;\n  title: string;\n  //   onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <LoginBox />\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default LoginDialog;\n","import { useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useAuth from '../../../hooks/auth/useAuth';\nimport LoginDialog from '../../Auth/ProfileNav/LoginDialog';\n\nconst ConnectLink = ({ className }: { className: string }) => {\n  const { isAuthenticated, getIdentity, isOwner } = useAuth();\n  const [isLogin, setIsLogin] = useState(false);\n\n  if (isOwner) {\n    return null;\n  }\n\n  return (\n    <>\n      <a\n        className={`hover:bg-button-hover block flex-grow cursor-pointer rounded-md bg-button px-3 py-2 text-center text-button-text sm:flex-grow-0 md:text-left ${\n          className ?? ''\n        }`}\n        href={\n          isAuthenticated && !isOwner\n            ? `https://${getIdentity()}/owner/connections/${window.location.host}`\n            : undefined\n        }\n        onClick={!isAuthenticated ? () => setIsLogin(true) : undefined}\n      >\n        {t('Connect')}\n      </a>\n\n      <LoginDialog\n        isOpen={isLogin}\n        onCancel={() => setIsLogin(false)}\n        title={t('Login required')}\n      />\n    </>\n  );\n};\n\nexport default ConnectLink;\n","import { ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../helpers/i18n/dictionary';\nimport usePortal from '../../hooks/portal/usePortal';\nimport ActionButton from '../ui/Buttons/Button';\nimport DialogWrapper from '../ui/Dialog/DialogWrapper';\nimport Question from '../ui/Icons/Question/Question';\n\nconst InfoDialog = ({\n  title,\n  children,\n  confirmText,\n\n  isOpen,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  children: ReactNode;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper\n      title={\n        <div className=\"flex flex-row items-center\">\n          <Question className=\"mr-2 h-6 w-6\" /> {title}\n        </div>\n      }\n      onClose={onCancel}\n      isSidePanel={false}\n    >\n      {children}\n      <div className=\"-m-2 flex flex-row-reverse py-3\">\n        <ActionButton className=\"m-2\" onClick={onConfirm}>\n          {confirmText || t('Ok')}\n        </ActionButton>\n      </div>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default InfoDialog;\n","import { useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useAuth from '../../../hooks/auth/useAuth';\nimport InfoDialog from '../../InfoDialog/InfoDialog';\n\nconst FollowLink = ({ className }: { className: string }) => {\n  const { isOwner } = useAuth();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (isOwner) {\n    return null;\n  }\n\n  return (\n    <>\n      <a\n        className={`hover:bg-button-hover block flex-grow cursor-pointer rounded-md bg-button px-3 py-2 text-center text-button-text sm:flex-grow-0 md:text-left ${\n          className ?? ''\n        }`}\n        onClick={() => setIsOpen(true)}\n      >\n        {t('Follow')}\n      </a>\n      <InfoDialog\n        isOpen={isOpen}\n        onConfirm={() => setIsOpen(false)}\n        onCancel={() => setIsOpen(false)}\n        title={t('Coming soon')}\n        children={\n          <p>\n            {t(\n              'Unfortunately it is not possible yet to follow someone. This feature will come soon'\n            )}\n          </p>\n        }\n        confirmText={t('Ok')}\n      />\n    </>\n  );\n};\n\nexport default FollowLink;\n","import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Pencil: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M421.7 220.3L188.5 453.4L154.6 419.5L158.1 416H112C103.2 416 96 408.8 96 400V353.9L92.51 357.4C87.78 362.2 84.31 368 82.42 374.4L59.44 452.6L137.6 429.6C143.1 427.7 149.8 424.2 154.6 419.5L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3zM492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75z\" />\n    </svg>\n  );\n};\n\nexport default Pencil;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC } from 'react';\n\ninterface ShieldProps extends IconProps {\n  fill?: 'currentColor';\n}\n\nconst Shield: FC<ShieldProps> = ({ className, fill }) => {\n  return (\n    <svg\n      fill={fill ?? 'none'}\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={'2'}\n      className={`${className}`}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n    </svg>\n  );\n};\n\nexport default Shield;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Pencil from '../Icons/Pencil/Pencil';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Shield from '../Icons/Shield/Shield';\nimport Times from '../Icons/Times/Times';\nimport Trash from '../Icons/Trash/Trash';\n\nexport type ActionButtonState = 'loading' | 'success' | 'error' | 'idle';\n\nexport interface ActionButtonProps {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash' | 'edit' | 'up' | 'down' | 'shield' | 'check' | 'times';\n  type?: 'primary' | 'secondary' | 'remove' | 'mute';\n  state?: ActionButtonState;\n  isDisabled?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n  size?: 'large' | 'small' | 'square';\n}\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n  size,\n  isDisabled,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : icon === 'edit' ? (\n      <Pencil {...props} />\n    ) : icon === 'up' ? (\n      <Arrow {...props} className={`-rotate-90 ${props.className}`} />\n    ) : icon === 'shield' ? (\n      <Shield {...props} fill=\"currentColor\" />\n    ) : icon === 'down' ? (\n      <Arrow {...props} className={`rotate-90 ${props.className}`} />\n    ) : icon === 'check' ? (\n      <Check {...props} className={`${props.className}`} />\n    ) : icon === 'times' ? (\n      <Times {...props} className={`${props.className}`} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    (state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-button hover:bg-button-hover'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : type === 'mute'\n      ? ''\n      : 'bg-button hover:bg-button-hover text-button-text') +\n    (isDisabled ? ' opacity-50 cursor-not-allowed' : '');\n\n  const widthClasses =\n    children && type !== 'mute'\n      ? `min-w-[6rem] ${className?.indexOf('w-full') ? '' : 'w-full sm:w-auto'}`\n      : '';\n\n  const sizeClasses =\n    size === 'large'\n      ? 'px-5 py-3'\n      : size === 'small'\n      ? 'px-3 py-1 text-sm'\n      : size === 'square'\n      ? 'p-2'\n      : 'px-3 py-2';\n\n  const stateClasses = state === 'loading' ? 'animate-pulse' : '';\n\n  return (\n    <>\n      <button\n        className={`${\n          className && className.indexOf('absolute') !== -1 ? '' : 'relative'\n        } flex flex-row ${\n          className && className.indexOf('rounded-') !== -1 ? '' : 'rounded-md'\n        } text-left ${widthClasses} ${sizeClasses} ${colorClasses} ${stateClasses} ${className}`}\n        disabled={isDisabled || state === 'loading'}\n        onClick={onClick}\n        title={title}\n      >\n        {children}\n        <Icon className={`my-auto ${children ? 'ml-1' : ''} h-4 w-4`} />\n      </button>\n    </>\n  );\n};\n\nexport default ActionButton;\n","import { ReactNode, useRef } from 'react';\nimport useOutsideTrigger from '../../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Times from '../Icons/Times/Times';\n\nconst DialogWrapper = ({\n  children,\n  title,\n  onClose,\n  keepOpenOnBlur,\n  size = 'large',\n  isSidePanel = false,\n}: {\n  children: ReactNode;\n  title?: string | ReactNode;\n  onClose?: () => void;\n  keepOpenOnBlur?: boolean;\n  size?: 'large' | 'normal' | '4xlarge' | '2xlarge';\n  isSidePanel?: boolean;\n}) => {\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => !keepOpenOnBlur && onClose && onClose());\n\n  return (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div\n          className={`flex min-h-full ${\n            isSidePanel ? 'justify-end' : 'items-end justify-center sm:items-center'\n          } p-4 text-center sm:p-0`}\n        >\n          <div\n            ref={wrapperRef}\n            className={`relative transform ${\n              !isSidePanel ? 'overflow-hidden rounded-lg shadow-xl' : ''\n            } bg-white text-left  transition-all dark:bg-black sm:w-full ${\n              size === 'normal'\n                ? 'sm:max-w-lg'\n                : size === 'large'\n                ? 'sm:max-w-xl'\n                : size === '2xlarge'\n                ? 'sm:max-w-2xl'\n                : 'sm:max-w-4xl'\n            }`}\n          >\n            <div className=\"bg-white dark:bg-black dark:text-slate-50\">\n              {title || onClose ? (\n                <div className=\"flex flex-row bg-slate-100 px-4 py-4 dark:bg-slate-700 sm:px-8\">\n                  {title ? (\n                    <h3\n                      className=\"my-3 text-2xl font-medium leading-6 text-gray-900 dark:text-slate-50\"\n                      id=\"modal-title\"\n                    >\n                      {title}\n                    </h3>\n                  ) : null}\n                  {onClose ? (\n                    <button onClick={onClose} className=\"ml-auto p-2\">\n                      <Times className=\"h-5 w-5\" />\n                    </button>\n                  ) : null}\n                </div>\n              ) : null}\n              <div className=\"max-h-[calc(100vh-112px)] overflow-y-auto px-4 py-8 sm:max-h-[calc(100vh-10rem)] sm:px-8\">\n                {children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogWrapper;\n","import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Question: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z\" />\n    </svg>\n  );\n};\n\nexport default Question;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  Attribute,\n  LinkProfileFields,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useLinks = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchData: () => Promise<\n    { text: string; target: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('sitedata.json');\n    if (fileData.has('link')) {\n      const linkAttributes = fileData\n        .get('link')\n        ?.sort((attrA, attrB) => attrB.payload.priority - attrA.payload.priority)\n        .map((entry) => {\n          const attribute = entry.payload as Attribute;\n\n          return {\n            text: attribute.data[LinkProfileFields.LinkText] as string,\n            target: attribute.data[LinkProfileFields.LinkTarget] as string,\n            id: attribute.id,\n          };\n        });\n      if (linkAttributes?.length) {\n        return linkAttributes;\n      }\n    }\n\n    const linkAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      undefined,\n      AttributeDefinitions.Link.type.toString()\n    );\n\n    return linkAttributes\n      ?.sort((attrA, attrB) => attrB.priority - attrA.priority)\n      .map((attribute) => {\n        return {\n          text: attribute.data[LinkProfileFields.LinkText] as string,\n          target: attribute.data[LinkProfileFields.LinkTarget] as string,\n          id: attribute.id,\n        };\n      });\n  };\n\n  return useQuery(['link'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useLinks;\n","import { FC } from 'react';\n\nconst Globe: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      className={className}\n      fill=\"currentColor\"\n    >\n      <path d=\"M352 256c0 22.2-1.2 43.6-3.3 64H163.3c-2.2-20.4-3.3-41.8-3.3-64s1.2-43.6 3.3-64H348.7c2.2 20.4 3.3 41.8 3.3 64zm28.8-64H503.9c5.3 20.5 8.1 41.9 8.1 64s-2.8 43.5-8.1 64H380.8c2.1-20.6 3.2-42 3.2-64s-1.1-43.4-3.2-64zm112.6-32H376.7c-10-63.9-29.8-117.4-55.3-151.6c78.3 20.7 142 77.5 171.9 151.6zm-149.1 0H167.7c6.1-36.4 15.5-68.6 27-94.7c10.5-23.6 22.2-40.7 33.5-51.5C239.4 3.2 248.7 0 256 0s16.6 3.2 27.8 13.8c11.3 10.8 23 27.9 33.5 51.5c11.6 26 21 58.2 27 94.7zm-209 0H18.6C48.6 85.9 112.2 29.1 190.6 8.4C165.1 42.6 145.3 96.1 135.3 160zM8.1 192H131.2c-2.1 20.6-3.2 42-3.2 64s1.1 43.4 3.2 64H8.1C2.8 299.5 0 278.1 0 256s2.8-43.5 8.1-64zM194.7 446.6c-11.6-26-20.9-58.2-27-94.6H344.3c-6.1 36.4-15.5 68.6-27 94.6c-10.5 23.6-22.2 40.7-33.5 51.5C272.6 508.8 263.3 512 256 512s-16.6-3.2-27.8-13.8c-11.3-10.8-23-27.9-33.5-51.5zM135.3 352c10 63.9 29.8 117.4 55.3 151.6C112.2 482.9 48.6 426.1 18.6 352H135.3zm358.1 0c-30 74.1-93.6 130.9-171.9 151.6c25.5-34.2 45.2-87.7 55.3-151.6H493.4z\" />\n    </svg>\n  );\n};\n\nexport default Globe;\n","import useLinks from '../../../../hooks/links/useLinks';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\nimport Facebook from '../../Icons/Facebook/Facebook';\nimport Globe from '../../Icons/Globe/Globe';\nimport Instagram from '../../Icons/Instagram/Instagram';\nimport Linkedin from '../../Icons/Linkedin/Linkedin';\nimport Person from '../../Icons/Person/Person';\nimport Tiktok from '../../Icons/Tiktok/Tiktok';\nimport Twitter from '../../Icons/Twitter/Twitter';\n\nconst Links = ({\n  className,\n  style,\n  includeSocials,\n  direction,\n}: {\n  className?: string;\n  style?: 'secondary';\n  includeSocials?: boolean;\n  direction: 'col' | 'row';\n}) => {\n  const { data: siteData } = useSiteData();\n  const { data: links } = useLinks();\n\n  if (!links) {\n    return null;\n  }\n\n  const buttonClass =\n    style === 'secondary'\n      ? `border-gray border-[1px] ${\n          direction === 'col' ? 'py-3 px-4' : 'py-2 px-3'\n        } hover:bg-gray-100 rounded`\n      : `rounded border-0 bg-button ${\n          direction === 'col' ? 'py-3 px-4' : 'py-2 px-3'\n        } text-white hover:bg-button-hover`;\n\n  const flexDir = direction === 'col' ? 'flex-col' : 'flex-row';\n\n  return (\n    <div className={`-m-2 flex ${flexDir} flex-wrap ${className}`}>\n      {includeSocials && (\n        <>\n          {siteData?.social.map((social, index) => (\n            <a\n              href={\n                social.type !== 'dotyouid'\n                  ? `https://${social.type}.com/${social.username}`\n                  : `https://${social.username}`\n              }\n              key={index}\n              className={`m-2 flex flex-row focus:outline-none ${buttonClass}`}\n              target=\"_blank\"\n              rel={'noopener noreferrer'}\n            >\n              {social.type === 'facebook' ? (\n                <Facebook className=\"my-auto mr-5 h-4 w-4\" />\n              ) : social.type === 'twitter' ? (\n                <Twitter className=\"my-auto mr-5 h-4 w-4\" />\n              ) : social.type === 'linkedin' ? (\n                <Linkedin className=\"my-auto mr-5 h-4 w-4\" />\n              ) : social.type === 'instagram' ? (\n                <Instagram className=\"my-auto mr-5 h-4 w-4\" />\n              ) : social.type === 'tiktok' ? (\n                <Tiktok className=\"my-auto mr-5 h-4 w-4\" />\n              ) : social.type === 'dotyouid' ? (\n                <Person className=\"my-auto mr-5 h-4 w-4\" />\n              ) : (\n                <Globe className=\"my-auto mr-5 h-4 w-4\" />\n              )}\n              {social.username}\n            </a>\n          ))}\n        </>\n      )}\n      {links.map((link) => (\n        <a\n          href={link.target}\n          key={link.target}\n          className={`m-2 flex flex-row focus:outline-none ${buttonClass}`}\n          target=\"_blank\"\n          rel={'noopener noreferrer'}\n        >\n          <Globe className=\"my-auto mr-5 h-4 w-4\" />\n          {link.text}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default Links;\n","const LoadingParagraph = ({ className = 'w-full h-2 m-0' }: { className?: string }) => {\n  return (\n    <div className={`${className} animate-pulse rounded bg-slate-100 dark:bg-slate-700`}></div>\n  );\n};\n\nexport default LoadingParagraph;\n","interface NavPillsProps {\n  className?: string;\n  items: { title: string; key: string; isActive: boolean }[];\n  onChange: (key: string) => void;\n  disallowWrap?: boolean;\n}\n\nconst NavPills = ({ className, items, onChange, disallowWrap }: NavPillsProps) => {\n  return (\n    <ul className={`-m-2 flex flex-row ${disallowWrap ? '' : 'flex-wrap'} ${className ?? ''} `}>\n      {items.map((item) => (\n        <li key={item.key} className=\"p-2\">\n          <a\n            className={`block cursor-pointer select-none rounded-lg px-4 py-2 ${\n              item.isActive ? 'bg-button text-white' : 'hover:bg-button hover:bg-opacity-20'\n            }`}\n            onClick={() => onChange(item.key)}\n          >\n            {item.title}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default NavPills;\n","import { useQuery } from '@tanstack/react-query';\nimport { BlogConfig, ChannelDefinition, PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nimport { ChannelDefinitionVm, parseChannelTemplate } from './useChannels';\n\ntype useChannelsProps = {\n  channelSlug?: string;\n  channelId?: string;\n};\n\nconst useChannel = ({ channelSlug, channelId }: useChannelsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async ({ channelSlug, channelId }: useChannelsProps) => {\n    if (!channelSlug && !channelId) {\n      return;\n    }\n\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channel: ChannelDefinition | undefined = undefined;\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const foundEntry = entry.find(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n              BlogConfig.ChannelDefinitionFileType &&\n            (channelSlug\n              ? possibleChannel.payload.slug === channelSlug\n              : possibleChannel.payload.channelId === channelId)\n        );\n        if (foundEntry) {\n          channel = foundEntry.payload as ChannelDefinition;\n        }\n      });\n    }\n\n    if (!channel) {\n      channel = channelSlug\n        ? await client.blogPostReadonlyProvider.getChannelDefinitionBySlug(channelSlug)\n        : channelId\n        ? await client.blogPostReadonlyProvider.getChannelDefinition(channelId)\n        : undefined;\n    }\n\n    if (channel) {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    }\n    return;\n  };\n\n  return useQuery(\n    ['channel', channelSlug || channelId],\n    () => fetchChannelData({ channelSlug, channelId }),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }\n  );\n};\n\nexport default useChannel;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  BlogConfig,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  template: ChannelTemplate;\n}\n\nexport const parseChannelTemplate = (templateId: number | undefined) => {\n  return parseInt(templateId + '') === ChannelTemplate.LargeCards\n    ? ChannelTemplate.LargeCards\n    : parseInt(templateId + '') === ChannelTemplate.MasonryLayout\n    ? ChannelTemplate.MasonryLayout\n    : ChannelTemplate.ClassicBlog;\n};\n\nconst useChannels = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinition[] = [];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const entries = entry.filter(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n            BlogConfig.ChannelDefinitionFileType\n        );\n        channels = [\n          ...channels,\n          ...entries.map((entry) => {\n            return { ...entry.payload } as ChannelDefinition;\n          }),\n        ];\n      });\n    }\n\n    if (!channels?.length) {\n      channels = await client.blogPostReadonlyProvider.getChannels();\n    }\n\n    return channels.map((channel) => {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return useQuery(['channels'], () => fetchChannelData(), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","import { useQuery } from '@tanstack/react-query';\nimport { PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = ({ pageSize }: { pageSize?: number }) => {\n  const { getSharedSecret, getApiType } = useAuth();\n  const sharedSecret = getSharedSecret();\n\n  const client = new PublicClient({ api: getApiType(), sharedSecret: sharedSecret });\n  const fetchConnections = async ({ pageSize }: { pageSize?: number }) => {\n    if (!sharedSecret) {\n      return;\n    }\n    try {\n      return (\n        await client.circleNetworkReadOnlyProvider.getConnections({\n          pageNumber: 1,\n          pageSize: pageSize ?? 10,\n        })\n      ).results;\n    } catch (ex) {\n      return;\n    }\n  };\n\n  return {\n    fetch: useQuery(['connections', pageSize], () => fetchConnections({ pageSize }), {\n      enabled: !!sharedSecret,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      retry: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id: string) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem: Element) {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\n  }\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id: string) {\n  const rootElemRef = useRef<Element | null>(null);\n\n  useEffect(\n    function setupElement() {\n      // Look for existing target dom element to append to\n      const existingParent = document.querySelector(`#${id}`);\n      // Parent is either a new root or the existing dom element\n      const parentElem = existingParent || createRootElement(id);\n\n      // If there is no existing DOM element, add a new one.\n      if (!existingParent) {\n        addRootElement(parentElem);\n      }\n\n      if (!rootElemRef?.current) {\n        return;\n      }\n\n      // Add the detached element to the parent\n      parentElem.appendChild(rootElemRef.current);\n\n      return function removeElement() {\n        rootElemRef.current && rootElemRef.current.remove();\n        if (!parentElem.childElementCount) {\n          parentElem.remove();\n        }\n      };\n    },\n    [id]\n  );\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;\n","import {\n  BuiltInProfiles,\n  getTargetDriveFromProfileId,\n  HomePageConfig,\n} from '@youfoundation/dotyoucore-js';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\nimport Image from '../../../../components/Image/Image';\nimport Links from '../../../../components/ui/Layout/Links/Links';\nimport Socials from '../../../../components/ui/Layout/Socials/Socials';\nimport ConnectLink from '../../../../components/ConnectionActions/ConnectLink/ConnectLink';\nimport FollowLink from '../../../../components/ConnectionActions/FollowLink/FollowLink';\n\nconst ProfileHero = ({ hideLinks }: { hideLinks?: boolean }) => {\n  const { owner, home, social } = useSiteData().data ?? {};\n\n  const targetDrive = getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId);\n\n  const showProfileImage = owner?.profileImageId && targetDrive;\n\n  return (\n    <section className=\"bg-slate-500 bg-opacity-10 dark:bg-slate-500 dark:bg-opacity-10\">\n      <div className=\"relative h-[27vh] min-h-[330px]\">\n        <Image\n          fileId={home?.headerImageFileId}\n          targetDrive={HomePageConfig.HomepageTargetDrive}\n          className=\"absolute inset-0\"\n          cover={true}\n        />\n        <div className=\"container absolute top-0 left-0 right-0 bottom-0 mx-auto flex justify-center px-5 md:block\">\n          {showProfileImage ? (\n            <div className=\"absolute bottom-[-4.5rem] h-60 w-60 overflow-hidden rounded-full border-8 border-neutral-200 md:bottom-[-7.5rem] \">\n              <Image\n                fileId={owner?.profileImageId}\n                targetDrive={targetDrive}\n                className=\"h-full w-full\"\n                cover={true}\n              />\n            </div>\n          ) : null}\n        </div>\n      </div>\n      {/* min height of 7.5 rem to ensure sufficient spacing after the hero picture to support the offset of the profile picture*/}\n      <div className=\"container mx-auto flex min-h-[8.5rem] px-5 xl:h-[8.5rem]\">\n        <div className={`my-auto w-full ${showProfileImage ? 'pt-[5rem] md:py-4 md:pl-60' : ''}`}>\n          <div className={`flex flex-col ${showProfileImage ? 'md:pl-10' : ''} lg:flex-row`}>\n            <div className=\"text-center md:text-left\">\n              <h1 className=\"text-2xl\">{`${owner?.firstName ?? ''} ${owner?.surName ?? ''}`}</h1>\n              <small className=\"block text-base\">{home?.tagLine}</small>\n            </div>\n\n            <div className=\"my-3 flex flex-col justify-center md:my-auto md:ml-auto\">\n              <div className=\"hidden md:contents\">\n                <Socials\n                  socialHandles={social}\n                  className=\"mt-4 justify-center sm:mt-0 md:ml-auto md:justify-start\"\n                />\n              </div>\n\n              <div\n                className={`flex flex-row ${\n                  !hideLinks ? 'flex-wrap' : ''\n                } -my-1 justify-center md:ml-4 md:mt-3`}\n              >\n                <FollowLink className=\"my-1 mr-3\" />\n                <ConnectLink className=\"my-1\" />\n                {!hideLinks && (\n                  <div className=\"my-1\">\n                    <Links className=\"ml-1\" direction=\"row\" />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileHero;\n","import {\n  ApiType,\n  FileQueryParams,\n  GetBatchQueryResultOptions,\n  QueryBatchResponse,\n  TargetDrive,\n  KeyHeader,\n  EncryptedKeyHeader,\n  FileMetadata,\n  DriveProvider,\n  DataUtil,\n  DriveSearchResult,\n  AesEncrypt,\n  PagedResult,\n  DriveDefinition,\n} from '@youfoundation/dotyoucore-js';\nimport { AxiosRequestConfig } from 'axios';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\ninterface TransitProviderOptions {\n  driveProvider: DriveProvider;\n  sharedSecret: Uint8Array | undefined | null;\n}\n\ninterface GetFileRequest {\n  dotYouId: string;\n  file: {\n    targetDrive: TargetDrive;\n    fileId: string;\n  };\n}\n\ninterface TransitQueryBatchRequest {\n  queryParams: FileQueryParams;\n  resultOptionsRequest: GetBatchQueryResultOptions;\n  dotYouId: string;\n}\n\nconst _internalMetadataCache = new Map<string, Promise<DriveSearchResult>>();\n\nexport default class TransitProvider extends OwnerProviderBase {\n  private static instance: TransitProvider;\n  private driveProvider: DriveProvider;\n\n  constructor(options: TransitProviderOptions) {\n    super(options.sharedSecret);\n\n    this.driveProvider = options.driveProvider;\n  }\n\n  async QueryBatch(\n    dotYouId: string,\n    params: FileQueryParams,\n    ro?: GetBatchQueryResultOptions\n  ): Promise<QueryBatchResponse> {\n    const client = this.createAxiosClient();\n\n    if (!ro) {\n      ro = {\n        cursorState: undefined,\n        maxRecords: 10,\n        includeMetadataHeader: true,\n      };\n    }\n\n    const request: TransitQueryBatchRequest = {\n      queryParams: params,\n      resultOptionsRequest: ro,\n      dotYouId: dotYouId,\n    };\n\n    return client.post<QueryBatchResponse>('/transit/query/batch', request).then((response) => {\n      return response.data;\n    });\n  }\n\n  async GetPayload<T>(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    fileMetadata: FileMetadata,\n    sharedSecretEncryptedKeyHeader: EncryptedKeyHeader,\n    includesJsonContent: boolean\n  ): Promise<T> {\n    const keyheader = fileMetadata.payloadIsEncrypted\n      ? await this.DecryptKeyHeader(sharedSecretEncryptedKeyHeader)\n      : undefined;\n\n    if (fileMetadata.appData.contentIsComplete && includesJsonContent) {\n      return await this.driveProvider.DecryptJsonContent<T>(fileMetadata, keyheader);\n    } else {\n      return await this.GetPayloadAsJson<T>(dotYouId, targetDrive, fileId, keyheader);\n    }\n  }\n\n  async GetPayloadAsJson<T>(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    keyHeader: KeyHeader | undefined\n  ): Promise<T> {\n    return this.GetPayloadBytes(dotYouId, targetDrive, fileId, keyHeader).then((bytes) => {\n      const json = DataUtil.byteArrayToString(new Uint8Array(bytes));\n      try {\n        const o = JSON.parse(json);\n        return o;\n      } catch (ex) {\n        console.warn('base JSON.parse failed');\n        const replaceAll = (str: string, find: string, replace: string) => {\n          return str.replace(new RegExp(find, 'g'), replace);\n        };\n\n        const jsonWithRemovedQuote = replaceAll(json, '\\u0019', '');\n        const jsonWithRemovedEmDash = replaceAll(jsonWithRemovedQuote, '\\u0014', '');\n\n        const o = JSON.parse(jsonWithRemovedEmDash);\n\n        console.warn('... but we fixed it');\n        return o;\n      }\n    });\n  }\n\n  async GetPayloadBytesNoPriorHeader(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string\n  ): Promise<ArrayBuffer> {\n    const client = this.createAxiosClient();\n\n    const request: GetFileRequest = {\n      dotYouId: dotYouId,\n      file: {\n        targetDrive: targetDrive,\n        fileId: fileId,\n      },\n    };\n\n    const config: AxiosRequestConfig = {\n      responseType: 'arraybuffer',\n    };\n\n    return client\n      .post('/transit/query/payload', request, config)\n      .then(async (response) => {\n        const isEncrypted = response.headers.payloadencrypted === 'True';\n        if (isEncrypted) {\n          const sharedSecretEncryptedKeyHeader64 = DataUtil.base64ToUint8Array(\n            response.headers.sharedsecretencryptedheader64\n          );\n\n          console.log(response);\n          const iv = DataUtil.base64ToUint8Array(response.data.iv);\n          console.log({ iv });\n          const bytes = await AesEncrypt.CbcDecrypt(\n            sharedSecretEncryptedKeyHeader64,\n            iv,\n            this.getSharedSecret()\n          );\n          console.log(bytes);\n        }\n        // if (keyHeader) {\n        //   const cipher = new Uint8Array(response.data);\n        //   return this.driveProvider.DecryptUsingKeyHeader(cipher, keyHeader).then((bytes) => {\n        //     return bytes;\n        //   });\n        // } else {\n        return new Uint8Array(response.data);\n        // }\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n  }\n\n  async GetPayloadBytes(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    keyHeader: KeyHeader | undefined\n  ): Promise<ArrayBuffer> {\n    const client = this.createAxiosClient();\n\n    const request: GetFileRequest = {\n      dotYouId: dotYouId,\n      file: {\n        targetDrive: targetDrive,\n        fileId: fileId,\n      },\n    };\n\n    const config: AxiosRequestConfig = {\n      responseType: 'arraybuffer',\n    };\n\n    return client\n      .post('/transit/query/payload', request, config)\n      .then((response) => {\n        if (keyHeader) {\n          const cipher = new Uint8Array(response.data);\n          return this.driveProvider.DecryptUsingKeyHeader(cipher, keyHeader).then((bytes) => {\n            return bytes;\n          });\n        } else {\n          return new Uint8Array(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n  }\n\n  async GetThumbBytes(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    keyHeader: KeyHeader | undefined,\n    width: number,\n    height: number\n  ): Promise<ArrayBuffer> {\n    const client = this.createAxiosClient();\n    const request: GetFileRequest = {\n      dotYouId: dotYouId,\n      file: {\n        targetDrive: targetDrive,\n        fileId: fileId,\n      },\n    };\n    const config: AxiosRequestConfig = {\n      responseType: 'arraybuffer',\n    };\n\n    return client\n      .post('/transit/query/thumb', { ...request, width: width, height: height }, config)\n      .then((response) => {\n        if (keyHeader) {\n          const cipher = new Uint8Array(response.data);\n          return this.driveProvider.DecryptUsingKeyHeader(cipher, keyHeader).then((bytes) => {\n            return bytes;\n          });\n        } else {\n          return new Uint8Array(response.data);\n        }\n      })\n      .catch((error) => {\n        // console.error(error);\n        throw error;\n      });\n  }\n\n  async GetFileHeader(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string\n  ): Promise<DriveSearchResult> {\n    const cacheKey = `${dotYouId}+${targetDrive.alias}-${targetDrive.type}+${fileId}`;\n    if (_internalMetadataCache.has(cacheKey)) {\n      const cacheData = await _internalMetadataCache.get(cacheKey);\n      if (cacheData) {\n        return cacheData;\n      }\n    }\n\n    const client = this.createAxiosClient();\n\n    const request: GetFileRequest = {\n      dotYouId: dotYouId,\n      file: {\n        targetDrive: targetDrive,\n        fileId: fileId,\n      },\n    };\n\n    const promise = client\n      .post('/transit/query/header', request)\n      .then((response) => {\n        return response.data as DriveSearchResult;\n      })\n      .catch((error) => {\n        //TODO: Handle this - the file was not uploaded\n        console.error(error);\n        throw error;\n      });\n\n    _internalMetadataCache.set(cacheKey, promise);\n\n    return promise;\n  }\n\n  async DecryptKeyHeader(encryptedKeyHeader: EncryptedKeyHeader): Promise<KeyHeader> {\n    return await this.driveProvider.DecryptKeyHeader(encryptedKeyHeader);\n  }\n\n  /// Drive methods:\n  //returns all drives for a given type\n  async GetDrivesByType(\n    type: string,\n    pageNumber: number,\n    pageSize: number,\n    dotYouId: string\n  ): Promise<PagedResult<DriveDefinition>> {\n    const params = {\n      driveType: type,\n      pageNumber: pageNumber,\n      pageSize: pageSize,\n      dotYouId: dotYouId,\n    };\n\n    const client = this.createAxiosClient();\n    return client.post('transit/query/metadata/type', params).then((response) => {\n      return {\n        ...response.data,\n        results: response?.data?.results?.map((result: { targetDrive: TargetDrive }) => {\n          return { ...result, targetDriveInfo: result.targetDrive };\n        }),\n      };\n    });\n  }\n\n  public static getInstance(sharedSecret?: Uint8Array): TransitProvider {\n    if (!sharedSecret) {\n      throw new Error('Shared Secret not set for OwnerProvider');\n    }\n\n    if (!TransitProvider.instance) {\n      const driveProvider = new DriveProvider({ api: ApiType.Owner, sharedSecret: sharedSecret });\n\n      TransitProvider.instance = new TransitProvider({\n        sharedSecret: sharedSecret,\n        driveProvider: driveProvider,\n      });\n    }\n\n    return TransitProvider.instance;\n  }\n}\n","import {\n  FileQueryParams,\n  BlogConfig,\n  PostFile,\n  PostContent,\n  GetBatchQueryResultOptions,\n  CursoredResult,\n  getChannelDrive,\n  ChannelDefinition,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\nimport TransitProvider from './TransitProvider';\n\nexport interface MultiRequestCursoredResult<T> {\n  results: T;\n  cursorState: Record<string, Record<string, string>>;\n}\n\nconst _internalChannelCache = new Map<string, Promise<ChannelDefinition[]>>();\n\nexport interface PostFileVm<T extends PostContent> extends PostFile<T> {\n  dotYouId: string;\n}\n\nexport default class ExternalPostsDataProvider extends OwnerProviderBase {\n  private static instance: ExternalPostsDataProvider;\n  private transitProvider: TransitProvider;\n\n  constructor(sharedSecret: Uint8Array) {\n    super(sharedSecret);\n\n    this.transitProvider = TransitProvider.getInstance(sharedSecret);\n  }\n\n  async getRecentsFromConnections(\n    dotYouIds: string[],\n    pageSize = 10,\n    cursorState?: Record<string, Record<string, string>>,\n    includeOwn?: boolean\n  ): Promise<MultiRequestCursoredResult<PostFileVm<PostContent>[]>> {\n    const client = new PublicClient({\n      api: super.getType(),\n      sharedSecret: super.getSharedSecret(),\n    });\n    const allCursors: Record<string, Record<string, string>> = {};\n\n    const resultPerConnection = await Promise.all(\n      dotYouIds.map(async (dotYouId) => {\n        const channels = await this.getChannels(dotYouId);\n        allCursors[dotYouId] = {};\n\n        const resultsPerChannel = await Promise.all(\n          channels.map(async (channel) => {\n            const result = await this.getRecents(\n              dotYouId,\n              pageSize,\n              cursorState?.[dotYouId]?.[channel.channelId],\n              channel.channelId\n            );\n            allCursors[dotYouId][channel.channelId] = result.cursorState;\n            return result.results;\n          })\n        );\n\n        return resultsPerChannel;\n      })\n    );\n\n    if (includeOwn) {\n      const ownerDotYou = window.location.hostname;\n      const resultOfOwn = await client.blogPostReadonlyProvider.getRecentPosts(\n        undefined,\n        pageSize,\n        cursorState?.[ownerDotYou]\n      );\n\n      allCursors[ownerDotYou] = resultOfOwn.cursorState;\n      resultPerConnection.push([\n        resultOfOwn.results.map((postFile) => {\n          return { ...postFile, dotYouId: ownerDotYou } as PostFileVm<PostContent>;\n        }),\n      ]);\n    }\n\n    return { results: resultPerConnection.flat(2), cursorState: allCursors };\n  }\n\n  async getChannels(dotYouId: string) {\n    const cacheKey = `${dotYouId}`;\n    if (_internalChannelCache.has(cacheKey)) {\n      const cacheData = await _internalChannelCache.get(cacheKey);\n      if (cacheData) {\n        return cacheData;\n      }\n    }\n\n    const drives = await this.transitProvider.GetDrivesByType(\n      BlogConfig.DriveType,\n      1,\n      1000,\n      dotYouId\n    );\n    const channelHeaders = drives.results.map((drive) => {\n      return {\n        id: drive.targetDriveInfo.alias,\n        name: drive.name,\n      };\n    });\n\n    const promise = (async () => {\n      return (\n        await Promise.all(\n          channelHeaders.map(async (header) => {\n            const definition = await this.getChannel(dotYouId, header.id);\n            return definition;\n          })\n        )\n      ).filter((channel) => channel !== undefined) as ChannelDefinition[];\n    })();\n\n    _internalChannelCache.set(cacheKey, promise);\n\n    return await promise;\n  }\n\n  async getRecents(\n    dotYouId: string,\n    maxRecords = 10,\n    cursorState?: string,\n    channelId?: string\n  ): Promise<CursoredResult<PostFileVm<PostContent>[]>> {\n    const targetDrive = channelId ? getChannelDrive(channelId) : BlogConfig.PublicChannelDrive;\n\n    const queryParams: FileQueryParams = {\n      targetDrive: targetDrive,\n      fileType: [BlogConfig.PostFileType],\n    };\n\n    const ro: GetBatchQueryResultOptions = {\n      cursorState: cursorState,\n      maxRecords: maxRecords,\n      includeMetadataHeader: true,\n    };\n\n    const result = await this.transitProvider.QueryBatch(dotYouId, queryParams, ro);\n\n    const posts = (\n      await Promise.all(\n        result.searchResults.map(async (dsr) => {\n          return {\n            fileId: dsr.fileId,\n            acl: dsr.serverMetadata?.accessControlList,\n            content: await this.transitProvider.GetPayload<PostContent>(\n              dotYouId,\n              targetDrive,\n              dsr.fileId,\n              dsr.fileMetadata,\n              dsr.sharedSecretEncryptedKeyHeader,\n              result.includeMetadataHeader\n            ),\n            dotYouId: dotYouId,\n          } as PostFileVm<PostContent>;\n        })\n      )\n    ).filter((item) => !!item);\n\n    return { cursorState: result.cursorState, results: posts };\n  }\n\n  async getChannel(dotYouId: string, channelId: string): Promise<ChannelDefinition | undefined> {\n    const targetDrive = getChannelDrive(channelId);\n\n    const queryParams: FileQueryParams = {\n      targetDrive: targetDrive,\n      fileType: [BlogConfig.ChannelDefinitionFileType],\n    };\n\n    const ro: GetBatchQueryResultOptions = {\n      cursorState: undefined,\n      maxRecords: 1,\n      includeMetadataHeader: true,\n    };\n\n    const response = await this.transitProvider.QueryBatch(dotYouId, queryParams, ro);\n\n    try {\n      if (response.searchResults.length == 1) {\n        const dsr = response.searchResults[0];\n        return await this.transitProvider.GetPayload<ChannelDefinition>(\n          dotYouId,\n          targetDrive,\n          dsr.fileId,\n          dsr.fileMetadata,\n          dsr.sharedSecretEncryptedKeyHeader,\n          response.includeMetadataHeader\n        );\n      }\n    } catch (ex) {\n      // Catch al, as targetDrive might be inaccesible (when it doesn't exist yet)\n    }\n  }\n\n  public static getInstance(sharedSecret?: Uint8Array): ExternalPostsDataProvider {\n    if (!sharedSecret) {\n      throw new Error('Shared Secret not set for OwnerProvider');\n    }\n\n    if (!ExternalPostsDataProvider.instance) {\n      ExternalPostsDataProvider.instance = new ExternalPostsDataProvider(sharedSecret);\n    }\n\n    return ExternalPostsDataProvider.instance;\n  }\n}\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { PostContent } from '@youfoundation/dotyoucore-js';\nimport ExternalPostsDataProvider, {\n  MultiRequestCursoredResult,\n  PostFileVm,\n} from '../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../auth/useAuth';\nimport useConnections from '../connections/useConnections';\n\nconst useSocialFeed = ({ pageSize = 10 }: { pageSize: number }) => {\n  const { getSharedSecret } = useAuth();\n  const { data: connections, isFetched: connectionsFetched } = useConnections({\n    pageSize: 100,\n  }).fetch;\n\n  const fetchAll = async ({\n    pageParam,\n  }: {\n    pageParam: Record<string, Record<string, string>>;\n  }): Promise<MultiRequestCursoredResult<PostFileVm<PostContent>[]>> => {\n    const externalPostDataProvider = ExternalPostsDataProvider.getInstance(getSharedSecret());\n    const response = await externalPostDataProvider.getRecentsFromConnections(\n      connections?.map((connection) => connection.dotYouId).filter(Boolean) as string[],\n      pageSize,\n      pageParam,\n      true\n    );\n\n    return response;\n  };\n\n  return {\n    fetchAll: useInfiniteQuery(['social-feeds'], ({ pageParam }) => fetchAll({ pageParam }), {\n      getNextPageParam: (lastPage) =>\n        (lastPage?.results?.length >= 1 && lastPage?.cursorState) ?? undefined,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      enabled: connectionsFetched,\n    }),\n  };\n};\n\nexport default useSocialFeed;\n","import { useQuery } from '@tanstack/react-query';\nimport ExternalPostsDataProvider from '../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../auth/useAuth';\n\ninterface useSocialChannelProps {\n  dotYouId: string;\n  channelId: string;\n}\n\nconst useSocialChannel = ({ dotYouId, channelId }: useSocialChannelProps) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetch = async ({ dotYouId, channelId }: useSocialChannelProps) => {\n    if (!dotYouId || !channelId) {\n      return;\n    }\n\n    const externalPostDataProvider = ExternalPostsDataProvider.getInstance(getSharedSecret());\n    return await externalPostDataProvider.getChannel(dotYouId, channelId);\n  };\n\n  return {\n    fetch: useQuery(['channel', dotYouId, channelId], () => fetch({ dotYouId, channelId }), {\n      enabled: !!dotYouId && !!channelId,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }),\n  };\n};\n\nexport default useSocialChannel;\n","import { DataUtil, DriveSearchResult, TargetDrive, ThumbSize } from '@youfoundation/dotyoucore-js';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nimport TransitProvider from './TransitProvider';\n\ntype ThumbnailMeta = {\n  naturalSize: { width: number; height: number };\n  sizes?: ThumbSize[];\n  url: string;\n};\n\nexport class ExternalMediaProvider extends OwnerProviderBase {\n  private static instance: ExternalMediaProvider;\n  private transitProvider: TransitProvider;\n\n  constructor(sharedSecret: Uint8Array) {\n    super(sharedSecret);\n\n    this.transitProvider = TransitProvider.getInstance(sharedSecret);\n  }\n\n  async getDecryptedMetadata(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string\n  ): Promise<DriveSearchResult> {\n    return await this.transitProvider.GetFileHeader(dotYouId, targetDrive, fileId);\n  }\n\n  async getDecryptedThumbnailMeta(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string\n  ): Promise<ThumbnailMeta | undefined> {\n    //it seems these will be fine for images but for video and audio we must stream decrypt\n    return this.getDecryptedMetadata(dotYouId, targetDrive, fileId).then((header) => {\n      if (!header.fileMetadata.appData.previewThumbnail) {\n        return;\n      }\n\n      const previewThumbnail = header.fileMetadata.appData.previewThumbnail;\n      const buffer = DataUtil.base64ToUint8Array(previewThumbnail.content);\n      const url = window.URL.createObjectURL(\n        new Blob([buffer], { type: previewThumbnail.contentType })\n      );\n\n      return {\n        naturalSize: { width: previewThumbnail.pixelWidth, height: previewThumbnail.pixelHeight },\n        sizes: header.fileMetadata.appData.additionalThumbnails ?? [],\n        url: url,\n      };\n    });\n  }\n\n  // Retrieves an image/thumb, decrypts, then returns a url to be passed to an image control\n  async getDecryptedImageUrl(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    size?: ThumbSize\n  ): Promise<string> {\n    return this.getDecryptedImageData(dotYouId, targetDrive, fileId, size).then((data) => {\n      const url = window.URL.createObjectURL(new Blob([data.content], { type: data.contentType }));\n      return url;\n    });\n  }\n\n  async getDecryptedImageData(\n    dotYouId: string,\n    targetDrive: TargetDrive,\n    fileId: string,\n    size?: ThumbSize\n  ): Promise<{\n    pixelHeight: number;\n    pixelWidth: number;\n    contentType: string;\n    content: ArrayBuffer;\n  }> {\n    const header = await this.transitProvider.GetFileHeader(dotYouId, targetDrive, fileId);\n    const keyHeader = header.fileMetadata.payloadIsEncrypted\n      ? await this.transitProvider.DecryptKeyHeader(header.sharedSecretEncryptedKeyHeader)\n      : undefined;\n\n    const bytesPromise = size\n      ? this.transitProvider.GetThumbBytes(\n          dotYouId,\n          targetDrive,\n          fileId,\n          keyHeader,\n          size.pixelWidth,\n          size.pixelHeight\n        )\n      : this.transitProvider.GetPayloadBytes(dotYouId, targetDrive, fileId, keyHeader);\n    //: this.transitProvider.GetPayloadBytesNoPriorHeader(dotYouId, targetDrive, fileId);\n\n    return {\n      pixelHeight: header.fileMetadata.appData.previewThumbnail?.pixelHeight ?? 0,\n      pixelWidth: header.fileMetadata.appData.previewThumbnail?.pixelWidth ?? 0,\n      contentType: header.fileMetadata.appData.previewThumbnail?.contentType ?? '',\n      content: await bytesPromise,\n    };\n  }\n\n  public static getInstance(sharedSecret?: Uint8Array): ExternalMediaProvider {\n    if (!sharedSecret) {\n      throw new Error('Shared Secret not set for OwnerProvider');\n    }\n\n    if (!ExternalMediaProvider.instance) {\n      ExternalMediaProvider.instance = new ExternalMediaProvider(sharedSecret);\n    }\n\n    return ExternalMediaProvider.instance;\n  }\n}\n","import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { TargetDrive, ThumbSize } from '@youfoundation/dotyoucore-js';\nimport { ExternalMediaProvider } from '../../../provider/transit/ExternalMediaProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst useExternalImage = (\n  dotYouId: string,\n  imageFileId: string | undefined,\n  imageDrive?: TargetDrive,\n  size?: ThumbSize\n) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const fetchImageData = async (\n    dotYouId: string,\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive,\n    size?: ThumbSize\n  ) => {\n    if (imageFileId === undefined || imageFileId === '' || !imageDrive) {\n      return;\n    }\n\n    const externalMediaProvider = ExternalMediaProvider.getInstance(getSharedSecret());\n    return await externalMediaProvider.getDecryptedImageUrl(\n      dotYouId,\n      imageDrive,\n      imageFileId,\n      size\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['external-image', dotYouId, imageFileId, imageDrive, size],\n      () => fetchImageData(dotYouId, imageFileId, imageDrive, size),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n        enabled: !!dotYouId && !!imageFileId && !!imageDrive,\n      }\n    ),\n    testCache: (imageFileId: string, imageDrive: TargetDrive) => {\n      const cache = queryClient.getQueryData(['image', imageFileId, imageDrive]);\n      return !!cache;\n    },\n  };\n};\n\nexport default useExternalImage;\n","import { useQuery } from '@tanstack/react-query';\nimport { TargetDrive } from '@youfoundation/dotyoucore-js';\nimport { ExternalMediaProvider } from '../../../provider/transit/ExternalMediaProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst useExternalTinyThumb = (\n  dotYouId: string,\n  imageFileId: string | undefined,\n  imageDrive?: TargetDrive\n) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (\n    dotYouId: string,\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive\n  ) => {\n    if (!dotYouId || imageFileId === undefined || imageFileId === '' || !imageDrive) {\n      return;\n    }\n\n    const externalMediaProvider = ExternalMediaProvider.getInstance(getSharedSecret());\n    return await externalMediaProvider.getDecryptedThumbnailMeta(dotYouId, imageDrive, imageFileId);\n  };\n\n  return useQuery(\n    ['tinyThumb', dotYouId, imageFileId, imageDrive],\n    () => fetchImageData(dotYouId, imageFileId, imageDrive),\n    {\n      enabled: !!dotYouId && !!imageFileId && !!imageDrive,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      onError: (err) => console.error(err),\n    }\n  );\n};\n\nexport default useExternalTinyThumb;\n","import { TargetDrive, ThumbSize } from '@youfoundation/dotyoucore-js';\nimport { useEffect, useRef, useState } from 'react';\nimport { useIntersection } from '../../../hooks/intersection/useIntersection';\nimport useExternalImage from '../../../hooks/socialFeed/media/useExternalImage';\nimport useExternalTinyThumb from '../../../hooks/socialFeed/media/useExternalTinyThumb';\n\ninterface ExternalImageProps {\n  dotYouId: string;\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  cover?: boolean;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst ExternalImage = ({\n  dotYouId,\n  targetDrive,\n  fileId,\n  cover,\n  className,\n  alt,\n  title,\n}: ExternalImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const [loadSize, setLoadSize] = useState<ThumbSize | 'full' | undefined>(undefined);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: thumbMeta } = useExternalTinyThumb(\n    dotYouId,\n    isInView ? fileId : undefined,\n    targetDrive\n  );\n  const {\n    fetch: { data: imageUrl },\n    testCache,\n  } = useExternalImage(\n    dotYouId,\n    loadSize !== undefined ? fileId : undefined,\n    targetDrive,\n    loadSize !== 'full' ? loadSize : undefined\n  );\n\n  useIntersection(imgRef, () => {\n    if (fileId && testCache(fileId, targetDrive)) {\n      findLoadOptimalSize();\n    }\n    setIsInView(true);\n  });\n\n  useEffect(() => {\n    if (thumbMeta && thumbMeta.url?.length) {\n      // Set to load full, with timeout to allow other tinies to load\n      setTimeout(() => {\n        findLoadOptimalSize();\n      }, 100);\n    }\n  }, [thumbMeta]);\n\n  const findLoadOptimalSize = () => {\n    if (!thumbMeta?.sizes?.length || !imgRef.current) {\n      setLoadSize('full');\n      return;\n    }\n\n    const targetWidth = imgRef.current?.clientWidth;\n    const targetHeight = imgRef.current?.clientHeight;\n\n    const matchingSize = thumbMeta.sizes.find((size) => {\n      return targetWidth < size.pixelWidth && targetHeight < size.pixelHeight;\n    });\n\n    setLoadSize(matchingSize ?? 'full');\n  };\n\n  const state: 'idle' | 'loading-tiny' | 'tiny' | 'loading-full' | 'loaded' = loadSize\n    ? imageUrl\n      ? 'loaded'\n      : 'loading-full'\n    : isInView\n    ? thumbMeta && thumbMeta.url?.length\n      ? 'tiny'\n      : 'loading-tiny'\n    : 'idle';\n\n  // const discardUrls = () => {\n  //   const currentUrl = state === 'loaded' ? imageUrl : thumbMeta?.url;\n  //   if (currentUrl) {\n  //     window.URL.revokeObjectURL(currentUrl);\n  //   }\n  // };\n\n  return (\n    <figure\n      className={`${\n        className?.indexOf('absolute') !== -1 ? '' : 'relative'\n      } overflow-hidden ${className}`}\n    >\n      {state !== 'loading-tiny' ? (\n        <img\n          src={state === 'loaded' ? imageUrl : thumbMeta?.url}\n          alt={isInView && thumbMeta?.url ? alt : ' '}\n          className={`${state !== 'loaded' ? 'blur-[50px]' : ''} ${\n            cover ? 'h-full w-full object-cover' : 'h-auto w-full'\n          }`}\n          title={\n            title ||\n            `${fileId}@${\n              loadSize !== undefined && loadSize !== 'full'\n                ? `${loadSize.pixelWidth}x${loadSize.pixelHeight}`\n                : loadSize\n            }`\n          }\n          ref={imgRef}\n          width={thumbMeta?.naturalSize?.width}\n          height={thumbMeta?.naturalSize?.height}\n          // onLoad={discardUrls}\n        />\n      ) : null}\n    </figure>\n  );\n};\n\nexport default ExternalImage;\n","import {\n  PostContent,\n  Article,\n  getChannelDrive,\n  getTargetDriveFromProfileId,\n  BuiltInProfiles,\n  Image as ImageType,\n} from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport useChannel from '../../hooks/blog/useChannel';\nimport useSocialChannel from '../../hooks/socialFeed/useSocialChannel';\nimport Bubble from '../ui/Icons/Bubble/Bubble';\nimport Triangle from '../ui/Icons/Triangle/Triangle';\nimport ConnectionImage from './ConnectionImage';\nimport ExternalImage from './media/ExternalImage';\nimport Image from '../Image/Image';\nimport useSiteData from '../../hooks/siteData/useSiteData';\nimport { Link } from 'react-router-dom';\n\ninterface PostTeaserCardProps {\n  className?: string;\n  post: PostContent;\n  // linkRoot: string;\n  isDraft?: boolean;\n}\ninterface ExternalPostTeaserCardProps extends Omit<PostTeaserCardProps, 'linkRoot'> {\n  dotYouId: string;\n}\n\nexport const PostTeaserCard: FC<PostTeaserCardProps> = ({ className, post }) => {\n  const { data: channel } = useChannel({ channelId: post.channelId });\n  const { owner } = useSiteData().data ?? {};\n  const ownerHost = window.location.hostname;\n\n  const targetDrive = getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId);\n\n  const imageFileIds = (post as ImageType).imageFileIds;\n\n  return (\n    <div className={`w-full rounded-lg ${className ?? ''}`}>\n      <Link\n        to={`/home/posts/${channel ? channel.slug : 'public-posts'}/${post.slug ?? post.id}`}\n        className=\"relative flex h-full flex-col rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 sm:flex-row\"\n      >\n        <div className=\"py-4 pl-4\">\n          <Image\n            fileId={owner?.profileImageId}\n            targetDrive={targetDrive}\n            className=\"h-[5rem] w-[5rem] rounded-full\"\n            cover={true}\n          />\n        </div>\n        <div className=\"flex max-w-lg flex-grow flex-col py-3 px-4\">\n          <div className=\"pr-6\">\n            {/* Card Header */}\n            <div className=\"mb-1 flex flex-row items-center text-foreground text-opacity-60\">\n              <h2 className=\"mr-4\">{ownerHost}</h2>\n              <span className=\"text-xs font-medium\">\n                {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {post.type}\n                {channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            {/* Type specific content */}\n            {post.type === 'Article' ? (\n              <>\n                <h1 className=\"text-foreground text-opacity-80\">{post.caption}</h1>\n                <p className=\"leading-relaxed text-foreground text-opacity-70\">\n                  {(post as Article).abstract}\n                </p>\n              </>\n            ) : (\n              <h1 className=\"text-foreground text-opacity-70\">{post.caption}</h1>\n            )}\n          </div>\n\n          {post.primaryImageFileId &&\n            (imageFileIds && imageFileIds.length > 1 ? (\n              <PostImageGallery\n                channelId={post.channelId}\n                fileIds={imageFileIds}\n                className=\"my-4\"\n              />\n            ) : (\n              <div className={`relative py-4 pr-6`}>\n                <Image\n                  className={`${'sm:rounded-lg'} ${\n                    post.type === 'Image' || post.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${post.type === 'Video' ? 'aspect-video' : ''}`}\n                  fileId={post.primaryImageFileId}\n                  targetDrive={getChannelDrive(post.channelId)}\n                  alt=\"post\"\n                />\n                {post.type === 'Video' && (\n                  <>\n                    <Triangle className=\"text-color absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20\" />\n                  </>\n                )}\n              </div>\n            ))}\n\n          {/* Interacts */}\n          <div className=\"mt-auto flex items-center pr-6 text-sm text-foreground text-opacity-10\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport const PostImageGallery = ({\n  channelId,\n  fileIds,\n  className,\n  maxVisible = 4,\n}: {\n  fileIds: string[];\n  channelId: string;\n  className?: string;\n  maxVisible?: number;\n}) => {\n  const slicedFileIds = fileIds.length > maxVisible ? fileIds.slice(0, maxVisible) : fileIds;\n  const countExcludedFromView = fileIds.length - slicedFileIds.length;\n\n  return (\n    <div className={`overflow-hidden sm:rounded-lg ${className ?? ''}`}>\n      <div className={`-m-[2px] flex flex-row flex-wrap`}>\n        {slicedFileIds.map((fileId, index) => (\n          <div className=\"p-[2px] md:w-1/2\" key={fileId}>\n            <div className=\"relative h-full w-full\">\n              <Image\n                className={`h-full max-h-[30rem] w-auto `}\n                fileId={fileId}\n                targetDrive={getChannelDrive(channelId)}\n                alt=\"post\"\n                cover={true}\n              />\n              {index === maxVisible - 1 && countExcludedFromView > 0 ? (\n                <div className=\"absolute inset-0 flex flex-col justify-center bg-black bg-opacity-40 text-6xl font-light text-white\">\n                  <span className=\"block text-center\">+{countExcludedFromView}</span>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExternalPostTeaserCard: FC<ExternalPostTeaserCardProps> = ({ className, dotYouId, post }) => {\n  const { data: channel } = useSocialChannel({ dotYouId, channelId: post.channelId }).fetch;\n  const imageFileIds = (post as ImageType).imageFileIds;\n\n  return (\n    <div className={`w-full rounded-lg ${className ?? ''}`}>\n      <a\n        href={`https://${dotYouId}/home/posts/${channel ? channel.slug : 'public-posts'}/${\n          post.slug ?? post.id\n        }`}\n        target=\"__blank\"\n        rel=\"nofollow noreferrer\"\n        className=\"relative flex h-full flex-col rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 sm:flex-row\"\n      >\n        <div className=\"py-4 pl-4\">\n          <ConnectionImage dotYouId={dotYouId} className=\"h-[5rem] w-[5rem] rounded-full\" />\n        </div>\n        <div className=\"flex max-w-lg flex-grow flex-col py-3 px-4\">\n          <div className=\"pr-6\">\n            {/* Card Header */}\n            <div className=\"mb-1 flex flex-row items-center text-foreground text-opacity-60\">\n              <h2 className=\"mr-4\">{dotYouId}</h2>\n              <span className=\"text-xs font-medium\">\n                {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {post.type}\n                {channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            {/* Type specific content */}\n            {post.type === 'Article' ? (\n              <>\n                <h1 className=\"text-foreground text-opacity-80\">{post.caption}</h1>\n                <p className=\"leading-relaxed text-foreground text-opacity-70\">\n                  {(post as Article).abstract}\n                </p>\n              </>\n            ) : (\n              <h1 className=\"text-foreground text-opacity-70\">{post.caption}</h1>\n            )}\n          </div>\n\n          {post.primaryImageFileId &&\n            (imageFileIds && imageFileIds.length > 1 ? (\n              <ExternalPostImageGallery\n                dotYouId={dotYouId}\n                channelId={post.channelId}\n                fileIds={imageFileIds}\n                className=\"my-4\"\n              />\n            ) : (\n              <div className={`relative py-4 pr-6`}>\n                <ExternalImage\n                  className={`${'sm:rounded-lg'} ${\n                    post.type === 'Image' || post.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${post.type === 'Video' ? 'aspect-video' : ''}`}\n                  dotYouId={dotYouId}\n                  fileId={post.primaryImageFileId}\n                  targetDrive={getChannelDrive(post.channelId)}\n                  alt=\"post\"\n                />\n                {post.type === 'Video' && (\n                  <>\n                    <Triangle className=\"text-color absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20\" />\n                  </>\n                )}\n              </div>\n            ))}\n\n          {/* Interacts */}\n          <div className=\"mt-auto flex items-center pr-6 text-sm text-foreground text-opacity-10\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nconst ExternalPostImageGallery = ({\n  dotYouId,\n  channelId,\n  fileIds,\n  className,\n  maxVisible = 4,\n}: {\n  dotYouId: string;\n  fileIds: string[];\n  channelId: string;\n  className?: string;\n  maxVisible?: number;\n}) => {\n  const slicedFileIds = fileIds.length > maxVisible ? fileIds.slice(0, maxVisible) : fileIds;\n  const countExcludedFromView = fileIds.length - slicedFileIds.length;\n\n  return (\n    <div className={`overflow-hidden sm:rounded-lg ${className ?? ''}`}>\n      <div className={`-m-[2px] flex flex-row flex-wrap`}>\n        {slicedFileIds.map((fileId, index) => (\n          <div className=\"w-1/2 p-[2px]\" key={fileId}>\n            <div className=\"relative h-full w-full\">\n              <ExternalImage\n                className={`h-full max-h-[30rem] w-auto`}\n                fileId={fileId}\n                targetDrive={getChannelDrive(channelId)}\n                alt=\"post\"\n                cover={true}\n                dotYouId={dotYouId}\n              />\n              {index === maxVisible - 1 && countExcludedFromView > 0 ? (\n                <div className=\"absolute inset-0 flex flex-col justify-center bg-black bg-opacity-40 text-6xl font-light text-white\">\n                  <span className=\"block text-center\">+{countExcludedFromView}</span>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalPostTeaserCard;\n","import {\n  ProviderOptions,\n  BlogDefinitionProvider,\n  BlogPostReadonlyProvider,\n  DriveProvider,\n  PostContent,\n  PostFile,\n  DataUtil,\n  SecurityGroupType,\n  UploadInstructionSet,\n  UploadFileMetadata,\n  postTypeToTag,\n  BlogConfig,\n  UploadResult,\n  ApiType,\n} from '@youfoundation/dotyoucore-js';\n\ninterface BlostPostProviderOptions extends ProviderOptions {\n  driveProvider: DriveProvider;\n  blogDefinitionProvider: BlogDefinitionProvider;\n}\n\nexport default class BlogPostProvider extends BlogPostReadonlyProvider {\n  private static instance: BlogPostProvider;\n\n  constructor(options: BlostPostProviderOptions) {\n    super({\n      api: options.api,\n      sharedSecret: options.sharedSecret,\n      driveProvider: options.driveProvider,\n      blogDefinitionProvider: options.blogDefinitionProvider,\n    });\n  }\n\n  async savePost<T extends PostContent>(file: PostFile<T>, channelId: string): Promise<string> {\n    if (!file.content.id) {\n      file.content.id = file.content.slug\n        ? DataUtil.toGuidId(file.content.slug)\n        : DataUtil.getNewId();\n    } else if (!file.fileId) {\n      // Check if content.id exists and with which fileId\n      file.fileId = (await this.getPost(channelId, file.content.id))?.fileId ?? undefined;\n    }\n\n    const encrypt = !(\n      file.acl?.requiredSecurityGroup === SecurityGroupType.Anonymous ||\n      file.acl?.requiredSecurityGroup === SecurityGroupType.Authenticated\n    );\n\n    const instructionSet: UploadInstructionSet = {\n      transferIv: this._driveProvider.Random16(),\n      storageOptions: {\n        overwriteFileId: file?.fileId ?? '',\n        drive: this._blogDefinitionProvider.getTargetDrive(channelId),\n      },\n      transitOptions: null,\n    };\n\n    const payloadJson: string = DataUtil.JsonStringify64(file.content);\n    const payloadBytes = DataUtil.stringToUint8Array(payloadJson);\n\n    const uniqueId = file.content.slug ? DataUtil.toGuidId(file.content.slug) : file.content.id;\n\n    // Set max of 3kb for jsonContent so enough room is left for metadata\n    const shouldEmbedContent = payloadBytes.length < 3000;\n    const metadata: UploadFileMetadata = {\n      contentType: 'application/json',\n      appData: {\n        tags: [\n          postTypeToTag('type' in file.content ? file.content.type : 'Article').toString(),\n          file.content.id,\n          ...(uniqueId && uniqueId !== file.content.id ? [uniqueId] : []),\n        ],\n        uniqueId: uniqueId,\n        contentIsComplete: shouldEmbedContent,\n        fileType: BlogConfig.PostFileType,\n        jsonContent: shouldEmbedContent ? payloadJson : null,\n      },\n      payloadIsEncrypted: encrypt,\n      accessControlList: file.acl,\n    };\n\n    const result: UploadResult = await this._driveProvider.Upload(\n      instructionSet,\n      metadata,\n      payloadBytes,\n      undefined,\n      encrypt\n    );\n\n    return result.file.fileId;\n  }\n\n  async removePost(fileId: string, channelId: string) {\n    const targetDrive = this._blogDefinitionProvider.getTargetDrive(channelId);\n    this._driveProvider.DeleteFile(targetDrive, fileId);\n  }\n\n  public static getInstance(sharedSecret?: Uint8Array): BlogPostProvider {\n    if (!sharedSecret) {\n      throw new Error('Shared Secret not set for OwnerProvider');\n    }\n\n    if (!BlogPostProvider.instance) {\n      const driveProvider = new DriveProvider({ api: ApiType.Owner, sharedSecret: sharedSecret });\n      const blogDefinitionProvider = new BlogDefinitionProvider({\n        api: ApiType.Owner,\n        sharedSecret: sharedSecret,\n        driveProvider: driveProvider,\n      });\n\n      BlogPostProvider.instance = new BlogPostProvider({\n        api: ApiType.Owner,\n        sharedSecret: sharedSecret,\n        driveProvider: driveProvider,\n\n        blogDefinitionProvider: blogDefinitionProvider,\n      });\n    }\n\n    return BlogPostProvider.instance;\n  }\n}\n","import { InfiniteData, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { AccessControlList, ApiType, CoreClient } from '@youfoundation/dotyoucore-js';\nimport {\n  PostFile,\n  PostContent,\n  MultiRequestCursoredResult,\n  getChannelDrive,\n} from '@youfoundation/dotyoucore-js';\nimport BlogPostProvider from '../../../provider/blog/BlogPostProvider';\nimport { PostFileVm } from '../../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst usePost = () => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const savePost = async ({\n    blogFile,\n    channelId,\n  }: {\n    blogFile: PostFile<PostContent>;\n    channelId: string;\n  }) => {\n    const blogPostProvider = BlogPostProvider.getInstance(getSharedSecret());\n    return await blogPostProvider.savePost(blogFile, channelId);\n  };\n\n  const saveFiles = async ({\n    files,\n    acl,\n    channelId,\n  }: {\n    files: File[];\n    acl: AccessControlList;\n    channelId: string;\n  }) => {\n    const coreClient = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n    const targetDrive = getChannelDrive(channelId);\n\n    const imageFileIds = await Promise.all(\n      files.map(async (file) => {\n        const bytes = new Uint8Array(await file.arrayBuffer());\n        return await coreClient.mediaProvider.uploadImage(\n          targetDrive,\n          undefined,\n          acl,\n          bytes,\n          undefined,\n          file.type\n        );\n      })\n    );\n\n    return imageFileIds.filter(Boolean) as string[];\n  };\n\n  return {\n    save: useMutation(savePost, {\n      onSuccess: (_data, variables) => {\n        if (variables.blogFile.content.slug) {\n          queryClient.invalidateQueries(['blog', variables.blogFile.content.slug]);\n        } else {\n          queryClient.invalidateQueries(['blog']);\n        }\n        queryClient.removeQueries(['blogs']);\n\n        //TODO: publishStaticFiles();\n      },\n      onMutate: async (newPost) => {\n        await queryClient.cancelQueries(['social-feeds']);\n\n        // Update section attributes\n        const previousFeed:\n          | InfiniteData<MultiRequestCursoredResult<PostFileVm<PostContent>[]>>\n          | undefined = queryClient.getQueryData(['social-feeds']);\n\n        if (previousFeed) {\n          const newFeed = { ...previousFeed };\n          newFeed.pages[0].results = [\n            {\n              ...newPost.blogFile,\n              dotYouId: window.location.hostname,\n            },\n            ...newFeed.pages[0].results,\n          ];\n\n          queryClient.setQueryData(['social-feeds'], newFeed);\n\n          console.log(newFeed.pages[0].results);\n        }\n\n        return { newPost, previousFeed };\n      },\n      onError: (err, _newCircle, context) => {\n        console.error(err);\n\n        // Revert local caches to what they were\n        queryClient.setQueryData(['social-feeds'], context?.previousFeed);\n      },\n    }),\n    saveFiles: useMutation(saveFiles),\n  };\n};\n\nexport default usePost;\n","import { ReactNode } from 'react';\nimport Exclamation from '../../Icons/Exclamation/Exclamation';\nimport Question from '../../Icons/Question/Question';\n\ninterface AlertProps {\n  type: 'success' | 'warning' | 'critical' | 'info';\n  title?: ReactNode;\n  children?: ReactNode;\n  className?: string;\n  isCompact?: boolean;\n}\n\nconst Alert = ({ type, title, children, className, isCompact }: AlertProps) => {\n  const bgClass =\n    type === 'critical'\n      ? 'bg-red-50 dark:bg-red-900 border-red-100 dark:border-red-800 dark:text-white'\n      : type === 'warning'\n      ? 'bg-orange-50 border-orange-100'\n      : 'bg-slate-100 dark:bg-slate-700 dark:border-slate-900';\n\n  return (\n    <section className={`bg-red rounded-lg border p-5 ${bgClass} ${className ?? ''}`}>\n      <div className={`flex w-full flex-row flex-wrap sm:flex-nowrap`}>\n        {type === 'critical' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-red-400 dark:text-red-300 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : type === 'warning' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-orange-400 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-blue-400 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Question />\n          </div>\n        )}\n        <div className={`ml-5 flex-grow ${isCompact ? 'contents' : 'contents sm:block'}`}>\n          {title && <p className=\"ml-3 mb-2 text-2xl sm:ml-0\">{title}</p>}\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Alert;\n","import { useEffect, useState } from 'react';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Times from '../../Icons/Times/Times';\nimport Alert from '../Alert/Alert';\n\nconst getKnownErrorMessages = (errorCode: number): string | undefined => {\n  if (errorCode) {\n    switch (errorCode) {\n      case 1001:\n        return t('InvalidAuthToken');\n      case 2001:\n        return t('InvalidNotificationType');\n      case 2002:\n        return t('UnknownNotificationId');\n      case 3001:\n        return t('A circle cannot have no permissions, please review and try again');\n      case 3002:\n        return t('CannotAllowCirclesOnAuthenticatedOnly');\n      case 3003:\n        return t('CannotAllowCirclesOrIdentitiesOnAnonymousOrOwnerOnly');\n      case 3004:\n        return t('CannotDeleteCircleWithMembers');\n      case 3005:\n        return t('IdentityAlreadyMemberOfCircle');\n      case 4001:\n        return t('CannotAllowAnonymousReadsOnOwnerOnlyDrive');\n      case 4002:\n        return t('CannotUpdateDeletedFile');\n      case 4003:\n        return t('DriveAliasAndTypeAlreadyExists');\n      case 4004:\n        return t('InvalidGrantNonExistingDrive');\n      case 4101:\n        return t('CannotOverwriteNonExistentFileStef');\n      case 4102:\n        return t('CannotUploadEncryptedFileForAnonymous');\n      case 4103:\n        return t('CannotUseGlobalTransitIdOnTransientFile');\n      case 4104:\n        return t('DriveSecurityAndAclMismatch');\n      case 4105:\n        return t('ExistingFileWithUniqueId');\n      case 4106:\n        return t('FileNotFound');\n      case 4107:\n        return t('IdAlreadyExists');\n      case 4108:\n        return t('InvalidInstructionSet');\n      case 4109:\n        return t('InvalidKeyHeader');\n      case 4110:\n        return t('InvalidRecipient');\n      case 4111:\n        return t('InvalidTargetDrive');\n      case 4112:\n        return t('InvalidThumnbnailName');\n      case 4113:\n        return t('InvalidTransferFileType');\n      case 4114:\n        return t('InvalidTransferType');\n      case 4115:\n        return t('MalformedMetadata');\n      case 4116:\n        return t('MissingUploadData');\n      case 4117:\n        return t('TransferTypeNotSpecified');\n      case 4118:\n        return t('UnknownId');\n      case 5001:\n        return t('CannotSendConnectionRequestToExistingIncomingRequest');\n      case 5002:\n        return t('CannotSendMultipleConnectionRequestToTheSameIdentity');\n      case 5003:\n        return t('You cannot send a connection request to yourself');\n      case 6001:\n        return t('AppNotRegistered');\n      case 9001:\n        return t('InvalidFlagName');\n      case 9002:\n        return t('NotInitialized');\n      case 9003:\n        return t('UnknownFlagName');\n    }\n\n    console.log('Error code found, but no corresponding message in the dictionary', errorCode);\n  }\n  return;\n};\n\nconst ErrorNotification = ({ error }: { error: unknown }) => {\n  const [isDismissed, setIsDismissed] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setIsDismissed(false);\n    }\n  }, [error]);\n\n  if (!error || isDismissed) {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const errorCode = (error as any)?.response?.data?.errorCode;\n  const knownErrorMessage = getKnownErrorMessages(errorCode);\n\n  return (\n    <div\n      className=\"fixed inset-0 z-10 flex bg-black bg-opacity-10\"\n      onClick={() => setIsDismissed(true)}\n    >\n      <Alert\n        type={knownErrorMessage ? 'warning' : 'critical'}\n        className=\"mx-auto mt-10 mb-auto cursor-pointer\"\n      >\n        <div className=\"flex flex-row\">\n          {knownErrorMessage ??\n            (error instanceof Error\n              ? error.message\n              : t('Something went wrong, please try again later'))}\n          <Times className=\"my-auto ml-5 h-5 w-5\" />\n        </div>\n      </Alert>\n    </div>\n  );\n};\n\nexport default ErrorNotification;\n","import {\n  BlogConfig,\n  ChannelDefinition,\n  DataUtil,\n  PostContent,\n  PostFile,\n  SecurityGroupType,\n  Image,\n} from '@youfoundation/dotyoucore-js';\nimport React, { Ref } from 'react';\nimport { useRef, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useChannels from '../../hooks/blog/useChannels';\nimport usePost from '../../hooks/socialFeed/post/usePost';\nimport ErrorNotification from '../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../ui/Buttons/Button';\nimport Button from '../ui/Buttons/Button';\n\nconst DEFAULT_POST: PostContent = {\n  id: '',\n  channelId: BlogConfig.PublicChannel.channelId,\n  slug: '',\n  dateUnixTime: 0,\n  type: 'Tweet',\n  caption: '',\n};\n\nconst PostComposer = ({ onPost }: { onPost?: () => void }) => {\n  const { mutateAsync: savePost, error: savePostError } = usePost().save;\n  const { mutateAsync: saveFiles, error: saveFilesError } = usePost().saveFiles;\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const [post, setPost] = useState<PostContent>({ ...DEFAULT_POST });\n  const [channel, setChannel] = useState<ChannelDefinition>(BlogConfig.PublicChannel);\n  const [files, setFiles] = useState<File[]>();\n\n  const [state, setState] = useState<'idle' | 'loading' | 'error'>('idle');\n\n  const doPost = async () => {\n    setState('loading');\n\n    try {\n      // Upload files, if any\n      let imageFileIds: string[] | undefined = undefined;\n      if (files?.length && channel?.acl) {\n        imageFileIds = await saveFiles({\n          acl: channel.acl,\n          channelId: channel.channelId,\n          files,\n        });\n      }\n\n      // Upload posts\n      const postId = DataUtil.getNewId();\n      const toPostPost: PostContent | Image = {\n        ...post,\n        dateUnixTime: new Date().getTime(),\n        id: postId,\n        slug: postId,\n        channelId: channel.channelId,\n        primaryImageFileId: imageFileIds?.[0] ?? undefined,\n      };\n\n      if (imageFileIds && imageFileIds.length > 1) {\n        toPostPost.type = 'Image';\n        (toPostPost as Image).imageFileIds = imageFileIds;\n      }\n\n      const postFile: PostFile<PostContent> = {\n        content: toPostPost,\n        acl: channel.acl ? { ...channel.acl } : { requiredSecurityGroup: SecurityGroupType.Owner },\n      };\n\n      await savePost({ blogFile: postFile, channelId: channel.channelId });\n\n      // Reset ui:\n      setPost({ ...DEFAULT_POST });\n      setChannel(BlogConfig.PublicChannel);\n      setFiles(undefined);\n\n      if (inputRef.current) {\n        inputRef.current.value = DEFAULT_POST.caption;\n      }\n      if (selectRef.current) {\n        selectRef.current.value = BlogConfig.PublicChannel.channelId;\n      }\n\n      // Notifiy parent:\n      onPost && onPost();\n    } catch (ex) {\n      setState('error');\n    }\n\n    setState('idle');\n  };\n\n  return (\n    <div className=\"mb-5 w-full rounded-md border border-gray-200 border-opacity-60 p-4 dark:border-gray-800\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          doPost();\n          return false;\n        }}\n      >\n        <textarea\n          defaultValue={post.caption}\n          onChange={(e) =>\n            setPost({\n              ...post,\n              caption: e.target.value,\n            })\n          }\n          placeholder={t(\"What's up?\")}\n          className={`w-full resize-none rounded-sm bg-transparent p-2 ${\n            post.caption?.length ? '' : 'h-[2.5rem]'\n          }`}\n          ref={inputRef}\n          required\n        />\n        <FileOverview files={files} setFiles={setFiles} className=\"mt-2\" />\n        <div className=\"-m-2 mt-3 flex flex-row flex-wrap items-center md:flex-nowrap\">\n          <div className=\"m-2 text-xl font-extralight leading-4 text-opacity-50\">\n            <FileSelector onChange={(files) => setFiles(files)} />\n          </div>\n          <ChannelSelector\n            className=\"m-2 ml-auto\"\n            defaultValue={post?.channelId}\n            onChange={(channel) => channel && setChannel(channel)}\n            ref={selectRef}\n          />\n          <Button\n            className={`m-2 w-full md:w-auto ${\n              post.caption?.length ? '' : 'pointer-events-none opacity-20 grayscale'\n            } ${state === 'loading' ? 'pointer-events-none animate-pulse' : ''}`}\n          >\n            {t('Post')}\n          </Button>\n        </div>\n      </form>\n      {state === 'error' ? <ErrorNotification error={savePostError || saveFilesError} /> : null}\n    </div>\n  );\n};\n\nconst ChannelSelector = React.forwardRef(\n  (\n    {\n      className,\n      defaultValue,\n      onChange,\n    }: {\n      className?: string;\n      defaultValue?: string;\n      onChange: (channel: ChannelDefinition | undefined) => void;\n    },\n    ref: Ref<HTMLSelectElement>\n  ) => {\n    const { data: channels, isLoading } = useChannels();\n\n    return (\n      <select\n        className={`cursor-pointer bg-transparent px-3 py-2 text-sm ${className ?? ''}`}\n        defaultValue={defaultValue}\n        onChange={(e) => onChange(channels?.find((chnl) => chnl.channelId === e.target.value))}\n        ref={ref}\n      >\n        {isLoading || !channels ? (\n          <option>{t('Public Posts')}</option>\n        ) : (\n          <>\n            {channels.map((channel) => (\n              <option value={channel.channelId} key={channel.channelId}>\n                {channel.name}\n              </option>\n            ))}\n          </>\n        )}\n      </select>\n    );\n  }\n);\n\nconst FileSelector = ({ onChange }: { onChange?: (files: File[]) => void }) => {\n  return (\n    <>\n      <label htmlFor=\"file-select\" className=\"cursor-pointer px-2 py-1\">\n        +\n      </label>\n      <input\n        id=\"file-select\"\n        name=\"file-select\"\n        onChange={(e) => {\n          const files = e.target?.files;\n          if (files) {\n            onChange && onChange(Array.from(files));\n          }\n        }}\n        type=\"file\"\n        accept=\"image/png, image/jpeg, image/tiff, image/webp, image/svg+xml\"\n        multiple\n        className={`sr-only`}\n      />\n    </>\n  );\n};\n\nconst FileOverview = ({\n  files,\n  setFiles,\n  className,\n}: {\n  files?: File[];\n  setFiles: (files: File[]) => void;\n  className?: string;\n}) => {\n  if (!files || !files.length) {\n    return null;\n  }\n\n  return (\n    <div className={`-m-1 flex flex-row flex-wrap ${className ?? ''}`}>\n      {files.map((currFile) => {\n        const url = URL.createObjectURL(currFile);\n        return (\n          <div key={url} className=\"relative p-1 md:w-1/2\">\n            <img src={url} onLoad={() => URL.revokeObjectURL(url)} />\n            <ActionButton\n              className=\"absolute top-3 right-3\"\n              icon=\"times\"\n              type=\"remove\"\n              size=\"square\"\n              onClick={() => setFiles([...files.filter((file) => file.name !== currFile.name)])}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PostComposer;\n","import useSocialFeed from '../../hooks/socialFeed/useSocialFeed';\nimport { useEffect, useRef, useState } from 'react';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\nimport { PostContent } from '@youfoundation/dotyoucore-js';\nimport { PostFileVm } from '../../provider/transit/ExternalPostsDataProvider';\nimport { flattenInfinteData } from '../../helpers/common';\nimport LoadingParagraph from '../../components/ui/LoadingParagraph/LoadingParagraph';\nimport ExternalPostTeaserCard, {\n  PostTeaserCard,\n} from '../../components/SocialFeed/ExternalPostTeaserCard';\nimport { useNavigate } from 'react-router-dom';\nimport useTabs from '../../hooks/tabs/useTabs';\nimport NavPills from '../../components/ui/Submenu/NavPills';\nimport ProfileHero from '../Home/Common/ProfileHero/ProfileHero';\nimport PostComposer from '../../components/SocialFeed/PostComposer';\n\nconst PAGE_SIZE = 10;\n\nconst Feed = ({ className }: { className?: string }) => {\n  const { tabs, isTabs } = useTabs();\n  const navigate = useNavigate();\n  const [forceRender, setForceRender] = useState(false);\n\n  const {\n    data: posts,\n    hasNextPage: hasMorePosts,\n    isLoading: postsLoading,\n    fetchNextPage,\n  } = useSocialFeed({ pageSize: PAGE_SIZE }).fetchAll;\n\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useIntersection(\n    hasMorePosts ? loadMoreRef : undefined,\n    () => {\n      fetchNextPage();\n    },\n    true\n  );\n\n  // Flatten all pages, sorted descending and slice on the max number expected\n  const flattenedPosts = flattenInfinteData<PostFileVm<PostContent>>(\n    posts,\n    PAGE_SIZE,\n    (a, b) => b.content?.dateUnixTime - a.content?.dateUnixTime\n  );\n\n  useEffect(() => {\n    if (forceRender) {\n      setForceRender(false);\n    }\n  }, [forceRender]);\n\n  return (\n    <>\n      <ProfileHero hideLinks={true} />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        <>\n          {isTabs ? (\n            <div className=\"bg-slate-500 bg-opacity-5 dark:bg-slate-500 dark:bg-opacity-5\">\n              <div className=\"container mx-auto overflow-auto px-5 py-4\">\n                <NavPills\n                  onChange={(newTab) => navigate(`/home/${newTab}`)}\n                  items={tabs.map((tab) => {\n                    return { ...tab, isActive: tab.key === 'feed' };\n                  })}\n                  disallowWrap={true}\n                />\n              </div>\n            </div>\n          ) : null}\n          <div className=\"container mx-auto px-5\">\n            <div className=\"py-10\">\n              <div className={className}>\n                <div className=\"-mx-2 flex max-w-6xl flex-col lg:flex-row xl:-mx-4\">\n                  <div className=\"py-2 px-2 lg:w-2/3 xl:px-4\">\n                    <PostComposer onPost={() => setForceRender(true)} />\n                    {postsLoading ? (\n                      <div className=\"-mx-4\">\n                        <LoadingParagraph className=\"m-4 h-10\" />\n                        <LoadingParagraph className=\"m-4 h-10\" />\n                        <LoadingParagraph className=\"m-4 h-10\" />\n                      </div>\n                    ) : flattenedPosts?.length ? (\n                      <>\n                        {flattenedPosts.map((post) => {\n                          if (post.dotYouId === window.location.hostname) {\n                            return (\n                              <PostTeaserCard\n                                key={post.fileId || post.content.id}\n                                post={post.content}\n                                className={`my-2 ${\n                                  !post.fileId\n                                    ? 'overflow-hidden bg-slate-100 dark:bg-slate-600'\n                                    : ''\n                                }`}\n                              />\n                            );\n                          }\n                          return (\n                            <ExternalPostTeaserCard\n                              key={post.fileId || post.content.id}\n                              post={post.content}\n                              dotYouId={post.dotYouId}\n                              className=\"my-2\"\n                            />\n                          );\n                        })}\n                        <div ref={loadMoreRef} className=\"h-1 w-full\"></div>\n                      </>\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      </section>\n    </>\n  );\n};\n\nexport default Feed;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["isOpen","title","onCancel","target","usePortal","dialog","DialogWrapper","onClose","createPortal","className","useAuth","isAuthenticated","getIdentity","isOwner","useState","isLogin","setIsLogin","href","window","location","host","undefined","onClick","t","children","confirmText","onConfirm","Question","isSidePanel","setIsOpen","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","require","xmlns","icon","type","state","size","isDisabled","Icon","props","Exclamation","Arrow","Times","colorClasses","widthClasses","indexOf","sizeClasses","stateClasses","disabled","keepOpenOnBlur","wrapperRef","useRef","useOutsideTrigger","role","ref","id","getSharedSecret","getApiType","fetchData","client","PublicClient","api","sharedSecret","fileReadOnlyProvider","GetFile","fileData","has","linkAttributes","get","sort","attrA","attrB","payload","priority","map","entry","attribute","text","data","LinkProfileFields","length","profileDataProvider","getAttributeVersions","BuiltInProfiles","AttributeDefinitions","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","style","includeSocials","direction","siteData","useSiteData","links","useLinks","buttonClass","flexDir","social","index","username","rel","Facebook","Twitter","Linkedin","Instagram","Tiktok","Person","link","items","onChange","disallowWrap","item","isActive","key","channelSlug","channelId","fetchChannelData","channel","forEach","foundEntry","find","possibleChannel","header","fileMetadata","appData","fileType","BlogConfig","slug","blogPostReadonlyProvider","getChannelDefinitionBySlug","getChannelDefinition","template","parseChannelTemplate","templateId","parseInt","ChannelTemplate","channels","entries","filter","getChannels","pageSize","fetchConnections","circleNetworkReadOnlyProvider","getConnections","pageNumber","results","fetch","enabled","retry","rootElemRef","useEffect","rootElem","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childElementCount","hideLinks","owner","home","targetDrive","getTargetDriveFromProfileId","showProfileImage","profileImageId","fileId","headerImageFileId","HomePageConfig","cover","firstName","surName","tagLine","socialHandles","_internalMetadataCache","Map","TransitProvider","options","driveProvider","dotYouId","params","ro","this","createAxiosClient","cursorState","maxRecords","includeMetadataHeader","request","queryParams","resultOptionsRequest","post","then","response","sharedSecretEncryptedKeyHeader","includesJsonContent","payloadIsEncrypted","DecryptKeyHeader","keyheader","contentIsComplete","DecryptJsonContent","GetPayloadAsJson","keyHeader","GetPayloadBytes","bytes","json","DataUtil","Uint8Array","JSON","parse","ex","console","warn","replaceAll","str","replace","RegExp","jsonWithRemovedQuote","jsonWithRemovedEmDash","o","file","config","responseType","headers","payloadencrypted","sharedSecretEncryptedKeyHeader64","sharedsecretencryptedheader64","log","iv","AesEncrypt","catch","error","cipher","DecryptUsingKeyHeader","width","height","cacheKey","alias","cacheData","promise","set","encryptedKeyHeader","driveType","result","targetDriveInfo","Error","instance","DriveProvider","ApiType","OwnerProviderBase","_internalChannelCache","ExternalPostsDataProvider","transitProvider","getInstance","dotYouIds","includeOwn","allCursors","Promise","all","getRecents","resultsPerChannel","resultPerConnection","ownerDotYou","hostname","getRecentPosts","resultOfOwn","push","postFile","flat","GetDrivesByType","drives","channelHeaders","drive","name","getChannel","definition","getChannelDrive","QueryBatch","searchResults","dsr","serverMetadata","accessControlList","GetPayload","acl","content","posts","useConnections","connections","connectionsFetched","isFetched","fetchAll","pageParam","externalPostDataProvider","getRecentsFromConnections","connection","Boolean","useInfiniteQuery","getNextPageParam","lastPage","ExternalMediaProvider","GetFileHeader","getDecryptedMetadata","previewThumbnail","buffer","url","URL","createObjectURL","Blob","contentType","naturalSize","pixelWidth","pixelHeight","sizes","additionalThumbnails","getDecryptedImageData","bytesPromise","GetThumbBytes","imageFileId","imageDrive","queryClient","useQueryClient","fetchImageData","externalMediaProvider","getDecryptedImageUrl","testCache","getQueryData","getDecryptedThumbnailMeta","onError","err","alt","isInView","setIsInView","loadSize","setLoadSize","imgRef","thumbMeta","useExternalTinyThumb","useExternalImage","imageUrl","useIntersection","findLoadOptimalSize","setTimeout","targetWidth","clientWidth","targetHeight","clientHeight","matchingSize","src","PostTeaserCard","useChannel","ownerHost","imageFileIds","to","Image","Date","dateUnixTime","toLocaleDateString","month","day","year","caption","abstract","primaryImageFileId","PostImageGallery","fileIds","Triangle","Bubble","maxVisible","slicedFileIds","slice","countExcludedFromView","ExternalPostImageGallery","useSocialChannel","ConnectionImage","BlogPostProvider","blogDefinitionProvider","getPost","encrypt","requiredSecurityGroup","SecurityGroupType","instructionSet","transferIv","_driveProvider","Random16","storageOptions","overwriteFileId","_blogDefinitionProvider","getTargetDrive","transitOptions","payloadJson","payloadBytes","uniqueId","shouldEmbedContent","metadata","tags","postTypeToTag","toString","jsonContent","Upload","DeleteFile","BlogDefinitionProvider","BlogPostReadonlyProvider","savePost","blogFile","blogPostProvider","saveFiles","files","coreClient","CoreClient","arrayBuffer","mediaProvider","uploadImage","save","useMutation","onSuccess","_data","variables","invalidateQueries","removeQueries","onMutate","newPost","cancelQueries","previousFeed","newFeed","pages","setQueryData","_newCircle","context","isCompact","bgClass","isDismissed","setIsDismissed","knownErrorMessage","errorCode","getKnownErrorMessages","message","DEFAULT_POST","ChannelSelector","React","defaultValue","useChannels","isLoading","e","chnl","value","FileSelector","htmlFor","Array","from","accept","multiple","FileOverview","setFiles","currFile","onLoad","revokeObjectURL","onPost","usePost","mutateAsync","savePostError","saveFilesError","inputRef","selectRef","setPost","setChannel","setState","doPost","postId","toPostPost","getTime","onSubmit","preventDefault","placeholder","required","Button","useTabs","tabs","isTabs","navigate","useNavigate","forceRender","setForceRender","useSocialFeed","hasMorePosts","hasNextPage","postsLoading","fetchNextPage","loadMoreRef","flattenedPosts","flattenInfinteData","a","b","ProfileHero","NavPills","newTab","tab","LoadingParagraph"],"sourceRoot":""}