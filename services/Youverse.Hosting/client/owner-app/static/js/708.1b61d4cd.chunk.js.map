{"version":3,"file":"static/js/708.1b61d4cd.chunk.js","mappings":"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","sources":["components/Dialog/ProfileDialog/ProfileDialog.tsx","components/SubMenu/SubMenu.tsx","hooks/profiles/useProfiles.ts","hooks/profiles/useAttributes.ts","components/ui/Buttons/ActionButtonWithOptions.tsx","components/Attribute/AttributeCreator/AttributeCreator.tsx","hooks/profiles/useProfileSections.ts","components/SectionEditor/SectionEditor.tsx","templates/Profiles/ProfileDetails/ProfileDetails.tsx"],"sourcesContent":["import { ProfileDefinition } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport useProfiles from '../../../hooks/profiles/useProfiles';\nimport ErrorNotification from '../../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Label from '../../Form/Label';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../../ui/Dialog/DialogWrapper';\n\nconst ProfileDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: ProfileDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const {\n    mutateAsync: saveProfileDefinition,\n    status: saveProfileDefinitionStatus,\n    error: saveProfileError,\n  } = useProfiles().saveProfile;\n\n  const [newProfileDef, setNewProfileDef] = useState<ProfileDefinition>({\n    ...defaultValue,\n  });\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <ErrorNotification error={saveProfileError} />\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            await saveProfileDefinition(newProfileDef);\n            onConfirm();\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Name')}</Label>\n            <Input\n              id=\"name\"\n              name=\"profileName\"\n              defaultValue={newProfileDef.name}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Description')}</Label>\n            <Textarea\n              id=\"description\"\n              name=\"profileDescription\"\n              defaultValue={newProfileDef.description}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, description: e.target.value });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={saveProfileDefinitionStatus} icon={'send'}>\n              {confirmText || t('Add Profile')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default ProfileDialog;\n","import { FC, ReactNode } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport Select from '../Form/Select';\nimport LoadingParagraph from '../ui/Loaders/LoadingParagraph/LoadingParagraph';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: ReactNode; text?: string; key: string; path: string; className?: string }[];\n  isLoading?: boolean;\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items, isLoading }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const forceMobileView = items?.length >= 6;\n\n  if (isLoading === true) {\n    return <LoadingParagraph className=\"h-10\" />;\n  }\n\n  // True when no items match the current location; Forces a fallback to an active state on the first item\n  const activeFallback = !items.some((item) => item.path === location.pathname);\n\n  return (\n    <>\n      <div\n        className={`hidden flex-col flex-wrap ${!forceMobileView ? 'sm:flex' : ''} sm:flex-row ${\n          className ?? ''\n        }`}\n      >\n        {items.map((item, index) => {\n          return (\n            // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n            <NavLink\n              className={({ isActive }) =>\n                `${\n                  item.className && item.className?.indexOf('flex-grow') !== -1 ? '' : 'flex-grow'\n                } cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                  isActive || (activeFallback && index === 0)\n                    ? 'border-indigo-500 text-indigo-500 dark:text-indigo-400'\n                    : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n                } ${item.className ?? ''}`\n              }\n              to={item.path}\n              key={item.key}\n              end\n            >\n              {item.title}\n            </NavLink>\n          );\n        })}\n      </div>\n      <Select\n        className={`${!forceMobileView ? 'sm:hidden' : ''} py-4`}\n        onChange={(e) => navigate(e.target.value)}\n        value={window.location.pathname}\n      >\n        {items.map((item) => {\n          return (\n            <option key={item.key} value={item.path}>\n              {item.text || item.title}\n            </option>\n          );\n        })}\n      </Select>\n    </>\n  );\n};\n\nexport default Submenu;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ApiType, Client, ProfileDefinition } from '@youfoundation/dotyoucore-js';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ProfileDefinitionVm extends ProfileDefinition {\n  slug: string;\n}\n\nconst useProfiles = () => {\n  const queryClient = useQueryClient();\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    const definitions = await (\n      await client.profileDefinitionProvider.getProfileDefinitions()\n    ).map((def) => {\n      return {\n        ...def,\n        slug: convertTextToSlug(def.name),\n      } as ProfileDefinitionVm;\n    });\n\n    return definitions;\n  };\n\n  const saveProfile = async (profileDef: ProfileDefinition) => {\n    return await client.profileDefinitionProvider.saveProfileDefinition(profileDef);\n  };\n\n  return {\n    fetchProfiles: useQuery(['profiles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n      retry: false,\n    }),\n    saveProfile: useMutation(saveProfile, {\n      onMutate: async (newProfile) => {\n        await queryClient.cancelQueries(['profiles']);\n\n        const previousProfiles: ProfileDefinitionVm[] = queryClient.getQueryData(['profiles']);\n        const newProfiles = previousProfiles?.map((profile) =>\n          profile.profileId === newProfile.profileId\n            ? ({ ...newProfile, slug: convertTextToSlug(newProfile.name) } as ProfileDefinitionVm)\n            : profile\n        );\n\n        queryClient.setQueryData(['profiles'], newProfiles);\n\n        return { previousProfiles, newProfile };\n      },\n      onError: (err, newProfile, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['profiles'], context.previousProfiles);\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries(['profiles']);\n      },\n    }),\n  };\n};\n\nexport default useProfiles;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinition,\n  AttributeDefinitions,\n  AttributeFile,\n  Client,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nexport interface AttributeVm extends AttributeFile {\n  typeDefinition: AttributeDefinition;\n}\n\nconst useAttributes = ({ profileId, sectionId }: { profileId?: string; sectionId?: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const queryClient = useQueryClient();\n\n  const fetchData = async (profileId: string, sectionId: string) => {\n    if (!profileId || !sectionId) {\n      return;\n    }\n\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100 // TODO: Should we page this properly, or how many profile attributes do we expect as normal?\n    );\n\n    return foundAttributes.map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: Object.values(AttributeDefinitions).find((def) => {\n          return def.type.toString() === attr.type;\n        }),\n      } as AttributeVm;\n    });\n  };\n\n  const removeAttributes = async ({\n    profileId,\n    sectionId,\n  }: {\n    profileId: string;\n    sectionId: string;\n  }) => {\n    if (!profileId || !sectionId) {\n      return;\n    }\n\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100\n    );\n\n    return await Promise.all(\n      foundAttributes.map(async (attr) =>\n        client.profileDataProvider.removeAttribute(profileId, attr.fileId)\n      )\n    );\n  };\n\n  return {\n    fetch: useQuery(['attributes', profileId, sectionId], () => fetchData(profileId, sectionId), {\n      refetchOnWindowFocus: false,\n    }),\n    removeAttributes: useMutation(removeAttributes, {\n      onError: (err) => {\n        console.error(err);\n      },\n      onSettled: (data, err, variables) => {\n        queryClient.invalidateQueries(['attributes', variables.profileId, variables.sectionId]);\n      },\n    }),\n  };\n};\n\nexport default useAttributes;\n","import { FC, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport ActionButton, { ActionButtonProps } from './ActionButton';\n\ninterface ActionButtonWithOptionsProps extends Omit<ActionButtonProps, 'icon'> {\n  options: { value: string; name: string; group?: string }[];\n}\n\nconst ActionButtonWithOptions: FC<ActionButtonWithOptionsProps> = ({\n  options,\n  onClick,\n  className,\n  ...actionButtonProps\n}) => {\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(options ? wrapperRef : undefined, () => setIsOpen(false));\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const groups: string[] = options.reduce((prevVal, curVal) => {\n    if (!curVal.group) {\n      return prevVal;\n    }\n    if (prevVal.indexOf(curVal.group) !== -1) {\n      return prevVal;\n    }\n    return [...prevVal, curVal.group];\n  }, [] as string[]);\n\n  groups.sort();\n\n  const optionGroups = groups.map((group) => {\n    return { name: group, options: options.filter((option) => option.group === group) };\n  });\n\n  const renderOptions = (options: { value: string; name: string; group?: string }[]) => {\n    return options.map((option) => (\n      <li\n        onClick={() => onClick(option.value)}\n        className=\"cursor-pointer px-2 py-1 hover:bg-slate-200 dark:hover:bg-slate-700\"\n        key={option.value}\n      >\n        {option.name}\n      </li>\n    ));\n  };\n\n  return (\n    <div className={`relative ${className ?? ''}`} ref={wrapperRef}>\n      <ActionButton\n        {...actionButtonProps}\n        className=\"w-full sm:w-full\"\n        onClick={() => setIsOpen(!isOpen)}\n        icon=\"down\"\n      />\n      {optionGroups?.length ? (\n        <ul\n          className={`absolute right-0 bottom-[100%] w-full shadow-md ${\n            isOpen ? 'max-h-[15rem]' : 'max-h-0'\n          } overflow-auto bg-white text-black dark:bg-slate-900 dark:text-white`}\n        >\n          {optionGroups.map((group) => (\n            <li className=\"px-2 py-1\" key={group.name}>\n              <p className=\"font-bold text-slate-400 dark:text-slate-500\">{group.name}</p>\n              <ul>{renderOptions(group.options)}</ul>\n            </li>\n          ))}\n        </ul>\n      ) : options ? (\n        <ul\n          className={`absolute right-0 bottom-[100%] w-full ${\n            isOpen ? 'max-h-[15rem]' : 'max-h-0'\n          } overflow-auto bg-white text-black`}\n        >\n          {renderOptions(options)}\n        </ul>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ActionButtonWithOptions;\n","import { DataUtil } from '@youfoundation/dotyoucore-js';\nimport {\n  AttributeDefinition,\n  AttributeDefinitions,\n  AttributeFile,\n  SecurityGroupType,\n} from '@youfoundation/dotyoucore-js';\nimport { useEffect, useRef, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useAttribute from '../../../hooks/profiles/useAttribute';\nimport { AttributeVm } from '../../../hooks/profiles/useAttributes';\nimport { AclIcon, AclSummary } from '../../Acl/AclEditor/AclEditor';\nimport ErrorNotification from '../../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport ActionButtonWithOptions from '../../ui/Buttons/ActionButtonWithOptions';\nimport Section from '../../ui/Sections/Section';\nimport AttributeFields from '../AttributeFields/AttributeFields';\nimport AclWizard from '../../Acl/AclWizard/AclWizard';\n\nconst AttributeCreator = ({\n  profileId,\n  sectionId,\n  newPriority,\n  excludedTypes,\n}: {\n  profileId: string;\n  sectionId: string;\n  newPriority: number;\n  excludedTypes?: string[];\n}) => {\n  const [attribute, setAttribute] = useState<AttributeVm>();\n\n  const [isActive, setIsActive] = useState(false);\n  const [isAclEdit, setIsAclEdit] = useState(true);\n\n  const [isFadeOut, setIsFadeOut] = useState(false);\n  const sectionRef = useRef<HTMLElement>();\n\n  const {\n    mutate: saveAttribute,\n    status: saveAttributeStatus,\n    error: saveAttrError,\n  } = useAttribute({}).save;\n\n  const setType = (typeId: string) => {\n    const targetObj = Object.values(AttributeDefinitions).find(\n      (curr) => curr.type.toString() === typeId\n    ) as AttributeDefinition;\n\n    setAttribute({\n      id: DataUtil.getNewId(),\n      type: typeId,\n      sectionId: sectionId,\n      priority: newPriority,\n      data: {},\n      typeDefinition: targetObj,\n      profileId: profileId,\n      acl: { requiredSecurityGroup: SecurityGroupType.Owner },\n    });\n  };\n\n  const changeHandler: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (e) => {\n    if (!attribute) {\n      // attribute selection failed on type selection...\n      return;\n    }\n\n    const newAttr: AttributeVm = { ...attribute };\n    newAttr.data[e.target.name] = e.target.value;\n\n    setAttribute(newAttr);\n  };\n\n  const saveNewData = () => {\n    saveAttribute({ ...attribute, typeDefinition: undefined } as AttributeFile, {\n      onSuccess: () => {\n        discard();\n      },\n    });\n  };\n\n  const discard = () => {\n    setIsActive(false);\n    setAttribute(undefined);\n    setIsAclEdit(true);\n  };\n\n  useEffect(() => {\n    if (isActive) {\n      setIsFadeOut(true);\n      if (sectionRef.current) {\n        sectionRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    } else {\n      setIsFadeOut(false);\n    }\n  }, [isActive]);\n\n  const options = Object.values(AttributeDefinitions)\n    .filter((def) => !excludedTypes.some((exclude) => exclude === def.type))\n    .map((def) => {\n      return {\n        value: def.type.toString(),\n        name: def.name,\n        group: [\n          AttributeDefinitions.FacebookUsername.type,\n          AttributeDefinitions.DotYouIdentity.type,\n          AttributeDefinitions.InstagramUsername.type,\n          AttributeDefinitions.LinkedinUsername.type,\n          AttributeDefinitions.TiktokUsername.type,\n          AttributeDefinitions.TwitterUsername.type,\n          AttributeDefinitions.Link.type,\n        ].includes(def.type)\n          ? t('Link')\n          : [\n              AttributeDefinitions.Name.type,\n              AttributeDefinitions.Photo.type,\n              AttributeDefinitions.Location.type,\n              AttributeDefinitions.Birthday.type,\n              AttributeDefinitions.PhoneNumber.type,\n            ].includes(def.type)\n          ? t('Details')\n          : [AttributeDefinitions.FullBio.type, AttributeDefinitions.ShortBio.type].includes(\n              def.type\n            )\n          ? t('Bio')\n          : [AttributeDefinitions.CreditCard.type].includes(def.type)\n          ? t('Wallet')\n          : '',\n      };\n    });\n\n  return (\n    <>\n      <ErrorNotification error={saveAttrError} />\n      {isActive && attribute ? (\n        <Section\n          ref={sectionRef}\n          title={\n            <>\n              <span className=\"flex flex-row md:pr-[14rem]\">\n                <button\n                  title={attribute.acl.requiredSecurityGroup}\n                  className={`mr-2 inline-block`}\n                  onClick={() => setIsAclEdit(true)}\n                >\n                  <AclIcon className=\"h-5 w-5\" acl={attribute.acl} />\n                </button>\n                <span>\n                  {`New${attribute ? ':' : ''} ${attribute?.typeDefinition.name ?? ''}`}{' '}\n                  <small className=\"block text-xs\">\n                    <AclSummary acl={attribute?.acl} />\n                  </small>\n                </span>\n              </span>\n            </>\n          }\n          isOpaqueBg={true}\n          className={`${\n            isActive && !isFadeOut ? 'bg-indigo-50 dark:bg-indigo-900' : ''\n          } transition-colors duration-[3000ms] ${isFadeOut ? 'bg-transparent' : ''}`}\n        >\n          {isAclEdit ? (\n            <AclWizard\n              acl={attribute.acl}\n              onConfirm={(newAcl) => {\n                setAttribute({\n                  ...attribute,\n                  acl: { ...newAcl },\n                });\n                setIsAclEdit(false);\n              }}\n              onCancel={discard}\n            />\n          ) : (\n            <>\n              <AttributeFields attribute={attribute} onChange={changeHandler} />\n              <div className=\"flex flex-row justify-end pb-2\">\n                <p className=\"text-slate-500\">\n                  {t('Accessible by: ')} <AclSummary acl={attribute?.acl} maxLength={Infinity} />\n                </p>\n              </div>\n              <div className=\"flex flex-row\">\n                <ActionButton type=\"secondary\" className=\"ml-auto\" onClick={discard}>\n                  {t('Cancel')}\n                </ActionButton>\n                <ActionButton\n                  type=\"primary\"\n                  className=\"ml-2\"\n                  onClick={saveNewData}\n                  state={saveAttributeStatus}\n                >\n                  {t('Save')}\n                </ActionButton>\n              </div>\n            </>\n          )}\n        </Section>\n      ) : (\n        <div className=\"flex flex-row\">\n          <ActionButtonWithOptions\n            type=\"primary\"\n            className=\"mx-auto min-w-[13rem]\"\n            onClick={(type) => {\n              type && setType(type);\n              setIsActive(true);\n            }}\n            options={options}\n          >\n            {t('Add Attribute')}\n          </ActionButtonWithOptions>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AttributeCreator;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ApiType, Client, ProfileSection } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nimport useAttributes from './useAttributes';\n\nconst useProfileSections = ({ profileId }: { profileId?: string }) => {\n  const queryClient = useQueryClient();\n  const { getSharedSecret } = useAuth();\n  const { mutateAsync: removeAttributes } = useAttributes({}).removeAttributes;\n\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchSections = async ({ profileId }: { profileId: string }) => {\n    if (!profileId) {\n      return [];\n    }\n    const definitions = await client.profileDefinitionProvider.getProfileSections(profileId);\n\n    return definitions;\n  };\n\n  const saveSection = async ({\n    profileId,\n    profileSection,\n  }: {\n    profileId: string;\n    profileSection: ProfileSection;\n  }) => {\n    await client.profileDefinitionProvider.saveProfileSection(profileId, profileSection);\n    return { profileId, profileSection };\n  };\n\n  const removeSection = async ({\n    profileId,\n    profileSection,\n  }: {\n    profileId: string;\n    profileSection: ProfileSection;\n  }) => {\n    await removeAttributes({ profileId: profileId, sectionId: profileSection.sectionId });\n\n    return await client.profileDefinitionProvider.removeProfileSection(\n      profileId,\n      profileSection.sectionId\n    );\n  };\n\n  return {\n    fetchAll: useQuery(['profileSections', profileId], () => fetchSections({ profileId }), {\n      refetchOnWindowFocus: false,\n    }),\n    save: useMutation(saveSection, {\n      onMutate: async ({ profileId, profileSection: newSection }) => {\n        await queryClient.cancelQueries(['profileSections', profileId]);\n\n        const previousSections: ProfileSection[] = queryClient.getQueryData([\n          'profileSections',\n          profileId,\n        ]);\n        const newSections = previousSections?.map((section) =>\n          section.sectionId === newSection.sectionId ? newSection : section\n        );\n\n        queryClient.setQueryData(['profileSections', profileId], newSections);\n\n        return { previousSections, newSection };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['profileSections', newData.profileId], context.previousSections);\n      },\n      onSettled: (data) => {\n        queryClient.invalidateQueries(['profileSections', data.profileId]);\n      },\n    }),\n    remove: useMutation(removeSection, {\n      onMutate: async ({ profileId, profileSection: toRemoveSection }) => {\n        await queryClient.cancelQueries(['profileSections', profileId]);\n\n        const previousSections: ProfileSection[] = queryClient.getQueryData([\n          'profileSections',\n          profileId,\n        ]);\n        const newSections = previousSections?.filter(\n          (section) => section.sectionId !== toRemoveSection.sectionId\n        );\n\n        queryClient.setQueryData(['profileSections', profileId], newSections);\n\n        return { previousSections, toRemoveSection };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['profileSections', newData.profileId], context.previousSections);\n      },\n      onSettled: (data, err, variables) => {\n        queryClient.invalidateQueries(['profileSections', variables.profileId]);\n      },\n    }),\n  };\n};\n\nexport default useProfileSections;\n","import { ProfileSection } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useProfileSections from '../../hooks/profiles/useProfileSections';\nimport ErrorNotification from '../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../ui/Buttons/ActionButton';\nimport Input from '../Form/Input';\nimport Label from '../Form/Label';\nimport Section from '../ui/Sections/Section';\n\nconst SectionEditor = ({\n  section,\n  profileId,\n\n  onClose,\n  className,\n}: {\n  section: ProfileSection;\n  profileId: string;\n  onClose: () => void;\n  className?: string;\n}) => {\n  const [sectionData, setSectionData] = useState({ ...section });\n  const {\n    save: { mutateAsync: saveSection, status: saveSectionStatus, error: saveSectionError },\n    remove: { mutateAsync: removeSection, status: removeSectionState, error: removeSectionError },\n  } = useProfileSections({});\n\n  const handleChange = (e: { target: { value: unknown; name: string } }) => {\n    const newSectionData = { ...sectionData };\n    newSectionData[e.target.name] = e.target.value;\n\n    setSectionData(newSectionData);\n  };\n\n  return (\n    <>\n      <ErrorNotification error={saveSectionError} />\n      <ErrorNotification error={removeSectionError} />\n\n      <Section\n        title={`${t('Edit')}: ${section.name}`}\n        isOpaqueBg={true}\n        className={className ?? ''}\n      >\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            saveSection(\n              { profileId: profileId, profileSection: sectionData },\n              {\n                onSuccess: () => {\n                  onClose();\n                },\n              }\n            );\n          }}\n        >\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Name')}</Label>\n            <Input id=\"name\" name=\"name\" defaultValue={section.name} onChange={handleChange} />\n          </div>\n\n          <div className=\"-m-2 flex flex-row-reverse\">\n            <ActionButton type=\"primary\" className=\"m-2\" state={saveSectionStatus}>\n              {t('Save')}\n            </ActionButton>\n            <ActionButton\n              type=\"secondary\"\n              className=\"m-2\"\n              onClick={(e) => {\n                e.preventDefault();\n                onClose();\n              }}\n            >\n              {t('Cancel')}\n            </ActionButton>\n            <ActionButton\n              type=\"remove\"\n              icon={'trash'}\n              className=\"m-2 mr-auto\"\n              state={removeSectionState}\n              onClick={() => removeSection({ profileId, profileSection: section })}\n              confirmOptions={{\n                title: t('Remove Section'),\n                body: t(\n                  'Are you sure you want to remove this section, this action cannot be undone. All attributes within this section will also be removed.'\n                ),\n                buttonText: t('Remove'),\n              }}\n            >\n              {t('Remove')}\n            </ActionButton>\n          </div>\n        </form>\n      </Section>\n    </>\n  );\n};\n\nexport default SectionEditor;\n","import { DataUtil, ProfileSection } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport useAttributes from '../../../hooks/profiles/useAttributes';\nimport useProfiles from '../../../hooks/profiles/useProfiles';\n\nimport AttributeCreator from '../../../components/Attribute/AttributeCreator/AttributeCreator';\nimport Section from '../../../components/ui/Sections/Section';\nimport Input from '../../../components/Form/Input';\nimport ActionButton from '../../../components/ui/Buttons/ActionButton';\nimport Add from '../../../components/ui/Icons/Plus/Plus';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport PageMeta from '../../../components/ui/Layout/PageMeta/PageMeta';\nimport AttributeGroup from '../../../components/Attribute/AttributeGroup/AttributeGroup';\nimport ProfileDialog from '../../../components/Dialog/ProfileDialog/ProfileDialog';\nimport Heart from '../../../components/ui/Icons/Heart/Heart';\nimport SectionEditor from '../../../components/SectionEditor/SectionEditor';\nimport useProfileSections from '../../../hooks/profiles/useProfileSections';\nimport Submenu from '../../../components/SubMenu/SubMenu';\nimport LoadingParagraph from '../../../components/ui/Loaders/LoadingParagraph/LoadingParagraph';\nimport LoadingDetailPage from '../../../components/ui/Loaders/LoadingDetailPage/LoadingDetailPage';\nimport Label from '../../../components/Form/Label';\nimport ErrorNotification from '../../../components/ui/Alerts/ErrorNotification/ErrorNotification';\n\nconst ProfileDetails = () => {\n  const { data: profiles, isLoading: profilesLoading } = useProfiles().fetchProfiles;\n  const { profileKey, sectionKey } = useParams();\n  const navigate = useNavigate();\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n\n  const profileDef = profiles?.find((curr) => {\n    return curr.slug === profileKey;\n  });\n  const { data: sections, isLoading: sectionsLoading } = useProfileSections({\n    profileId: profileDef?.profileId,\n  }).fetchAll;\n\n  const activeSectionKey =\n    decodeURIComponent(sectionKey) || (sections?.length ? sections[0].sectionId : '');\n\n  if (profilesLoading) {\n    return <LoadingDetailPage />;\n  }\n\n  if (!profiles) {\n    return <>{t('no-data-found')}</>;\n  }\n\n  if (!profileDef) {\n    return <>Incorrect profile path</>;\n  }\n\n  const isCreateSection = activeSectionKey === 'new' || (!sections?.length && !sectionsLoading);\n\n  const activeSection = isCreateSection\n    ? undefined\n    : sections?.find((sect) => {\n        return sect.sectionId === activeSectionKey;\n      }) || sections?.[0];\n\n  const tabItems = sections?.length\n    ? sections.map((sect, index) => {\n        return {\n          title: sect.name,\n          key: sect.sectionId,\n          path:\n            index === 0\n              ? `/owner/profile/${profileKey}/${encodeURIComponent(sect.sectionId)}`\n              : `/owner/profile/${profileKey}/${encodeURIComponent(sect.sectionId)}`,\n        };\n      })\n    : [];\n\n  return (\n    <>\n      <PageMeta\n        icon={Heart}\n        title={profileDef.name}\n        actions={\n          <>\n            <ActionButton onClick={() => setIsOpenEdit(true)} className=\"m-2\" icon=\"edit\">\n              {t('Edit Profile')}\n            </ActionButton>\n          </>\n        }\n        breadCrumbs={[{ href: '/owner/profile', title: 'My Profiles' }, { title: profileKey }]}\n      />\n\n      <Submenu\n        className=\"mt-5\"\n        items={[\n          ...tabItems,\n          {\n            title: <Add className=\"h-5 w-5\" />,\n            text: `-- ${t('Create new section')} --`,\n            key: 'new',\n            path: `/owner/profile/${profileKey}/new`,\n            className: 'flex-grow-0',\n          },\n        ]}\n        isLoading={sectionsLoading}\n      />\n\n      {isCreateSection ? (\n        <ProfileSectionCreator\n          profileId={profileDef.profileId}\n          onCreate={(sectionId) => navigate(`/owner/profile/${profileKey}/${sectionId}`)}\n        />\n      ) : (\n        <ProfileSectionEditor\n          section={activeSection}\n          profileId={profileDef?.profileId}\n          key={activeSection?.sectionId}\n          isParentLoading={sectionsLoading}\n        />\n      )}\n      <ProfileDialog\n        isOpen={isOpenEdit}\n        title={t('Edit Profile: ') + profileDef.name}\n        confirmText={t('Save')}\n        defaultValue={profileDef}\n        onCancel={() => {\n          setIsOpenEdit(false);\n        }}\n        onConfirm={() => {\n          setIsOpenEdit(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst ProfileSectionCreator = ({\n  profileId,\n  onCreate,\n}: {\n  profileId: string;\n  onCreate: (sectionId: string) => void;\n}) => {\n  const {\n    fetchAll: { data: profileSections },\n    save: {\n      mutateAsync: saveProfileSection,\n      status: saveProfileSectionStatus,\n      error: saveSectionError,\n    },\n  } = useProfileSections({ profileId: profileId });\n  const [name, setName] = useState('');\n\n  const createSection: React.FormEventHandler<HTMLFormElement> = async (e) => {\n    e.preventDefault();\n\n    const sectionId = DataUtil.getNewId();\n\n    const newProfileSection = {\n      sectionId: sectionId,\n      attributes: [],\n      priority: profileSections?.length\n        ? Math.max(...profileSections.map((sect) => sect.priority)) + 1000\n        : 1000,\n      isSystemSection: false,\n      name: name,\n    };\n\n    await saveProfileSection({\n      profileId: profileId,\n      profileSection: newProfileSection,\n    });\n    onCreate(sectionId);\n  };\n\n  return (\n    <>\n      <ErrorNotification error={saveSectionError} />\n      <Section title=\"New: section\" isOpaqueBg={true}>\n        <form onSubmit={createSection}>\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Name')}</Label>\n            <Input\n              id=\"name\"\n              name=\"sectionName\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              required\n            />\n          </div>\n          <div className=\"flex flex-row\">\n            <ActionButton className=\"ml-auto\" state={saveProfileSectionStatus}>\n              {t('Add section')}\n            </ActionButton>\n          </div>\n        </form>\n      </Section>\n    </>\n  );\n};\n\nconst ProfileSectionEditor = ({\n  section,\n  profileId,\n  isParentLoading,\n}: {\n  section: ProfileSection;\n  profileId: string;\n  isParentLoading: boolean;\n}) => {\n  const { data: attributes, isLoading } = useAttributes({\n    profileId: profileId,\n    sectionId: section?.sectionId,\n  }).fetch;\n  const [isEditActive, setIsEditActive] = useState(false);\n\n  if (!attributes || isLoading || isParentLoading) {\n    return (\n      <div className=\"-m-5 pt-5\">\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n      </div>\n    );\n  }\n\n  // Find unique types\n  const types: string[] = attributes.reduce((prevVal, curVal) => {\n    if (prevVal.indexOf(curVal.type) !== -1) {\n      return prevVal;\n    }\n    return [...prevVal, curVal.type];\n  }, [] as string[]);\n\n  // Find matching attributes for those types\n  const groupedAttributes = types.map((currType) => {\n    const matchingAttributes = attributes.filter((attr) => attr.type === currType);\n    const lowestPrio = Math.min(...matchingAttributes.map((attr) => attr.priority));\n\n    return {\n      name: matchingAttributes[0]?.typeDefinition?.name,\n      attributes: matchingAttributes,\n      priority: lowestPrio,\n    };\n  });\n  groupedAttributes.sort((a, b) => a.priority - b.priority);\n\n  const highestPriority = attributes.reduce((prevValue, currValue) => {\n    if (prevValue > currValue.priority) {\n      return prevValue;\n    } else {\n      return currValue.priority;\n    }\n  }, 0);\n\n  return (\n    <div className=\"pt-5\">\n      {section ? (\n        isEditActive ? (\n          <SectionEditor\n            key={section.sectionId}\n            section={section}\n            profileId={profileId}\n            onClose={() => setIsEditActive(false)}\n            className=\"bg-slate-50 dark:bg-slate-800\"\n          />\n        ) : (\n          <section className=\"items-center bg-slate-50 p-3 dark:bg-slate-800 sm:flex sm:flex-row\">\n            <p className=\"sm:mr-2\">{section.name}</p>\n            <ActionButton\n              type=\"secondary\"\n              className=\"ml-auto\"\n              onClick={() => setIsEditActive(true)}\n            >\n              {t('Edit Section')}\n            </ActionButton>\n          </section>\n        )\n      ) : null}\n      {attributes.length ? (\n        groupedAttributes.map((attrGroup) => {\n          return (\n            <AttributeGroup\n              groupTitle={attrGroup.name}\n              attributes={attrGroup.attributes}\n              key={attrGroup.name}\n              groupedAttributes={groupedAttributes}\n            />\n          );\n        })\n      ) : (\n        <div className=\"py-5\">{t('section-empty-attributes')}</div>\n      )}\n      <AttributeCreator\n        profileId={profileId}\n        sectionId={section.sectionId}\n        newPriority={highestPriority + 1000}\n        excludedTypes={types}\n      />\n    </div>\n  );\n};\n\nexport default ProfileDetails;\n"],"names":["title","confirmText","isOpen","defaultValue","onConfirm","onCancel","target","usePortal","useProfiles","saveProfile","saveProfileDefinition","mutateAsync","saveProfileDefinitionStatus","status","saveProfileError","error","useState","newProfileDef","setNewProfileDef","dialog","onClose","onSubmit","e","preventDefault","className","htmlFor","t","id","name","onChange","value","required","description","state","icon","type","onClick","createPortal","items","isLoading","navigate","useNavigate","location","useLocation","forceMobileView","length","activeFallback","some","item","path","pathname","map","index","isActive","indexOf","to","end","key","window","text","queryClient","useQueryClient","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchAll","profileDefinitionProvider","getProfileDefinitions","def","slug","convertTextToSlug","definitions","profileDef","fetchProfiles","useQuery","refetchOnWindowFocus","retry","useMutation","onMutate","newProfile","cancelQueries","previousProfiles","getQueryData","newProfiles","profile","profileId","setQueryData","onError","err","context","console","onSettled","invalidateQueries","sectionId","fetchData","profileDataProvider","getProfileAttributes","foundAttributes","attr","typeDefinition","Object","values","AttributeDefinitions","find","toString","removeAttributes","Promise","all","removeAttribute","fileId","fetch","data","variables","options","actionButtonProps","wrapperRef","useRef","useOutsideTrigger","undefined","setIsOpen","groups","reduce","prevVal","curVal","group","sort","optionGroups","filter","option","renderOptions","ref","ActionButton","newPriority","excludedTypes","attribute","setAttribute","setIsActive","isAclEdit","setIsAclEdit","isFadeOut","setIsFadeOut","sectionRef","useAttribute","save","saveAttribute","mutate","saveAttributeStatus","saveAttrError","discard","useEffect","current","scrollIntoView","behavior","exclude","includes","ErrorNotification","Section","acl","requiredSecurityGroup","isOpaqueBg","AclWizard","newAcl","AttributeFields","newAttr","maxLength","Infinity","onSuccess","typeId","targetObj","curr","DataUtil","priority","SecurityGroupType","setType","useAttributes","fetchSections","getProfileSections","saveSection","profileSection","saveProfileSection","removeSection","removeProfileSection","newSection","previousSections","newSections","section","newData","remove","toRemoveSection","sectionData","setSectionData","useProfileSections","saveSectionStatus","saveSectionError","removeSectionState","removeSectionError","Label","Input","newSectionData","confirmOptions","body","buttonText","ProfileSectionCreator","onCreate","profileSections","saveProfileSectionStatus","setName","createSection","newProfileSection","attributes","Math","max","sect","isSystemSection","ProfileSectionEditor","isParentLoading","isEditActive","setIsEditActive","LoadingParagraph","types","groupedAttributes","currType","matchingAttributes","lowestPrio","min","a","b","highestPriority","prevValue","currValue","attrGroup","AttributeGroup","groupTitle","profiles","profilesLoading","useParams","profileKey","sectionKey","isOpenEdit","setIsOpenEdit","sections","sectionsLoading","activeSectionKey","decodeURIComponent","LoadingDetailPage","isCreateSection","activeSection","tabItems","encodeURIComponent","PageMeta","Heart","actions","breadCrumbs","href","ProfileDialog"],"sourceRoot":""}