{"version":3,"file":"static/js/515.318267af.chunk.js","mappings":"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","sources":["components/ui/Icons/Lock/Lock.tsx","components/ui/Icons/OpenLock/OpenLock.tsx","components/Dialog/AclDialog/AclDialog.tsx","components/Acl/AclEditor/AclEditor.tsx","components/Form/CheckboxToggle.tsx","components/Form/CircleSelector.tsx","components/Form/Select.tsx","components/Form/Textarea.tsx","components/PermissionViews/CirclePermissionView/CirclePermissionView.tsx","components/ui/Icons/Triangle/Triangle.tsx","components/ui/Sections/Section.tsx","hooks/circles/useCircles.ts","hooks/media/useImage.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Lock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\" />\n    </svg>\n  );\n};\n\nexport default Lock;\n","import { FC } from 'react';\n\nconst OpenLock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M352 144c0-44.2 35.8-80 80-80s80 35.8 80 80v48c0 17.7 14.3 32 32 32s32-14.3 32-32V144C576 64.5 511.5 0 432 0S288 64.5 288 144v48H64c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V256c0-35.3-28.7-64-64-64H352V144z\" />\n    </svg>\n  );\n};\n\nexport default OpenLock;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport CircleSelector from '../../Form/CircleSelector';\nimport Select from '../../Form/Select';\nimport Lock from '../../ui/Icons/Lock/Lock';\nimport OpenLock from '../../ui/Icons/OpenLock/OpenLock';\nimport { pascalCase } from '../../../templates/DemoData/helpers';\nimport DialogWrapper from '../../ui/Dialog/DialogWrapper';\n\nconst AclDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n\n  onConfirm: (acl: AccessControlList) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const [newAcl, setNewAcl] = useState<AccessControlList>(acl);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const saveAcl = () => {\n    onConfirm(newAcl);\n  };\n\n  const updateSecurityGroup = (e) => {\n    const dirtyAcl = {\n      ...newAcl,\n      requiredSecurityGroup: SecurityGroupType[pascalCase(e.target.value)],\n    };\n    if (\n      dirtyAcl.circleIdList &&\n      (dirtyAcl.requiredSecurityGroup === SecurityGroupType.Owner.toLowerCase() ||\n        dirtyAcl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase())\n    ) {\n      dirtyAcl.circleIdList = [];\n    }\n\n    setNewAcl(dirtyAcl);\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <h2 className=\"mb-2 text-xl\">{t('General access')}</h2>\n        <RequiredSecurityGroupSelect\n          onChange={updateSecurityGroup}\n          group={\n            (newAcl.requiredSecurityGroup.toLowerCase() as SecurityGroupType) ??\n            SecurityGroupType.Owner\n          }\n        />\n\n        <h2 className=\"mb-2 mt-4 flex flex-col text-xl\">\n          {t('Circles with access')}\n          <small className=\"text-sm text-slate-500\">\n            {t('Selecting circles will automatically set the security to \"Connected\"')}\n          </small>\n        </h2>\n        <CircleSelector\n          defaultValue={newAcl.circleIdList}\n          onChange={(e) => {\n            setNewAcl({\n              ...newAcl,\n              circleIdList: e.target.value,\n              // Reset security group to connected when circles were specified\n              requiredSecurityGroup: e.target.value.length\n                ? SecurityGroupType.Connected\n                : newAcl.requiredSecurityGroup,\n            });\n          }}\n        />\n\n        <div className=\"-m-2 flex flex-row-reverse py-3\">\n          <ActionButton className=\"m-2\" onClick={saveAcl}>\n            {confirmText ?? 'Save'}\n          </ActionButton>\n          <ActionButton\n            className=\"m-2\"\n            type=\"secondary\"\n            onClick={() => {\n              setNewAcl(acl);\n              onCancel();\n            }}\n          >\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport const RequiredSecurityGroupSelect = ({\n  group,\n  onChange,\n}: {\n  group: SecurityGroupType;\n  onChange: (e: { target: { name: string; value: string } }) => void;\n}) => {\n  const StateIcon =\n    group === SecurityGroupType.Anonymous.toLowerCase() ||\n    group === SecurityGroupType.Authenticated.toLowerCase()\n      ? OpenLock\n      : Lock;\n\n  return (\n    <>\n      <div className=\"flex w-full rounded-lg border p-4 dark:border-slate-700\">\n        <div className=\"mr-2 flex flex-col justify-center\">\n          <div className=\"rounded-full bg-slate-100 p-3 dark:bg-slate-600\">\n            <StateIcon className=\"h-5 w-5\" />\n          </div>\n        </div>\n        <div className=\"flex w-full flex-col\">\n          <Select\n            value={group.toLowerCase()}\n            onChange={onChange}\n            className=\"w-full border-0 bg-transparent pl-0 dark:bg-transparent\"\n          >\n            <option value=\"anonymous\">{t('Public')}</option>\n            <option value=\"authenticated\">{t('Authenticated')}</option>\n            <option value=\"connected\">{t('Connected')}</option>\n            <option value=\"owner\">{t('Owner')}</option>\n          </Select>\n          <p className=\"pl-[0.2rem] text-sm text-slate-500\">\n            {group === SecurityGroupType.Anonymous.toLowerCase()\n              ? t('Accessible by everyone on the internet')\n              : group === SecurityGroupType.Authenticated.toLowerCase()\n              ? t('Only people that are authenticated')\n              : group === SecurityGroupType.Connected.toLowerCase()\n              ? t('Only people that are connected to you')\n              : t('Only you')}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AclDialog;\n","import { AccessControlList, DataUtil, SecurityGroupType } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { ellipsisAtMaxChar } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport AclDialog from '../../Dialog/AclDialog/AclDialog';\nimport Lock from '../../ui/Icons/Lock/Lock';\nimport OpenLock from '../../ui/Icons/OpenLock/OpenLock';\n\nexport const AclSummary = ({\n  acl,\n  maxLength = 40,\n}: {\n  acl: AccessControlList;\n  maxLength?: number;\n}) => {\n  const { data: circles } = useCircles().fetch;\n\n  const circlesDetails = acl?.circleIdList?.map(\n    (circleId) => circles?.find((circle) => DataUtil.stringGuidsEqual(circle.id, circleId))?.name\n  );\n\n  return (\n    <>\n      {!acl || acl.requiredSecurityGroup.toLowerCase() === SecurityGroupType.Anonymous.toLowerCase()\n        ? t('Public')\n        : acl.requiredSecurityGroup.toLowerCase() === SecurityGroupType.Authenticated.toLowerCase()\n        ? t('Authenticated')\n        : acl.requiredSecurityGroup.toLowerCase() === SecurityGroupType.Connected.toLowerCase()\n        ? acl.circleIdList?.length\n          ? `${t('Circles')}: ${ellipsisAtMaxChar(circlesDetails.join(', '), maxLength)}`\n          : t('Connections')\n        : acl.requiredSecurityGroup.toLowerCase() === SecurityGroupType.Owner.toLowerCase()\n        ? t('Owner')\n        : t('Owner')}\n    </>\n  );\n};\n\nexport const AclIcon = ({ acl, className }: { acl: AccessControlList; className: string }) => {\n  return !acl ||\n    acl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase() ||\n    acl.requiredSecurityGroup === SecurityGroupType.Authenticated.toLowerCase() ? (\n    <OpenLock className={className} />\n  ) : (\n    <Lock className={className} />\n  );\n};\n\nconst AclEditor = ({\n  acl,\n  onChange,\n  isEdit,\n  onClose,\n  className,\n}: {\n  acl: AccessControlList;\n  onChange?: (acl: AccessControlList) => void;\n  isEdit?: boolean;\n  onClose?: () => void;\n  className?: string;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <>\n      <button\n        title={acl.requiredSecurityGroup}\n        className={`mr-2 inline-block ${onChange ? '' : 'cursor-default'} ${className ?? ''}`}\n        onClick={() => onChange && setIsEditing(true)}\n      >\n        <AclIcon className=\"h-5 w-5\" acl={acl} />\n      </button>\n      <AclDialog\n        acl={acl}\n        isOpen={isEdit || isEditing}\n        title={t('Edit security')}\n        onCancel={() => {\n          setIsEditing(false);\n          onClose && onClose();\n        }}\n        onConfirm={(newAcl) => {\n          onChange(newAcl);\n          setIsEditing(false);\n          onClose && onClose();\n        }}\n      />\n    </>\n  );\n};\n\nexport default AclEditor;\n","const CheckboxToggle = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  const { className, ...inputProps } = props;\n\n  return (\n    <label className={`relative inline-flex cursor-pointer items-center ${className ?? ''}`}>\n      <input type=\"checkbox\" className=\"peer sr-only\" {...inputProps} />\n      <div\n        className={`peer h-6 w-11 rounded-full bg-gray-200 after:absolute after:top-[2px] after:left-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-indigo-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-indigo-800`}\n      ></div>\n    </label>\n  );\n};\n\nexport default CheckboxToggle;\n","import { DataUtil } from '@youfoundation/dotyoucore-js';\nimport { useEffect, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useCircles from '../../hooks/circles/useCircles';\nimport CirclePermissionView from '../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport CheckboxToggle from './CheckboxToggle';\n\nconst CircleSelector = ({\n  defaultValue,\n  onChange,\n  name,\n}: {\n  defaultValue: string[];\n  onChange: (e: { target: { name: string; value: string[] } }) => void;\n  name?: string;\n}) => {\n  const { data: circles, isLoading: circlesLoading } = useCircles().fetch;\n\n  const [selection, setSelection] = useState<string[]>([...(defaultValue ?? [])]);\n\n  useEffect(() => {\n    onChange({ target: { name: name, value: [...selection] } });\n  }, [selection]);\n\n  useEffect(() => {\n    if (selection?.length && defaultValue?.length === 0) {\n      setSelection([]);\n    }\n  }, [defaultValue]);\n\n  return (\n    <>\n      {!circles?.length && !circlesLoading && <p>{t('No circles found')}</p>}\n      <div className=\"-mb-4\">\n        {circles?.map((circle, index) => {\n          const isChecked = selection.some((circleGrant) =>\n            DataUtil.stringGuidsEqual(circleGrant, circle.id)\n          );\n          const clickHandler = () => {\n            if (\n              !selection.some((circleGrant) => DataUtil.stringGuidsEqual(circleGrant, circle.id))\n            ) {\n              setSelection([...selection, circle.id]);\n            } else {\n              setSelection(\n                selection.filter((circleId) => !DataUtil.stringGuidsEqual(circleId, circle.id))\n              );\n            }\n          };\n\n          return (\n            <div\n              className={`my-2 flex w-full cursor-pointer select-none flex-row rounded-lg border px-4 py-3 dark:border-slate-800 ${\n                isChecked && 'bg-slate-50 dark:bg-slate-700'\n              }`}\n              key={circle.id}\n              onClick={clickHandler}\n            >\n              <CirclePermissionView\n                circleDef={circle}\n                key={circle.id ?? index}\n                isChecked={isChecked}\n                onClick={clickHandler}\n                hideMembers={true}\n              />\n              <label className=\"sr-only\" htmlFor={circle.id}>\n                {circle.name}\n              </label>\n              <CheckboxToggle\n                id={circle.id}\n                checked={isChecked}\n                className=\"pointer-events-none my-auto ml-auto\"\n                readOnly={true}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default CircleSelector;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded ${\n        !props.className || props.className?.indexOf('border') === -1\n          ? 'border border-gray-300 focus:border-indigo-500 dark:border-gray-700'\n          : ''\n      } bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:ring-2 focus:ring-indigo-200 dark:bg-gray-800 dark:text-gray-100 ${\n        props.className\n      }`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circles/useCircle';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport Arrow from '../../ui/Icons/Arrow/Arrow';\nimport Circles from '../../ui/Icons/Circles/Circles';\nimport LoadingParagraph from '../../ui/Loaders/LoadingParagraph/LoadingParagraph';\n\nconst CirclePermissionView = ({\n  circleDef,\n  permissionDetails,\n  className,\n  isChecked,\n  onClick,\n  hideMembers,\n}: {\n  circleDef: CircleDefinition;\n  permissionDetails?: string;\n  className?: string;\n  isChecked?: boolean;\n  hideMembers?: boolean;\n  onClick?: () => void;\n}) => {\n  const { data: members, isLoading: membersLoading } = useCircle({\n    circleId: !hideMembers && circleDef?.id,\n  }).fetchMembers;\n\n  if (!circleDef) {\n    return <></>;\n  }\n\n  const LinkWrapper = ({ children, className }: { children: ReactNode; className: string }) =>\n    onClick ? (\n      <a onClick={() => onClick && onClick()} className={className ?? ''}>\n        {children}\n      </a>\n    ) : (\n      <Link\n        to={`/owner/circles/${encodeURIComponent(circleDef.id)}`}\n        className={`hover:text-slate-700 hover:underline dark:hover:text-slate-400 ${\n          className ?? ''\n        }`}\n      >\n        {children}\n      </Link>\n    );\n\n  const checkedClasses = isChecked\n    ? 'border-indigo-500 dark:border-indigo-800'\n    : isChecked === false\n    ? 'border-slate-100 dark:border-slate-800'\n    : '';\n\n  return (\n    <LinkWrapper\n      className={`flex flex-row ${className ?? ''} ${circleDef.disabled && 'opacity-50'} ${\n        onClick && 'cursor-pointer'\n      } ${checkedClasses}`}\n    >\n      <Circles className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n      <div className=\"mr-2 flex flex-col\">\n        <p className={`my-auto leading-none`}>\n          {circleDef.disabled && t('Disabled:')} {circleDef?.name}\n          {permissionDetails && `: ${permissionDetails}`}\n        </p>\n        {!hideMembers ? (\n          membersLoading ? (\n            <LoadingParagraph className=\"mt-1 h-4 w-full\" />\n          ) : (\n            <small className=\"block\">\n              {members\n                ? `${members.length} ${members.length === 1 ? t('member') : t('members')}`\n                : null}\n            </small>\n          )\n        ) : null}\n      </div>\n      {!onClick && <Arrow className=\"my-auto ml-2 h-5 w-5\" />}\n    </LinkWrapper>\n  );\n};\n\nexport default CirclePermissionView;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import React from 'react';\nimport { ReactNode, Ref } from 'react';\n\nconst Section = React.forwardRef(\n  (\n    {\n      title,\n      actions,\n      className,\n      children,\n      isOpaqueBg = false,\n      isBorderLess = false,\n    }: {\n      title?: ReactNode;\n      actions?: ReactNode;\n      className?: string;\n      children: ReactNode;\n      isOpaqueBg?: boolean;\n      isBorderLess?: boolean;\n    },\n    ref: Ref<HTMLElement>\n  ) => {\n    return (\n      <section\n        ref={ref}\n        className={`my-5 rounded-md ${\n          isOpaqueBg\n            ? isBorderLess\n              ? ''\n              : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n            : 'bg-slate-50 px-5 dark:bg-slate-800'\n        } dark:text-slate-300 ${className ?? ''}`}\n      >\n        {title || actions ? (\n          <div\n            className={`relative flex flex-row items-center border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n          >\n            <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n            <div className=\"ml-auto\">\n              <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n                {actions}\n              </div>\n            </div>\n          </div>\n        ) : null}\n        <div className=\"py-5 \">{children}</div>\n      </section>\n    );\n  }\n);\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  AccessControlList,\n  ApiType,\n  BlogConfig,\n  Client,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId?: string, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchImageData = async (imageFileId?: string, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined) {\n      return;\n    }\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  const saveImage = async ({\n    bytes,\n    type,\n    targetDrive = defaultDrive,\n    acl = { requiredSecurityGroup: SecurityGroupType.Anonymous },\n    fileId = undefined,\n  }: {\n    bytes: Uint8Array;\n    type: string;\n    targetDrive: TargetDrive;\n    acl?: AccessControlList;\n    fileId?: string;\n  }) => {\n    return await client.mediaProvider.uploadImage(targetDrive, undefined, acl, bytes, fileId, type);\n  };\n\n  const removeImage = async ({\n    targetDrive = defaultDrive,\n    fileId,\n  }: {\n    targetDrive: TargetDrive;\n    fileId: string;\n  }) => {\n    return await client.mediaProvider.removeImage(fileId, targetDrive);\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive],\n      () => fetchImageData(imageFileId, imageDrive),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n        enabled: !!imageFileId,\n      }\n    ),\n    save: useMutation(saveImage, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.fileId) {\n          queryClient.invalidateQueries([\n            'image',\n            variables.fileId,\n            variables.targetDrive ?? defaultDrive,\n          ]);\n        } else {\n          queryClient.removeQueries(['image']);\n        }\n      },\n    }),\n    remove: useMutation(removeImage),\n    // The remove mutation doesn't force invalidate the cache anymore, as removing an image always corresponds to removing the refrence as well.\n  };\n};\n\nexport default useImage;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["className","xmlns","viewBox","fill","d","RequiredSecurityGroupSelect","group","onChange","StateIcon","SecurityGroupType","OpenLock","Lock","Select","value","toLowerCase","t","title","confirmText","isOpen","acl","onConfirm","onCancel","target","usePortal","useState","newAcl","setNewAcl","dialog","DialogWrapper","onClose","e","dirtyAcl","requiredSecurityGroup","pascalCase","circleIdList","CircleSelector","defaultValue","length","ActionButton","onClick","type","createPortal","AclSummary","maxLength","circles","useCircles","fetch","data","circlesDetails","map","circleId","find","circle","DataUtil","id","name","ellipsisAtMaxChar","join","AclIcon","isEdit","isEditing","setIsEditing","props","inputProps","circlesLoading","isLoading","selection","setSelection","useEffect","index","isChecked","some","circleGrant","clickHandler","filter","circleDef","hideMembers","htmlFor","checked","readOnly","indexOf","children","permissionDetails","useCircle","fetchMembers","members","membersLoading","LinkWrapper","to","encodeURIComponent","checkedClasses","disabled","Section","React","ref","actions","isOpaqueBg","isBorderLess","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","sort","a","b","useQuery","refetchOnWindowFocus","defaultDrive","alias","HomePageConfig","BlogConfig","imageFileId","imageDrive","queryClient","useQueryClient","client","Client","api","ApiType","sharedSecret","fetchImageData","undefined","mediaProvider","getDecryptedImageUrl","saveImage","bytes","targetDrive","fileId","uploadImage","removeImage","refetchOnMount","staleTime","Infinity","enabled","save","useMutation","onSuccess","_data","variables","invalidateQueries","removeQueries","remove","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}