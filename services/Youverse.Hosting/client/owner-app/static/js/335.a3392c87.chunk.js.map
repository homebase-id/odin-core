{"version":3,"file":"static/js/335.a3392c87.chunk.js","mappings":"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","sources":["components/ui/Buttons/SaveStatus.tsx","components/ui/Layout/PageMeta/PageMeta.tsx","provider/connections/CircleMembershipProvider.ts","hooks/circles/useCircle.ts","provider/connections/CircleProvider.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport Alert from '../Alerts/Alert/Alert';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n  error,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n  error?: unknown;\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (state === 'loading') {\n    return <p className={`${className} text-sm`}>Saving...</p>;\n  }\n\n  if (state === 'error') {\n    return (\n      <Alert type=\"critical\" className={className}>\n        {error instanceof Error ? error.message : t('Something went wrong')}\n      </Alert>\n    );\n  }\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode | string;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-mx-5 -mt-4 mb-10 border-b-2 border-gray-100 bg-slate-50 py-4 pr-5 pl-10 dark:border-gray-700 dark:bg-slate-800 sm:-mx-10\n    sm:-mt-8 sm:py-8 sm:px-10\"\n    >\n      <div className=\"flex flex-col sm:flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <>\n              <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n                {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n              </h1>\n              <Helmet>\n                <title>\n                  {(typeof title !== 'object' && `${title}`) ||\n                    window.location.pathname.split('/').pop()}{' '}\n                  | Owner console\n                </title>\n              </Helmet>\n            </>\n          )}\n        </div>\n        <div className=\"ml-auto\">\n          <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n            {actions}\n          </div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { OwnerProviderBase } from '../OwnerProviderBase';\n\n//Handles management of Circles\nexport class CircleMembershipProvider extends OwnerProviderBase {\n  private static instance: CircleMembershipProvider;\n  private root = '/circles/connections/circles';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw '[CircleMembershipProvider] Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async add(membershipGrant: { dotYouId: string; circleId: string }) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/add';\n\n    return client\n      .post(url, membershipGrant)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async remove(membershipGrant: { dotYouId: string; circleId: string }) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/revoke';\n\n    return client\n      .post(url, membershipGrant)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async fetchMembers(circleId: string): Promise<string[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .post(url, { circleId: circleId })\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleMembershipProvider {\n    if (!CircleMembershipProvider.instance) {\n      CircleMembershipProvider.instance = new CircleMembershipProvider(sharedSecret);\n    }\n\n    return CircleMembershipProvider.instance;\n  }\n}\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { CircleMembershipProvider } from '../../provider/connections/CircleMembershipProvider';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport { CircleDefinition } from '../../provider/connections/CircleDataTypes';\nimport useAuth from '../auth/useAuth';\n\nconst useCircle = ({ circleId }: { circleId?: string }) => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n  const circleMembershipProvider = CircleMembershipProvider.getInstance(getSharedSecret());\n\n  const fetch = async ({ circleId }: { circleId: string }) => {\n    if (!circleId) {\n      return;\n    }\n    return await circleProvider.getCircle(circleId);\n  };\n\n  const fetchMembers = async ({ circleId }: { circleId: string }) => {\n    if (!circleId) {\n      return;\n    }\n    return await circleMembershipProvider.fetchMembers(circleId);\n  };\n\n  const createOrUpdate = async (circleDefinition: CircleDefinition) => {\n    if (circleDefinition.lastUpdated) {\n      return await circleProvider.updateDefinition(circleDefinition);\n    } else {\n      return await circleProvider.createDefinition(circleDefinition);\n    }\n  };\n\n  const disableCircle = async ({ circleId }: { circleId: string }) => {\n    return await circleProvider.disableCircle(circleId);\n  };\n\n  const enableCircle = async ({ circleId }: { circleId: string }) => {\n    return await circleProvider.enableCircle(circleId);\n  };\n\n  const provideGrants = async ({\n    circleId,\n    dotYouIds,\n  }: {\n    circleId: string;\n    dotYouIds: string[];\n  }) => {\n    return await Promise.all(\n      dotYouIds.map(\n        async (dotYouId) =>\n          await circleMembershipProvider.add({ circleId: circleId, dotYouId: dotYouId })\n      )\n    );\n  };\n\n  const revokeGrants = async ({\n    circleId,\n    dotYouIds,\n  }: {\n    circleId: string;\n    dotYouIds: string[];\n  }) => {\n    return await Promise.all(\n      dotYouIds.map(\n        async (dotYouId) =>\n          await circleMembershipProvider.remove({ circleId: circleId, dotYouId: dotYouId })\n      )\n    );\n  };\n\n  const provideGrant = async ({ circleId, dotYouId }: { circleId: string; dotYouId: string }) => {\n    return await circleMembershipProvider.add({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  const revokeGrant = async ({ circleId, dotYouId }: { circleId: string; dotYouId: string }) => {\n    return await circleMembershipProvider.remove({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  const removeCircle = async ({ circleId }: { circleId: string }) => {\n    return await circleProvider.removeCircle(circleId);\n  };\n\n  return {\n    fetch: useQuery(['circle', circleId], () => fetch({ circleId }), {\n      refetchOnWindowFocus: false,\n      enabled: !!circleId,\n    }),\n\n    fetchMembers: useQuery(['cirleMembers', circleId], () => fetchMembers({ circleId }), {\n      refetchOnWindowFocus: false,\n    }),\n\n    createOrUpdate: useMutation(createOrUpdate, {\n      onMutate: async (newCircle) => {\n        await queryClient.cancelQueries(['circle', newCircle.id]);\n\n        // Update single attribute\n        const previousCircle = queryClient.getQueryData(['circle', newCircle.id]);\n        queryClient.setQueryData(['circle', newCircle.id], newCircle);\n\n        // Update section attributes\n        const previousCircles: CircleDefinition[] = queryClient.getQueryData(['circles']);\n        const newCircles = previousCircles?.map((circle) =>\n          circle.id === newCircle.id ? newCircle : circle\n        );\n        queryClient.setQueryData(['circles'], newCircles);\n\n        return { previousCircle, newCircle, previousCircles };\n      },\n      onError: (err, newCircle, context) => {\n        console.error(err);\n\n        // Revert local caches to what they were\n        queryClient.setQueryData(['circle', newCircle.id], context.previousCircle);\n        queryClient.setQueryData(['circles'], context.previousCircles);\n      },\n      onSettled: (newCircle) => {\n        queryClient.invalidateQueries(['circles']);\n        if (newCircle?.id) {\n          queryClient.invalidateQueries(['circle', newCircle.id]);\n        }\n      },\n    }),\n\n    disableCircle: useMutation(disableCircle, {\n      onSuccess: (data, params) => {\n        queryClient.invalidateQueries(['circles']);\n        if (params?.circleId) {\n          queryClient.invalidateQueries(['circle', params.circleId]);\n        }\n      },\n    }),\n    enableCircle: useMutation(enableCircle, {\n      onSuccess: (data, params) => {\n        queryClient.invalidateQueries(['circles']);\n        if (params?.circleId) {\n          queryClient.invalidateQueries(['circle', params.circleId]);\n        }\n      },\n    }),\n\n    provideGrants: useMutation(provideGrants, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        await Promise.all(\n          param.dotYouIds.map(async (dotYouId) => {\n            return await queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n          })\n        );\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    revokeGrants: useMutation(revokeGrants, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        await Promise.all(\n          param.dotYouIds.map(async (dotYouId) => {\n            return await queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n          })\n        );\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    provideGrant: useMutation(provideGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    revokeGrant: useMutation(revokeGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    removeCircle: useMutation(removeCircle, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', param.circleId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useCircle;\n","import { CircleDefinition } from './CircleDataTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\nimport { DataUtil } from '@youfoundation/dotyoucore-js';\n\n//Handles management of Circles\nexport class CircleProvider extends OwnerProviderBase {\n  private static instance: CircleProvider;\n  private root = '/circles/definitions';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw '[CircleProvider] Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async updateDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/update';\n\n    const data = { ...circleDefinition };\n    data.driveGrants = data.driveGrants || [];\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async createDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/create';\n\n    if (!circleDefinition.id) {\n      circleDefinition.id = DataUtil.getNewId();\n    }\n\n    return client\n      .post(url, circleDefinition)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  parsePermissions(permission: unknown) {\n    if (typeof permission !== 'string') {\n      return permission;\n    }\n\n    const lowered = permission.toLowerCase();\n\n    return lowered === 'read'\n      ? 2\n      : lowered === 'write'\n      ? 4\n      : lowered === 'readwrite'\n      ? 5\n      : permission;\n  }\n\n  async getCircles(): Promise<CircleDefinition[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data.map((circleDef) => {\n          circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n            return {\n              permissionedDrive: {\n                ...grant.permissionedDrive,\n                permission: this.parsePermissions(grant.permissionedDrive.permission),\n              },\n            };\n          });\n\n          return circleDef;\n        });\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getCircle(circleId: string): Promise<CircleDefinition> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/get';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .then((circleDef) => {\n        // Parse string permissionflags to number representations\n        circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n          return {\n            permissionedDrive: {\n              ...grant.permissionedDrive,\n              permission: this.parsePermissions(grant.permissionedDrive.permission),\n            },\n          };\n        });\n        return circleDef;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async disableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/disable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async enableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/enable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async removeCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/delete';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleProvider {\n    if (!CircleProvider.instance) {\n      CircleProvider.instance = new CircleProvider(sharedSecret);\n    }\n\n    return CircleProvider.instance;\n  }\n}\n"],"names":["className","state","error","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","type","Error","message","t","diff","getTime","text","toLocaleString","title","actions","saveStatus","breadCrumbs","icon","map","crumb","index","href","to","window","location","pathname","split","pop","CircleMembershipProvider","sharedSecret","root","membershipGrant","client","url","this","post","then","response","data","catch","circleId","instance","OwnerProviderBase","queryClient","useQueryClient","getSharedSecret","useAuth","circleProvider","CircleProvider","circleMembershipProvider","getInstance","fetch","getCircle","fetchMembers","createOrUpdate","circleDefinition","lastUpdated","updateDefinition","createDefinition","disableCircle","enableCircle","provideGrants","dotYouIds","Promise","all","dotYouId","add","revokeGrants","remove","provideGrant","revokeGrant","removeCircle","useQuery","refetchOnWindowFocus","enabled","useMutation","onMutate","newCircle","cancelQueries","id","previousCircle","getQueryData","setQueryData","previousCircles","newCircles","circle","onError","err","context","console","onSettled","invalidateQueries","onSuccess","params","param","ex","driveGrants","DataUtil","permission","lowered","toLowerCase","get","circleDef","grant","permissionedDrive","parsePermissions"],"sourceRoot":""}