{"version":3,"file":"static/js/358.db82676d.chunk.js","mappings":"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","sources":["hooks/profiles/useHomeAttributes.ts","templates/Website/Website.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client, HomePageAttributes, HomePageConfig } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nimport { AttributeVm } from './useAttributes';\n\nconst useHomeAttributes = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchHome = async () => {\n    const foundHomettributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.HomePage)\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.HomePage,\n          name: 'Home Page',\n          description: '',\n        },\n      } as AttributeVm;\n    });\n    return foundHomettributes;\n  };\n\n  const fetchTheme = async () => {\n    const foundThemeAttributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.Theme)\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.Theme,\n          name: 'Theme',\n          description: '',\n        },\n      } as AttributeVm;\n    });\n    return foundThemeAttributes;\n  };\n\n  return {\n    fetchHome: useQuery(\n      ['attributes', HomePageConfig.DefaultDriveId, HomePageAttributes.HomePage],\n      fetchHome,\n      {}\n    ),\n    fetchTheme: useQuery(\n      ['attributes', HomePageConfig.DefaultDriveId, HomePageAttributes.Theme],\n      fetchTheme,\n      {}\n    ),\n  };\n};\n\nexport default useHomeAttributes;\n","import { HomePageAttributes, HomePageConfig } from '@youfoundation/dotyoucore-js';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useHomeAttributes from '../../hooks/profiles/useHomeAttributes';\nimport useStaticFiles from '../../hooks/staticFiles/useStaticFiles';\nimport ErrorNotification from '../../components/ui/Alerts/ErrorNotification/ErrorNotification';\nimport AttributeGroup from '../../components/Attribute/AttributeGroup/AttributeGroup';\nimport ActionButton from '../../components/ui/Buttons/ActionButton';\nimport Cloud from '../../components/ui/Icons/Cloud/Cloud';\nimport PageMeta from '../../components/ui/Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../../components/ui/Loaders/LoadingParagraph/LoadingParagraph';\nimport Section from '../../components/ui/Sections/Section';\n\nconst defaultHomeAttribute = {\n  id: undefined,\n  profileId: HomePageConfig.DefaultDriveId,\n  type: HomePageAttributes.HomePage,\n  priority: 1000,\n  sectionId: HomePageConfig.AttributeSectionNotApplicable,\n  data: {},\n  acl: undefined,\n  typeDefinition: {\n    type: HomePageAttributes.HomePage,\n    name: 'Home Page',\n    description: '',\n  },\n};\n\nconst defaultThemeAttribute = {\n  id: undefined,\n  profileId: HomePageConfig.DefaultDriveId,\n  type: HomePageAttributes.Theme,\n  priority: 1000,\n  sectionId: HomePageConfig.AttributeSectionNotApplicable,\n  data: {},\n  acl: undefined,\n  typeDefinition: {\n    type: HomePageAttributes.Theme,\n    name: 'Theme',\n    description: '',\n  },\n};\n\nconst Website = () => {\n  const { data: homeData, isLoading: homeIsLoading } = useHomeAttributes().fetchHome;\n  const { data: themeData, isLoading: themeIsLoading } = useHomeAttributes().fetchTheme;\n\n  return (\n    <section>\n      <PageMeta icon={Cloud} title={t('Website Configuration')} />\n      {homeIsLoading ? (\n        <div className=\"-m-5 pt-5\">\n          <LoadingParagraph className=\"m-5 h-20\" />\n        </div>\n      ) : homeData ? (\n        <AttributeGroup\n          attributes={homeData?.length ? homeData : [defaultHomeAttribute]}\n          groupTitle={t('Home')}\n        />\n      ) : null}\n      {themeIsLoading ? (\n        <div className=\"-m-5 pt-5\">\n          <LoadingParagraph className=\"m-5 h-20\" />\n        </div>\n      ) : themeData ? (\n        <AttributeGroup\n          attributes={themeData?.length ? themeData : [defaultThemeAttribute]}\n          groupTitle={t('Theme')}\n        />\n      ) : null}\n\n      <PublishOptions />\n    </section>\n  );\n};\n\nconst PublishOptions = () => {\n  const {\n    mutate: publishFile,\n    status: publishStatus,\n    error: publishFileError,\n  } = useStaticFiles().publish;\n\n  return (\n    <>\n      <ErrorNotification error={publishFileError} />\n      <Section\n        isOpaqueBg={true}\n        title={\n          <>\n            <Cloud className=\"inline-block h-4 w-4\" /> {t('Publish your public data')}\n          </>\n        }\n      >\n        <div className=\"flex flex-row\">\n          <ActionButton\n            onClick={() => publishFile()}\n            state={publishStatus}\n            icon=\"save\"\n            className=\"ml-auto\"\n          >\n            {t('Publish static file')}\n          </ActionButton>\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Website;\n"],"names":["getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchHome","homePageProvider","getAttributes","HomePageAttributes","foundHomettributes","map","attr","typeDefinition","type","name","description","fetchTheme","foundThemeAttributes","useQuery","HomePageConfig","defaultHomeAttribute","id","undefined","profileId","priority","sectionId","data","acl","defaultThemeAttribute","PublishOptions","useStaticFiles","publish","publishFile","mutate","publishStatus","status","publishFileError","error","ErrorNotification","Section","isOpaqueBg","title","Cloud","className","t","ActionButton","onClick","state","icon","useHomeAttributes","homeData","homeIsLoading","isLoading","themeData","themeIsLoading","PageMeta","LoadingParagraph","AttributeGroup","attributes","length","groupTitle"],"sourceRoot":""}