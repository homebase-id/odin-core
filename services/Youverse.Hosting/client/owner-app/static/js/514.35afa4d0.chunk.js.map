{"version":3,"file":"static/js/514.35afa4d0.chunk.js","mappings":"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","sources":["components/Form/PermissionFlagsEditor.tsx","components/Dialog/CircleDialog/CircleDialog.tsx","components/Form/PermissionLevelEditor.tsx","components/Form/Textarea.tsx","components/ui/Icons/Triangle/Triangle.tsx","hooks/circles/useCircles.ts","hooks/drives/useDrives.ts","provider/permission/permissionLevels.ts","templates/Circles/Circles/Circles.tsx"],"sourcesContent":["import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../ui/Icons/Check/Check';\nimport Triangle from '../ui/Icons/Triangle/Triangle';\n\nconst PermissionFlagsEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number[]) => void;\n  defaultValue: number[];\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue =\n    defaultValue?.length >= 2\n      ? 'Multiple'\n      : (defaultValue?.[0]\n          ? permissionLevels.find((level) => level.value === defaultValue[0])?.name\n          : permissionLevels[0].name) ?? permissionLevels[0].name;\n\n  const setValue = (value: number[]) => {\n    setInnerValue(value);\n    onChange && onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={\n                value.some((val) => val === level.value) ||\n                (value.length === 0 && level.value === 0)\n              }\n              onChange={() =>\n                value.some((val) => val === level.value)\n                  ? setValue(value.filter((val) => val !== level.value))\n                  : level.value !== 0\n                  ? setValue([...value, level.value])\n                  : setValue([])\n              }\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[16rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 flex-shrink-0 ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionFlagsEditor;\n","import { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circles/useCircle';\nimport useDrives from '../../../hooks/drives/useDrives';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport {\n  circlePermissionLevels,\n  drivePermissionLevels,\n} from '../../../provider/permission/permissionLevels';\nimport ErrorNotification from '../../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Label from '../../Form/Label';\nimport PermissionFlagsEditor from '../../Form/PermissionFlagsEditor';\nimport PermissionLevelEditor from '../../Form/PermissionLevelEditor';\nimport Textarea from '../../Form/Textarea';\nimport HardDrive from '../../ui/Icons/HardDrive/HardDrive';\nimport DialogWrapper from '../../ui/Dialog/DialogWrapper';\n\nconst CircleDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: CircleDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const {\n    mutateAsync: createOrUpdate,\n    status: createOrUpdateStatus,\n    error: updateError,\n  } = useCircle({}).createOrUpdate;\n  const { data: drives } = useDrives().fetch;\n\n  const [newCircleDefinition, setNewCircleDefinition] = useState<CircleDefinition>({\n    driveGrants: defaultValue.driveGrants || [],\n    ...defaultValue,\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setNewCircleDefinition({\n        driveGrants: defaultValue.driveGrants || [],\n        ...defaultValue,\n      });\n    }\n  }, [isOpen]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const reset = () => {\n    setNewCircleDefinition({\n      driveGrants: defaultValue.driveGrants || [],\n      ...defaultValue,\n    });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel} size=\"4xlarge\">\n      <>\n        <ErrorNotification error={updateError} />\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            await createOrUpdate(newCircleDefinition);\n            reset();\n            onConfirm();\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Name')}</Label>\n            <Input\n              id=\"name\"\n              name=\"circleName\"\n              defaultValue={newCircleDefinition.name}\n              onChange={(e) => {\n                setNewCircleDefinition({ ...newCircleDefinition, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <Label htmlFor=\"name\">{t('Description')}</Label>\n            <Textarea\n              id=\"description\"\n              name=\"circleDescription\"\n              defaultValue={newCircleDefinition.description}\n              onChange={(e) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  description: e.target.value,\n                });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"mb-5 flex flex-row\">\n            <Label htmlFor=\"name\" className=\"my-auto mr-2\">\n              {t('Permissions')}\n            </Label>\n            <PermissionFlagsEditor\n              className=\"ml-auto\"\n              permissionLevels={circlePermissionLevels}\n              defaultValue={newCircleDefinition.permissions.keys ?? [0]}\n              onChange={(newValue) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  permissions: { keys: newValue },\n                });\n              }}\n            />\n          </div>\n\n          {drives?.length ? (\n            <div className=\"my-7\">\n              <div className=\"mb-8\">\n                <h2 className=\"text-lg\">{t('Drive Permissions')}:</h2>\n                <p className=\"text-sm text-slate-500\">\n                  {t('Drives with anonymous access enabled are available to any user')}\n                </p>\n              </div>\n\n              <div className=\"-my-4\">\n                {drives\n                  .filter((drive) => !drive.ownerOnly)\n                  .map((drive, index) => {\n                    const defaultVal =\n                      newCircleDefinition.driveGrants?.find(\n                        (driveGrant) =>\n                          driveGrant.permissionedDrive.drive.alias ===\n                            drive.targetDriveInfo.alias &&\n                          driveGrant.permissionedDrive.drive.type === drive.targetDriveInfo.type\n                      )?.permissionedDrive.permission ?? 0;\n\n                    return (\n                      <div\n                        key={index}\n                        className={`my-4 flex w-full select-none flex-row rounded-lg border p-4 dark:border-slate-800 ${\n                          defaultVal > 0 && 'bg-slate-50 dark:bg-slate-700'\n                        }`}\n                      >\n                        <HardDrive className=\"my-auto mr-3 h-6 w-6\" />\n                        <Label\n                          htmlFor={`${drive.targetDriveInfo.alias}-${drive.targetDriveInfo.type}`}\n                          className=\"mt-auto mb-auto mr-2\"\n                        >\n                          {drive.name}\n                          <small className=\"block text-sm text-slate-500\">\n                            {drive.allowAnonymousReads && t('Allows anonymous access')}\n                          </small>\n                        </Label>\n                        <PermissionLevelEditor\n                          className=\"my-auto ml-auto\"\n                          permissionLevels={drivePermissionLevels}\n                          defaultValue={\n                            newCircleDefinition.driveGrants?.find(\n                              (driveGrant) =>\n                                driveGrant.permissionedDrive.drive.alias ===\n                                  drive.targetDriveInfo.alias &&\n                                driveGrant.permissionedDrive.drive.type ===\n                                  drive.targetDriveInfo.type\n                            )?.permissionedDrive.permission ?? 0\n                          }\n                          onChange={(value) => {\n                            if (value > 0) {\n                              setNewCircleDefinition({\n                                ...newCircleDefinition,\n                                driveGrants: [\n                                  ...(newCircleDefinition?.driveGrants?.filter(\n                                    (driveGrant) =>\n                                      driveGrant.permissionedDrive?.drive.alias !==\n                                        drive.targetDriveInfo.alias ||\n                                      driveGrant.permissionedDrive?.drive.type !==\n                                        drive.targetDriveInfo.type\n                                  ) || []),\n                                  {\n                                    permissionedDrive: {\n                                      drive: drive.targetDriveInfo,\n                                      permission: value,\n                                    },\n                                  },\n                                ],\n                              });\n                            } else {\n                              setNewCircleDefinition({\n                                ...newCircleDefinition,\n                                driveGrants: [\n                                  ...newCircleDefinition.driveGrants.filter(\n                                    (driveGrant) =>\n                                      driveGrant.permissionedDrive.drive.alias !==\n                                        drive.targetDriveInfo.alias ||\n                                      driveGrant.permissionedDrive.drive.type !==\n                                        drive.targetDriveInfo.type\n                                  ),\n                                ],\n                              });\n                            }\n                          }}\n                        />\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={createOrUpdateStatus} icon={'send'}>\n              {confirmText || t('Add Circle')}\n            </ActionButton>\n            <ActionButton\n              className=\"m-2\"\n              type=\"secondary\"\n              onClick={() => {\n                reset();\n                onCancel();\n              }}\n            >\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default CircleDialog;\n","import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../ui/Icons/Check/Check';\nimport Triangle from '../ui/Icons/Triangle/Triangle';\n\nconst PermissionLevelEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number) => void;\n  defaultValue: number;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue = permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= defaultValue) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n\n  const setValue = (value: number) => {\n    setInnerValue(value);\n    onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue.name}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={level.value === 0 ? value === level.value : value >= level.value}\n              onChange={() => (value !== level.value ? setValue(level.value) : setValue(0))}\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[8rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 flex-shrink-0  ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionLevelEditor;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    return await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['drives'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useDrives;\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n\nexport const appPermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Manage Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n","import { BuiltInProfiles, getTargetDriveFromProfileId } from '@youfoundation/dotyoucore-js';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport CirclesIcon from '../../../components/ui/Icons/Circles/Circles';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../../components/ui/Buttons/ActionButton';\nimport CircleDialog from '../../../components/Dialog/CircleDialog/CircleDialog';\nimport PageMeta from '../../../components/ui/Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../../../components/ui/Loaders/LoadingParagraph/LoadingParagraph';\n\nconst Circles = () => {\n  const {\n    fetch: { data: circles, isLoading: isCirclesLoading },\n  } = useCircles();\n\n  const [isOpenCreate, setIsOpenCreate] = useState(false);\n\n  return (\n    <>\n      <PageMeta\n        icon={CirclesIcon}\n        title={t('My Circles')}\n        actions={\n          <>\n            <ActionButton icon=\"plus\" className=\"m-4\" onClick={() => setIsOpenCreate(true)}>\n              {t('Add Circle')}\n            </ActionButton>\n          </>\n        }\n      />\n\n      <section className=\"\">\n        {isCirclesLoading ? (\n          <>\n            <LoadingParagraph className=\"mb-4 h-10\" />\n            <LoadingParagraph className=\"mb-4 h-10\" />\n            <LoadingParagraph className=\"mb-4 h-10\" />\n          </>\n        ) : (\n          <div className=\"-m-4 flex flex-row flex-wrap items-stretch\">\n            {circles?.length ? (\n              circles.map((circleDef) => (\n                <div className=\"w-full p-4\" key={circleDef.id}>\n                  <CircleCard circleDefinintion={circleDef} />\n                </div>\n              ))\n            ) : (\n              <>{t('No circles found')}</>\n            )}\n          </div>\n        )}\n      </section>\n\n      <CircleDialog\n        title={t('Create new Circle')}\n        isOpen={isOpenCreate}\n        defaultValue={{\n          name: '',\n          description: '',\n          driveGrants: [\n            {\n              permissionedDrive: {\n                drive: getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId),\n                permission: 4,\n              },\n            },\n          ],\n          permissions: {\n            keys: [10],\n          },\n        }}\n        onConfirm={() => {\n          setIsOpenCreate(false);\n        }}\n        onCancel={() => {\n          setIsOpenCreate(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst CircleCard = ({\n  circleDefinintion,\n  className,\n}: {\n  circleDefinintion: CircleDefinition;\n  className?: string;\n}) => {\n  return (\n    <div className={`h-full ${className} ${circleDefinintion.disabled ? 'opacity-50' : ''}`}>\n      <Link\n        to={`/owner/circles/${encodeURIComponent(circleDefinintion.id)}`}\n        className=\"block h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors hover:shadow-md dark:border-gray-800 dark:bg-gray-800 hover:dark:shadow-slate-600\"\n      >\n        <h2 className=\"bg-slate-100 p-4 text-xl dark:bg-slate-700 dark:text-slate-200\">\n          {circleDefinintion.name}\n        </h2>\n        <div className=\"p-4\">\n          <p>{circleDefinintion.description}</p>\n          <p className=\"text-xs\">\n            Created on: {new Date(circleDefinintion.created).toLocaleDateString()}\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Circles;\n"],"names":["Option","className","isChecked","children","onChange","onClick","Check","permissionLevels","defaultValue","useState","isOpen","setIsOpen","value","setInnerValue","wrapperRef","useRef","useOutsideTrigger","currentValue","length","find","level","name","setValue","ref","Triangle","map","some","val","filter","title","confirmText","onConfirm","onCancel","target","usePortal","useCircle","createOrUpdate","mutateAsync","createOrUpdateStatus","status","updateError","error","drives","useDrives","fetch","data","driveGrants","newCircleDefinition","setNewCircleDefinition","useEffect","reset","dialog","DialogWrapper","onClose","size","ErrorNotification","onSubmit","e","preventDefault","Label","htmlFor","t","Input","id","required","Textarea","description","circlePermissionLevels","permissions","keys","newValue","drive","ownerOnly","index","defaultVal","driveGrant","permissionedDrive","alias","targetDriveInfo","type","permission","HardDrive","allowAnonymousReads","PermissionLevelEditor","drivePermissionLevels","ActionButton","state","icon","createPortal","reduce","prevValue","currValue","props","xmlns","viewBox","fill","d","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","circles","sort","a","b","disabled","useQuery","refetchOnWindowFocus","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","pageNumber","pageSize","results","appPermissionLevels","CircleCard","circleDefinintion","to","encodeURIComponent","Date","created","toLocaleDateString","useCircles","isCirclesLoading","isLoading","isOpenCreate","setIsOpenCreate","CirclesIcon","actions","circleDef","getTargetDriveFromProfileId","BuiltInProfiles"],"sourceRoot":""}