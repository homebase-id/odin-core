{"version":3,"file":"static/js/499.70c62386.chunk.js","mappings":"wHAiBA,IAjB6B,SAAC,GAAwC,IAAtCA,EAAqC,EAArCA,SAC9B,OACE,8BAEIA,EAASC,MAAM,IAAIC,KAAI,SAACC,GACtB,IAAMC,EAAWD,EAAKE,WAAW,GACjC,OAAID,GAAY,IAAMA,GAAY,KACzB,iBAAME,UAAU,4BAAhB,SAA6CH,IAE/CA,CACR,KAKR,C,iECYD,IAvBoB,WAClB,OACE,gBAAKG,UAAU,6FAAf,UACE,iBAAKA,UAAU,kCAAf,WACE,gBAAKA,UAAU,+BAAf,UACE,SAAC,IAAD,CAAOA,UAAU,2FAEnB,iBAAKA,UAAU,gCAAf,WACE,iBAAKA,UAAU,qBAAf,WACE,SAAC,IAAD,CAAQA,UAAU,kBAClB,cAAGA,UAAU,mBAAb,UAAiCC,EAAAA,EAAAA,GAAE,uBAErC,cAAGD,UAAU,sBAAb,UACGC,EAAAA,EAAAA,GACC,oHAOb,C,2KCkHD,UAhIiB,WACf,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAEA,GAA0BJ,EAAAA,EAAAA,YAA1B,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA6CC,EAAAA,EAAAA,MAAtCC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,qBAEfC,EAAwB,yCAAG,WAAOC,GAAP,+EAC/BA,EAAEC,iBACFN,EAAS,WAFsB,SAOzBL,IAAaE,EAPY,uBAQ3BU,OAAOC,MAAM,iDACbR,EAAS,SATkB,iCAavBS,EAAS,IAAIC,gBAAgBC,SAASC,QAbf,UAcvBT,EAAqBR,EAAUc,EAAOI,IAAI,QAdnB,yBAiBvBX,EAAaP,GAjBU,QAmB7BK,EAAS,WAnBoB,kDAsB7Bc,QAAQC,MAAR,MACAf,EAAS,SAvBoB,kCAyBxB,GAzBwB,0DAAH,sDA2C9B,OACE,iCACE,SAAC,KAAD,WACE,wDAEF,UAAC,KAAD,YACE,SAAC,IAAD,KACA,oBAASR,UAAU,+BAAnB,UACE,gBAAKA,UAAU,4CAAf,UACE,gBAAKA,UAAU,GAAf,UACE,kBAAMwB,SAAUZ,EAAhB,WACE,gBAAIZ,UAAU,gCAAd,6BAEE,kBAAOA,UAAU,qEAAjB,UACE,SAAC,IAAD,UAAuBe,OAAOI,SAASM,iBAI3C,iBAAKzB,UAAU,OAAf,WACE,SAAC,IAAD,CAAO0B,QAAQ,gBAAgB1B,UAAU,wCAAzC,4BAIA,SAAC,IAAD,CACE2B,KAAK,OACLC,KAAK,gBACLC,GAAG,gBACHC,UAAQ,EACRC,aAAchB,OAAOI,SAASM,SAC9BO,UAAU,EACVC,UAAU,QAGd,iBAAKjC,UAAU,OAAf,WACE,SAAC,IAAD,CAAO0B,QAAQ,WAAW1B,UAAU,wCAApC,uBAGA,SAAC,IAAD,CACE2B,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRI,SAAU,SAACrB,GAAD,OAAOT,EAAYS,EAAEsB,OAAOC,MAA5B,EACVL,aAAc5B,QAIlB,iBAAKH,UAAU,OAAf,WACE,SAAC,IAAD,CAAO0B,QAAQ,iBAAiB1B,UAAU,wCAA1C,8BAGA,SAAC,IAAD,CACE2B,KAAK,OACLC,KAAK,iBACLC,GAAG,iBACHC,UAAQ,EACRI,SAAU,SAACrB,GAAD,OAAOP,EAAkBO,EAAEsB,OAAOC,MAAlC,EACVL,aAAc1B,QAGlB,SAAC,IAAD,CACEL,UAAU,eACV2B,KAAK,UACLU,KAAK,OACL9B,MAAOA,EACP+B,KAAK,QALP,UAOGrC,EAAAA,EAAAA,GAAE,wBASpB,C","sources":["components/ui/CharacterHighlighter/CharacterHighlighter.tsx","components/ui/Layout/UrlNotifier/UrlNotifier.tsx","templates/FirstRun/FirstRun.tsx"],"sourcesContent":["const CharacterHighlighter = ({ children }: { children: string }) => {\n  return (\n    <>\n      {\n        children.split('').map((char) => {\n          const charCode = char.charCodeAt(0);\n          if (charCode <= 32 || charCode >= 127) {\n            return <span className=\"text-orange-400 underline\">{char}</span>;\n          }\n          return char;\n        })\n        // .join('')\n      }\n    </>\n  );\n};\n\nexport default CharacterHighlighter;\n","import { t } from '../../../../helpers/i18n/dictionary';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport Shield from '../../Icons/Shield/Shield';\n\nconst UrlNotifier = () => {\n  return (\n    <div className=\"border-b border-slate-100 bg-slate-50 py-8 pt-4 pb-8 dark:bg-slate-700 dark:text-slate-100\">\n      <div className=\"container mx-auto px-5 sm:px-10\">\n        <div className=\"mb-4 hidden flex-row sm:flex\">\n          <Arrow className=\"left-[16rem] mx-auto mr-auto h-16 w-16 -rotate-90 animate-pulse md:relative md:mx-0\" />\n        </div>\n        <div className=\"mx-auto max-w-[30rem] sm:mx-0\">\n          <div className=\"mb-4 flex flex-row\">\n            <Shield className=\"mr-2 h-8 w-8\" />\n            <p className=\"my-auto text-4xl\">{t('Check the Url')}</p>\n          </div>\n          <p className=\"dark:text-slate-400\">\n            {t(\n              'Please confirm that the browser url matches your identity to avoid unauthorized access to your identity'\n            )}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UrlNotifier;\n","import { FormEventHandler, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useAuth from '../../hooks/auth/useAuth';\nimport ActionButton from '../../components/ui/Buttons/ActionButton';\nimport Input from '../../components/Form/Input';\nimport Label from '../../components/Form/Label';\nimport { MinimalLayout } from '../../components/ui/Layout/Layout';\nimport UrlNotifier from '../../components/ui/Layout/UrlNotifier/UrlNotifier';\nimport CharacterHighlighter from '../../components/ui/CharacterHighlighter/CharacterHighlighter';\n\nconst FirstRun = () => {\n  const [password, setPassword] = useState('');\n  const [retypePassword, setRetypePassword] = useState('');\n  \n  const [state, setState] = useState<'loading' | 'error' | 'success' | undefined>();\n  const {authenticate, finalizeRegistration} = useAuth();\n\n  const doNext: FormEventHandler = async (e) => {\n    e.preventDefault();\n    setState('loading');\n    try {\n\n      // if (!(await isMasterPasswordSet())) {\n\n      if (password !== retypePassword) {\n        window.alert('Passwords do not match; TODO: make this nicer');\n        setState('error');\n        return;\n      }\n\n      const params = new URLSearchParams(location.search);\n      await finalizeRegistration(password, params.get('frt'));\n\n      //TODO: need a 'success' screen or something\n      await authenticate(password);\n\n      setState('success');\n    } catch (ex) {\n      // Todo show message what failed\n      console.error(ex);\n      setState('error');\n    }\n    return false;\n  };\n\n  // if (passwordState === 'unknown' || passwordState === 'pending') {\n  //   return (\n  //     <MinimalLayout>\n  //       <div className=\"h-screen\">\n  //         <div className=\"mx-auto flex min-h-full w-full max-w-3xl flex-col p-5\">\n  //           <div className=\"my-auto flex flex-col\">\n  //             <Loader className=\"mx-auto mb-10 h-20 w-20\"/>\n  //             <div className=\"text-center\">{t('Configuring...')}</div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </MinimalLayout>\n  //   );\n  // }\n\n  return (\n    <>\n      <Helmet>\n        <title>Setup | Owner console</title>\n      </Helmet>\n      <MinimalLayout>\n        <UrlNotifier/>\n        <section className=\"body-font flex h-full pt-24 \">\n          <div className=\"container m-auto h-full max-w-[35rem] p-5\">\n            <div className=\"\">\n              <form onSubmit={doNext}>\n                <h1 className=\"mb-5 text-4xl dark:text-white\">\n                  YouAuth | Setup\n                  <small className=\"block break-all text-slate-400 dark:text-slate-500 sm:break-normal\">\n                    <CharacterHighlighter>{window.location.hostname}</CharacterHighlighter>\n                  </small>\n                </h1>\n\n                <div className=\"mb-4\">\n                  <Label htmlFor=\"youniverse-id\" className=\"text-sm leading-7  dark:text-gray-400\">\n                    Youniverse id\n                  </Label>\n\n                  <Input\n                    type=\"text\"\n                    name=\"youniverse-id\"\n                    id=\"youniverse-id\"\n                    required\n                    defaultValue={window.location.hostname}\n                    disabled={true}\n                    readOnly={true}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <Label htmlFor=\"password\" className=\"text-sm leading-7  dark:text-gray-400\">\n                    Password\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"password\"\n                    id=\"password\"\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                    defaultValue={password}\n                  />\n                </div>\n\n                <div className=\"mb-4\">\n                  <Label htmlFor=\"retypepassword\" className=\"text-sm leading-7  dark:text-gray-400\">\n                    Retype Password\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"retypePassword\"\n                    id=\"retypePassword\"\n                    required\n                    onChange={(e) => setRetypePassword(e.target.value)}\n                    defaultValue={retypePassword}\n                  />\n                </div>\n                <ActionButton\n                  className=\"mt-10 w-full\"\n                  type=\"primary\"\n                  icon=\"send\"\n                  state={state}\n                  size=\"large\"\n                >\n                  {t('Next')}\n                </ActionButton>\n              </form>\n            </div>\n          </div>\n        </section>\n      </MinimalLayout>\n    </>\n  );\n};\n\nexport default FirstRun;\n"],"names":["children","split","map","char","charCode","charCodeAt","className","t","useState","password","setPassword","retypePassword","setRetypePassword","state","setState","useAuth","authenticate","finalizeRegistration","doNext","e","preventDefault","window","alert","params","URLSearchParams","location","search","get","console","error","onSubmit","hostname","htmlFor","type","name","id","required","defaultValue","disabled","readOnly","onChange","target","value","icon","size"],"sourceRoot":""}