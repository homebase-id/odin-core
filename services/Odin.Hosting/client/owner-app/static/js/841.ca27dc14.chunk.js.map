{"version":3,"file":"static/js/841.ca27dc14.chunk.js","mappings":"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","sources":["components/ui/Buttons/SaveStatus.tsx","components/ui/Icons/Triangle/Triangle.tsx","components/ui/Layout/PageMeta/PageMeta.tsx","components/ui/Sections/Section.tsx","hooks/media/useImage.ts","hooks/socialFeed/useSocialFeed.ts","components/ui/Icons/Bullhorn/Bullhorn.tsx","templates/Feed/Feed.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport Alert from '../Alerts/Alert/Alert';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n  error,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n  error?: unknown;\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (state === 'loading') {\n    return <p className={`${className} text-sm`}>Saving...</p>;\n  }\n\n  if (state === 'error') {\n    return (\n      <Alert type=\"critical\" className={className}>\n        {error instanceof Error ? error.message : t('Something went wrong')}\n      </Alert>\n    );\n  }\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { FC, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode | string;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-mx-5 -mt-4 mb-10 border-b-2 border-gray-100 bg-slate-50 py-4 pr-5 pl-10 dark:border-gray-700 dark:bg-slate-800 sm:-mx-10\n    sm:-mt-8 sm:py-8 sm:px-10\"\n    >\n      <div className=\"flex flex-col sm:flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <>\n              <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n                {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n              </h1>\n              <Helmet>\n                <title>\n                  {(typeof title !== 'object' && `${title}`) ||\n                    window.location.pathname.split('/').pop()}{' '}\n                  | Owner console\n                </title>\n              </Helmet>\n            </>\n          )}\n        </div>\n        <div className=\"ml-auto\">\n          <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n            {actions}\n          </div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import React from 'react';\nimport { ReactNode, Ref } from 'react';\n\nconst Section = React.forwardRef(\n  (\n    {\n      title,\n      actions,\n      className,\n      children,\n      isOpaqueBg = false,\n      isBorderLess = false,\n    }: {\n      title?: ReactNode;\n      actions?: ReactNode;\n      className?: string;\n      children: ReactNode;\n      isOpaqueBg?: boolean;\n      isBorderLess?: boolean;\n    },\n    ref: Ref<HTMLElement>\n  ) => {\n    return (\n      <section\n        ref={ref}\n        className={`my-5 rounded-md ${\n          isOpaqueBg\n            ? isBorderLess\n              ? ''\n              : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n            : 'bg-slate-50 px-5 dark:bg-slate-800'\n        } dark:text-slate-300 ${className ?? ''}`}\n      >\n        {title || actions ? (\n          <div\n            className={`relative flex flex-row items-center border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n          >\n            <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n            <div className=\"ml-auto\">\n              <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n                {actions}\n              </div>\n            </div>\n          </div>\n        ) : null}\n        <div className=\"py-5 \">{children}</div>\n      </section>\n    );\n  }\n);\n\nexport default Section;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  AccessControlList,\n  ApiType,\n  BlogConfig,\n  Client,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId?: string, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchImageData = async (imageFileId?: string, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined) {\n      return;\n    }\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  const saveImage = async ({\n    bytes,\n    type,\n    targetDrive = defaultDrive,\n    acl = { requiredSecurityGroup: SecurityGroupType.Anonymous },\n    fileId = undefined,\n  }: {\n    bytes: Uint8Array;\n    type: string;\n    targetDrive: TargetDrive;\n    acl?: AccessControlList;\n    fileId?: string;\n  }) => {\n    return (\n      await client.mediaProvider.uploadImage(targetDrive, undefined, acl, bytes, fileId, type)\n    ).fileId;\n  };\n\n  const removeImage = async ({\n    targetDrive = defaultDrive,\n    fileId,\n  }: {\n    targetDrive: TargetDrive;\n    fileId: string;\n  }) => {\n    return await client.mediaProvider.removeImage(fileId, targetDrive);\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive],\n      () => fetchImageData(imageFileId, imageDrive),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n        enabled: !!imageFileId,\n      }\n    ),\n    save: useMutation(saveImage, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.fileId) {\n          queryClient.invalidateQueries([\n            'image',\n            variables.fileId,\n            variables.targetDrive ?? defaultDrive,\n          ]);\n        } else {\n          queryClient.removeQueries(['image']);\n        }\n      },\n    }),\n    remove: useMutation(removeImage),\n    // The remove mutation doesn't force invalidate the cache anymore, as removing an image always corresponds to removing the refrence as well.\n  };\n};\n\nexport default useImage;\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { PostContent } from '@youfoundation/dotyoucore-js';\nimport ExternalPostsDataProvider, {\n  MultiRequestCursoredResult,\n  PostFileVm,\n} from '../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useSocialFeed = ({ pageSize = 10 }: { pageSize: number }) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchAll = async ({\n    pageParam,\n  }: {\n    pageParam: Record<string, string>;\n  }): Promise<MultiRequestCursoredResult<PostFileVm<PostContent>[]>> => {\n    const externalPostDataProvider = ExternalPostsDataProvider.getInstance(getSharedSecret());\n    const response = await externalPostDataProvider.getRecentsFromAllConnections(\n      pageSize,\n      pageParam\n    );\n\n    return response;\n  };\n\n  return {\n    fetchAll: useInfiniteQuery(['social-feeds'], ({ pageParam }) => fetchAll({ pageParam }), {\n      getNextPageParam: (lastPage) =>\n        (lastPage?.results?.length >= 1 && lastPage?.cursorState) ?? undefined,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }),\n  };\n};\n\nexport default useSocialFeed;\n","import { FC } from 'react';\n\nconst Bullhorn: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M480 32c0-12.9-7.8-24.6-19.8-29.6s-25.7-2.2-34.9 6.9L381.7 53c-48 48-113.1 75-181 75H192 160 64c-35.3 0-64 28.7-64 64v96c0 35.3 28.7 64 64 64l0 128c0 17.7 14.3 32 32 32h64c17.7 0 32-14.3 32-32V352l8.7 0c67.9 0 133 27 181 75l43.6 43.6c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6V300.4c18.6-8.8 32-32.5 32-60.4s-13.4-51.6-32-60.4V32zm-64 76.7V240 371.3C357.2 317.8 280.5 288 200.7 288H192V192h8.7c79.8 0 156.5-29.8 215.3-83.3z\" />\n    </svg>\n  );\n};\n\nexport default Bullhorn;\n","import useSocialFeed from '../../hooks/socialFeed/useSocialFeed';\nimport { ExternalPostTeaserCard } from '../../components/Blog/PostTeaserCard/PostTeaserCard';\nimport Bullhorn from '../../components/ui/Icons/Bullhorn/Bullhorn';\nimport PageMeta from '../../components/ui/Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../../components/ui/Loaders/LoadingParagraph/LoadingParagraph';\nimport { useRef } from 'react';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\nimport { PostContent } from '@youfoundation/dotyoucore-js';\nimport { PostFileVm } from '../../provider/transit/ExternalPostsDataProvider';\nimport { flattenInfinteData } from '../DemoData/helpers';\n\nconst PAGE_SIZE = 10;\n\nconst Feed = () => {\n  const {\n    data: posts,\n    hasNextPage: hasMorePosts,\n    isLoading: postsLoading,\n    fetchNextPage,\n  } = useSocialFeed({ pageSize: PAGE_SIZE }).fetchAll;\n\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useIntersection(\n    hasMorePosts ? loadMoreRef : undefined,\n    () => {\n      fetchNextPage();\n    },\n    true\n  );\n\n  // Flatten all pages, sorted descending and slice on the max number expected\n  const flattenedPosts = flattenInfinteData<PostFileVm<PostContent>>(\n    posts,\n    PAGE_SIZE,\n    (a, b) => b.content?.dateUnixTime - a.content?.dateUnixTime\n  );\n\n  return (\n    <>\n      <section>\n        <PageMeta icon={Bullhorn} title={'Feed'} />\n      </section>\n      {postsLoading ? (\n        <>\n          <LoadingParagraph className=\"m-4 h-10\" />\n          <LoadingParagraph className=\"m-4 h-10\" />\n          <LoadingParagraph className=\"m-4 h-10\" />\n        </>\n      ) : (\n        <>\n          {flattenedPosts?.length ? (\n            <ul>\n              {flattenedPosts.map((post) => {\n                return (\n                  <ExternalPostTeaserCard\n                    key={post.content.id}\n                    post={post.content}\n                    dotYouId={post.dotYouId}\n                    className=\"my-2\"\n                  />\n                );\n              })}\n              <div ref={loadMoreRef} className=\"h-1 w-full\"></div>\n            </ul>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Feed;\n"],"names":["className","state","error","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","type","Error","message","t","diff","getTime","text","toLocaleString","xmlns","viewBox","fill","d","title","actions","saveStatus","breadCrumbs","icon","map","crumb","index","href","to","window","location","pathname","split","pop","Section","React","ref","children","isOpaqueBg","isBorderLess","defaultDrive","alias","HomePageConfig","BlogConfig","imageFileId","imageDrive","getSharedSecret","useAuth","queryClient","useQueryClient","client","Client","api","ApiType","sharedSecret","fetchImageData","undefined","mediaProvider","getDecryptedImageUrl","saveImage","bytes","targetDrive","acl","requiredSecurityGroup","SecurityGroupType","fileId","uploadImage","removeImage","fetch","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","enabled","save","useMutation","onSuccess","_data","variables","invalidateQueries","removeQueries","remove","pageSize","fetchAll","pageParam","externalPostDataProvider","ExternalPostsDataProvider","getRecentsFromAllConnections","response","useInfiniteQuery","getNextPageParam","lastPage","results","length","cursorState","useSocialFeed","posts","data","hasMorePosts","hasNextPage","postsLoading","isLoading","fetchNextPage","loadMoreRef","useRef","useIntersection","flattenedPosts","flattenInfinteData","a","b","content","dateUnixTime","PageMeta","Bullhorn","LoadingParagraph","post","dotYouId","id"],"sourceRoot":""}