{"version":3,"file":"static/js/682.003d8799.chunk.js","mappings":"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","sources":["components/ui/Icons/Eye/Eye.tsx","components/Connection/PendingConnectionImage/PendingConnectionImage.tsx","components/Connection/YourInfo/YourInfo.tsx","components/Dialog/ConnectionDialogs/IncomingConnectionDialog.tsx","components/Form/CheckboxToggle.tsx","components/Form/CircleSelector.tsx","components/PermissionViews/CirclePermissionView/CirclePermissionView.tsx","components/ui/CharacterHighlighter/CharacterHighlighter.tsx","components/ui/FallbackImg/FallbackImg.tsx","components/ui/Icons/Cake/Cake.tsx","components/ui/Icons/IconFrame/IconFrame.tsx","components/ui/Icons/Phone/Phone.tsx","components/ui/Sections/Section.tsx","hooks/circles/useCircles.ts","hooks/connections/useConnection.ts","hooks/focusedEditing/useFocusedEditing.ts","hooks/media/useImage.ts","hooks/profiles/useAttributeVersions.ts","provider/system/SettingsProvider.ts","hooks/settings/useSettings.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Eye: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n};\n\nexport default Eye;\n","import { useState } from 'react';\nimport useContact from '../../../hooks/contacts/useContact';\nimport useImage from '../../../hooks/media/useImage';\nimport { ContactConfig } from '../../../provider/contact/ContactTypes';\nimport FallbackImg from '../../ui/FallbackImg/FallbackImg';\nimport Eye from '../../ui/Icons/Eye/Eye';\nimport LoadingParagraph from '../../ui/Loaders/LoadingParagraph/LoadingParagraph';\n\nconst PendingConnectionImage = ({\n  dotYouId,\n  onlyLoadAfterClick,\n}: {\n  dotYouId: string;\n  onlyLoadAfterClick?: boolean;\n}) => {\n  const [loadImage, setLoadImage] = useState(false);\n\n  const { data: contactData, isLoading } = useContact({\n    dotYouId: dotYouId,\n    loadPendingProfilePicture: onlyLoadAfterClick ? loadImage : true,\n  }).fetch;\n\n  const shouldOnlyLoadAfterClick =\n    contactData?.source === 'pending' || contactData?.source === 'public'\n      ? onlyLoadAfterClick\n      : false;\n\n  const { data: imageUrl } = useImage(\n    shouldOnlyLoadAfterClick\n      ? loadImage\n        ? contactData?.imageFileId || undefined\n        : undefined\n      : contactData?.imageFileId,\n    ContactConfig.ContactTargetDrive\n  ).fetch;\n\n  const nameData = contactData?.name;\n  const getInitials = () => {\n    if (nameData) {\n      return nameData.givenName?.[0] + nameData.surname?.[0] + '';\n    }\n\n    const splittedDomain = dotYouId?.split('.');\n    if (splittedDomain?.length >= 2) {\n      return splittedDomain[0][0] + splittedDomain[1][0] + '';\n    }\n\n    return '--';\n  };\n\n  return (\n    <div className=\"relative aspect-square\">\n      {isLoading ? (\n        <LoadingParagraph className={`aspect-square`} />\n      ) : contactData?.imageUrl || imageUrl ? (\n        <figure className={'relative overflow-hidden'}>\n          <img\n            src={contactData.imageUrl ?? imageUrl}\n            className=\"aspect-square w-full object-cover\"\n          />\n        </figure>\n      ) : (\n        <>\n          <FallbackImg initials={getInitials()} />\n        </>\n      )}\n      {shouldOnlyLoadAfterClick === true && (\n        <button\n          className=\"absolute bottom-2 right-2 bg-white bg-opacity-60 p-2 hover:bg-opacity-100 dark:bg-black dark:bg-opacity-60 hover:dark:bg-opacity-100\"\n          onClick={(e) => {\n            e.preventDefault();\n            setLoadImage(!loadImage);\n            return false;\n          }}\n        >\n          <Eye className=\"h-4 w-4\" />\n          {loadImage && (\n            <span className=\"absolute bottom-[0.9rem] right-[0.2rem] block w-[1.5rem] rotate-45 border-b-[2px] border-black dark:border-white\"></span>\n          )}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default PendingConnectionImage;\n","import {\n  BuiltInProfiles,\n  AttributeDefinitions,\n  DataUtil,\n  MinimalProfileFields,\n  getTargetDriveFromProfileId,\n  AttributeFile,\n  BirthdayFields,\n  PhoneFields,\n  LocationFields,\n  SecurityGroupType,\n} from '@youfoundation/dotyoucore-js';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useImage from '../../../hooks/media/useImage';\nimport useAttributeVersions from '../../../hooks/profiles/useAttributeVersions';\nimport Alert from '../../ui/Alerts/Alert/Alert';\nimport FallbackImg from '../../ui/FallbackImg/FallbackImg';\nimport Cake from '../../ui/Icons/Cake/Cake';\nimport House from '../../ui/Icons/House/House';\nimport IconFrame from '../../ui/Icons/IconFrame/IconFrame';\nimport Phone from '../../ui/Icons/Phone/Phone';\nimport InfoBox from '../../ui/InfoBox/InfoBox';\nimport LoadingParagraph from '../../ui/Loaders/LoadingParagraph/LoadingParagraph';\n\ninterface infoObject {\n  givenName: string;\n  surname: string;\n  imageFileId: string;\n  phone: string;\n  city: string;\n  country: string;\n  birthday: string;\n}\n\ninterface YourInfoProps {\n  circleGrants?: string[];\n  className?: string;\n  onChange?: ({ givenName, surname, phone, city, country, birthday }: infoObject) => void;\n}\n\nconst filterAttributesWithCircleGrants = (attributes: AttributeFile[], circleGrants: string[]) => {\n  return attributes\n    ?.filter(\n      (attr) =>\n        attr.data !== undefined &&\n        Object.keys(attr.data)?.length !== 0 &&\n        attr.acl.requiredSecurityGroup !== SecurityGroupType.Owner\n    )\n    ?.sort((attrA, attrB) => attrA.priority - attrB.priority)\n    ?.filter((attr) =>\n      attr.acl?.circleIdList?.length\n        ? attr.acl.circleIdList.some((allowedCircleId) =>\n            circleGrants?.some((circleGrantId) =>\n              DataUtil.stringGuidsEqual(circleGrantId, allowedCircleId)\n            )\n          )\n        : true\n    );\n};\n\nconst YourInfo = ({ circleGrants, className, onChange }: YourInfoProps) => {\n  const {\n    data: nameAttributes,\n    isLoading: nameAttributesLoading,\n    isFetchedAfterMount: isFetchedAfterMount,\n  } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Name.type,\n  }).fetchVersions;\n\n  const filteredNameAttributes = filterAttributesWithCircleGrants(nameAttributes, circleGrants);\n\n  const { data: photoAttributes, isLoading: photoAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Photo.type,\n  }).fetchVersions;\n\n  const filteredPhotoAttributes = filterAttributesWithCircleGrants(photoAttributes, circleGrants);\n\n  const { data: imageUrl } = useImage(\n    filteredPhotoAttributes?.[0]?.data?.[MinimalProfileFields.ProfileImageId],\n    getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId.toString())\n  ).fetch;\n\n  const { data: phoneAttributes, isLoading: phoneAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.PhoneNumber.type,\n  }).fetchVersions;\n\n  const filteredPhoneAttributes = filterAttributesWithCircleGrants(phoneAttributes, circleGrants);\n\n  const { data: locationAttributes, isLoading: locationAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Location.type,\n  }).fetchVersions;\n\n  const filteredLocationAttributes = filterAttributesWithCircleGrants(\n    locationAttributes,\n    circleGrants\n  );\n\n  const { data: birtydayAttributes, isLoading: birtydayAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Birthday.type,\n  }).fetchVersions;\n\n  const filteredBirtydayAttributes = filterAttributesWithCircleGrants(\n    birtydayAttributes,\n    circleGrants\n  );\n\n  const info: infoObject = {\n    givenName: filteredNameAttributes?.[0]?.data[MinimalProfileFields.GivenNameId],\n    surname: filteredNameAttributes?.[0]?.data[MinimalProfileFields.SurnameId],\n    imageFileId: filteredPhotoAttributes?.[0]?.data[MinimalProfileFields.ProfileImageId],\n    phone: filteredPhoneAttributes?.[0]?.data[PhoneFields.PhoneNumber],\n    city: filteredLocationAttributes?.[0]?.data[LocationFields.City],\n    country: filteredLocationAttributes?.[0]?.data[LocationFields.Country],\n    birthday: filteredBirtydayAttributes?.[0]?.data[BirthdayFields.Date],\n  };\n\n  useEffect(() => {\n    if (filteredNameAttributes?.length && onChange && typeof onChange === 'function') {\n      onChange(info);\n    }\n  }, [isFetchedAfterMount]);\n\n  return (\n    <div className={`relative border border-slate-100 dark:border-slate-800 ${className ?? ''}`}>\n      {!nameAttributesLoading && (!info.givenName || !info.surname) ? (\n        <>\n          <Alert type={'warning'} isCompact={true} className=\"mb-4\">\n            <p>\n              {t('Without a name, you cannot connect to other people. Please fill in your name on')}{' '}\n              <Link to={'/owner/profile/standard-info'} className=\"underline\">\n                {t('the profile page')}\n              </Link>\n            </p>\n          </Alert>\n        </>\n      ) : null}\n\n      <div className=\"-mr-6 flex flex-row \">\n        <div className=\"aspect-square w-1/4 max-w-[10rem]\">\n          {photoAttributesLoading ? (\n            <LoadingParagraph className={`aspect-square`} />\n          ) : !imageUrl ? (\n            <FallbackImg\n              initials={(info.givenName?.[0] ?? '') + (info.surname?.[0] ?? '')}\n              className=\"aspect-square h-[8rem] w-[8rem] sm:text-4xl\"\n            />\n          ) : (\n            <img src={imageUrl} className=\"aspect-square object-cover object-top\" />\n          )}\n        </div>\n        <div className=\"flex-grow px-6 py-4\">\n          {nameAttributesLoading ? (\n            <LoadingParagraph className=\"h-6 w-full max-w-xs\" />\n          ) : (\n            <h2 className=\"mb-4 text-lg\">{`${info.givenName ?? ''} ${info.surname ?? ''}`}</h2>\n          )}\n          {phoneAttributesLoading ? (\n            <LoadingParagraph className=\"h-6 w-full max-w-xs\" />\n          ) : (\n            <div className=\"my-1 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <Phone className=\"h-3 w-3\" />\n              </IconFrame>{' '}\n              {info.phone ? (\n                info.phone\n              ) : (\n                <span className=\"font-light text-slate-400\">{t('unknown')}</span>\n              )}\n            </div>\n          )}\n          {locationAttributesLoading ? (\n            <LoadingParagraph className=\"h-6 w-full max-w-xs\" />\n          ) : (\n            <div className=\"my-1 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <House className=\"h-3 w-3\" />\n              </IconFrame>{' '}\n              {!info.city && !info.country ? (\n                <span className=\"font-light text-slate-400\">{t('unknown')}</span>\n              ) : (\n                <>\n                  {info.city}\n                  {info.city && ', '}\n                  {info.country}\n                </>\n              )}\n            </div>\n          )}\n          {birtydayAttributesLoading ? (\n            <LoadingParagraph className=\"h-6 w-full max-w-xs\" />\n          ) : (\n            <div className=\"my-1 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <Cake className=\"h-3 w-3\" />\n              </IconFrame>{' '}\n              {info.birthday ? (\n                info.birthday\n              ) : (\n                <span className=\"font-light text-slate-400\">{t('unknown')}</span>\n              )}\n            </div>\n          )}\n        </div>\n        <InfoBox title={t('Why am I seeing this?')} className=\"absolute bottom-1 right-1\">\n          <p className=\"mb-4\">\n            {t(\n              'Based on the list of circles that a connection belongs to, certain access to your profile attributes (as you can specifiy yourself) are provided.'\n            )}\n          </p>\n          <p className=\"\">\n            {t(\n              'The contact info shown here is just a sample of the data the conection will be able to access.'\n            )}\n          </p>\n        </InfoBox>\n      </div>\n    </div>\n  );\n};\n\nexport default YourInfo;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connections/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport useSettings from '../../../hooks/settings/useSettings';\nimport { ConnectionRequest } from '../../../provider/connections/CircleDataTypes';\nimport ErrorNotification from '../../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport CharacterHighlighter from '../../ui/CharacterHighlighter/CharacterHighlighter';\nimport PendingConnectionImage from '../../Connection/PendingConnectionImage/PendingConnectionImage';\nimport YourInfo from '../../Connection/YourInfo/YourInfo';\nimport CircleSelector from '../../Form/CircleSelector';\nimport DialogWrapper from '../../ui/Dialog/DialogWrapper';\n\nconst IncomingConnectionDialog = ({\n  confirmText,\n\n  senderDotYouId,\n  pendingConnection,\n\n  isOpen,\n\n  onConfirm,\n  onCancel,\n}: {\n  confirmText?: string;\n\n  senderDotYouId: string;\n  pendingConnection: ConnectionRequest;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  const {\n    mutateAsync: acceptPending,\n    status: acceptPendingStatus,\n    error: acceptError,\n  } = useConnection({}).acceptRequest;\n  const { data: uiSettings } = useSettings().fetchUiSettings;\n\n  const checkReturnTo = useFocusedEditing();\n\n  const [doubleChecked, setDoubleChecked] = useState(false);\n\n  const [name, setName] = useState<{ givenName: string; surname: string }>();\n  const [photoFileId, setPhotoFileId] = useState<string>(null);\n  const [circleGrants, setCircleGrants] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper\n      title={\n        <>\n          {t('Connection request from')}{' '}\n          <CharacterHighlighter>{senderDotYouId}</CharacterHighlighter>\n        </>\n      }\n      onClose={() => {\n        setDoubleChecked(false);\n        onCancel();\n      }}\n      keepOpenOnBlur={true}\n      size=\"2xlarge\"\n    >\n      <>\n        <ErrorNotification error={acceptError} />\n        {!doubleChecked ? (\n          <>\n            <div className=\"mb-4 pb-4\">\n              <h2 className=\"mb-8\">\n                {t('The user with the identity')}:{' '}\n                <span className=\"rounded-lg bg-slate-200 p-1 tracking-wide dark:bg-slate-600\">\n                  <CharacterHighlighter>{senderDotYouId}</CharacterHighlighter>\n                </span>{' '}\n                {t('would like to connect with you and sent you a personal message')}:\n              </h2>\n              <div className=\"-m-4 flex flex-row flex-wrap sm:flex-nowrap\">\n                <div className=\"w-full p-4 md:w-2/5\">\n                  <PendingConnectionImage\n                    dotYouId={senderDotYouId}\n                    onlyLoadAfterClick={!uiSettings?.automaticallyLoadProfilePicture}\n                  />\n                </div>\n                <div className=\"w-full p-4 text-gray-600 dark:text-gray-400 md:w-3/5\">\n                  <p>{pendingConnection.message}</p>\n                  <p className=\"mt-2\">\n                    -- {pendingConnection.contactData.givenName}{' '}\n                    {pendingConnection.contactData.surname}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"-m-2 flex flex-col py-3 sm:flex-row-reverse\">\n              <ActionButton className=\"m-2\" icon={'send'} onClick={() => setDoubleChecked(true)}>\n                {t('Continue')}\n              </ActionButton>\n              <ActionButton\n                className=\"m-2\"\n                type=\"mute\"\n                onClick={() => {\n                  checkReturnTo('Canceled');\n                  onCancel();\n                }}\n              >\n                {t('Cancel')}\n              </ActionButton>\n              <ActionButton\n                className=\"m-2 sm:mr-auto\"\n                type=\"secondary\"\n                onClick={() => {\n                  checkReturnTo('Ignored');\n                  onCancel();\n                }}\n              >\n                {t('Ignore request')}\n              </ActionButton>\n            </div>\n          </>\n        ) : (\n          <>\n            <form\n              onSubmit={async (e) => {\n                e.preventDefault();\n                await acceptPending({\n                  senderDotYouId: senderDotYouId,\n                  name: name,\n                  photoFileId: photoFileId,\n                  circleIds: circleGrants,\n                });\n\n                checkReturnTo('Approved');\n                onConfirm();\n              }}\n            >\n              <div className=\"mb-4 pb-4\">\n                <h2 className=\"mb-2 text-lg leading-tight\">\n                  {t('Add as member to one or more circles')}:\n                  <small className=\"block text-slate-400 dark:text-slate-600\">\n                    {senderDotYouId} {t('will be added as member to the selected circles')}\n                  </small>\n                </h2>\n                <CircleSelector\n                  defaultValue={circleGrants}\n                  onChange={(e) => setCircleGrants(e.target.value)}\n                />\n              </div>\n\n              <h2 className=\"mb-6 text-lg leading-tight\">\n                {t('Your contact details')}\n                <small className=\"block text-slate-400 dark:text-slate-600\">\n                  {senderDotYouId} {t('will get access to these contact details')}\n                </small>\n              </h2>\n              <YourInfo\n                circleGrants={circleGrants}\n                onChange={({ givenName, surname, imageFileId }) => {\n                  setName({ givenName, surname });\n                  setPhotoFileId(imageFileId);\n                }}\n                className=\"mb-4\"\n              />\n\n              <div className=\"-m-2 flex flex-col py-3 sm:flex-row-reverse\">\n                <ActionButton\n                  className=\"m-2\"\n                  icon={'send'}\n                  state={acceptPendingStatus}\n                  isDisabled={!name}\n                >\n                  {confirmText ?? t('Accept')}\n                </ActionButton>\n                <ActionButton\n                  className=\"m-2\"\n                  type=\"secondary\"\n                  onClick={() => {\n                    setDoubleChecked(false);\n                    checkReturnTo('Canceled');\n                    onCancel();\n                  }}\n                >\n                  {t('Cancel')}\n                </ActionButton>\n              </div>\n            </form>\n          </>\n        )}\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default IncomingConnectionDialog;\n","const CheckboxToggle = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  const { className, ...inputProps } = props;\n\n  return (\n    <label className={`relative inline-flex cursor-pointer items-center ${className ?? ''}`}>\n      <input type=\"checkbox\" className=\"peer sr-only\" {...inputProps} />\n      <div\n        className={`peer h-6 w-11 rounded-full bg-gray-200 after:absolute after:top-[2px] after:left-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-indigo-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-indigo-800`}\n      ></div>\n    </label>\n  );\n};\n\nexport default CheckboxToggle;\n","import { DataUtil } from '@youfoundation/dotyoucore-js';\nimport { useEffect, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useCircles from '../../hooks/circles/useCircles';\nimport CirclePermissionView from '../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport CheckboxToggle from './CheckboxToggle';\n\nconst CircleSelector = ({\n  defaultValue,\n  onChange,\n  name,\n}: {\n  defaultValue: string[];\n  onChange: (e: { target: { name: string; value: string[] } }) => void;\n  name?: string;\n}) => {\n  const { data: circles, isLoading: circlesLoading } = useCircles().fetch;\n\n  const [selection, setSelection] = useState<string[]>([...(defaultValue ?? [])]);\n\n  useEffect(() => {\n    onChange({ target: { name: name, value: [...selection] } });\n  }, [selection]);\n\n  useEffect(() => {\n    if (selection?.length && defaultValue?.length === 0) {\n      setSelection([]);\n    }\n  }, [defaultValue]);\n\n  return (\n    <>\n      {!circles?.length && !circlesLoading && <p>{t('No circles found')}</p>}\n      <div className=\"-mb-4\">\n        {circles?.map((circle, index) => {\n          const isChecked = selection.some((circleGrant) =>\n            DataUtil.stringGuidsEqual(circleGrant, circle.id)\n          );\n          const clickHandler = () => {\n            if (\n              !selection.some((circleGrant) => DataUtil.stringGuidsEqual(circleGrant, circle.id))\n            ) {\n              setSelection([...selection, circle.id]);\n            } else {\n              setSelection(\n                selection.filter((circleId) => !DataUtil.stringGuidsEqual(circleId, circle.id))\n              );\n            }\n          };\n\n          return (\n            <div\n              className={`my-2 flex w-full cursor-pointer select-none flex-row rounded-lg border px-4 py-3 dark:border-slate-800 ${\n                isChecked && 'bg-slate-50 dark:bg-slate-700'\n              }`}\n              key={circle.id}\n              onClick={clickHandler}\n            >\n              <CirclePermissionView\n                circleDef={circle}\n                key={circle.id ?? index}\n                isChecked={isChecked}\n                onClick={clickHandler}\n                hideMembers={true}\n              />\n              <label className=\"sr-only\" htmlFor={circle.id}>\n                {circle.name}\n              </label>\n              <CheckboxToggle\n                id={circle.id}\n                checked={isChecked}\n                className=\"pointer-events-none my-auto ml-auto\"\n                readOnly={true}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default CircleSelector;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circles/useCircle';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport Arrow from '../../ui/Icons/Arrow/Arrow';\nimport Circles from '../../ui/Icons/Circles/Circles';\nimport LoadingParagraph from '../../ui/Loaders/LoadingParagraph/LoadingParagraph';\n\nconst CirclePermissionView = ({\n  circleDef,\n  permissionDetails,\n  className,\n  isChecked,\n  onClick,\n  hideMembers,\n}: {\n  circleDef: CircleDefinition;\n  permissionDetails?: string;\n  className?: string;\n  isChecked?: boolean;\n  hideMembers?: boolean;\n  onClick?: () => void;\n}) => {\n  const { data: members, isLoading: membersLoading } = useCircle({\n    circleId: !hideMembers && circleDef?.id,\n  }).fetchMembers;\n\n  if (!circleDef) {\n    return <></>;\n  }\n\n  const LinkWrapper = ({ children, className }: { children: ReactNode; className: string }) =>\n    onClick ? (\n      <a onClick={() => onClick && onClick()} className={className ?? ''}>\n        {children}\n      </a>\n    ) : (\n      <Link\n        to={`/owner/circles/${encodeURIComponent(circleDef.id)}`}\n        className={`hover:text-slate-700 hover:underline dark:hover:text-slate-400 ${\n          className ?? ''\n        }`}\n      >\n        {children}\n      </Link>\n    );\n\n  const checkedClasses = isChecked\n    ? 'border-indigo-500 dark:border-indigo-800'\n    : isChecked === false\n    ? 'border-slate-100 dark:border-slate-800'\n    : '';\n\n  return (\n    <LinkWrapper\n      className={`flex flex-row ${className ?? ''} ${circleDef.disabled && 'opacity-50'} ${\n        onClick && 'cursor-pointer'\n      } ${checkedClasses}`}\n    >\n      <Circles className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n      <div className=\"mr-2 flex flex-col\">\n        <p className={`my-auto leading-none`}>\n          {circleDef.disabled && t('Disabled:')} {circleDef?.name}\n          {permissionDetails && `: ${permissionDetails}`}\n        </p>\n        {!hideMembers ? (\n          membersLoading ? (\n            <LoadingParagraph className=\"mt-1 h-4 w-full\" />\n          ) : (\n            <small className=\"block\">\n              {members\n                ? `${members.length} ${members.length === 1 ? t('member') : t('members')}`\n                : null}\n            </small>\n          )\n        ) : null}\n      </div>\n      {!onClick && <Arrow className=\"my-auto ml-2 h-5 w-5\" />}\n    </LinkWrapper>\n  );\n};\n\nexport default CirclePermissionView;\n","const CharacterHighlighter = ({ children }: { children: string }) => {\n  return (\n    <>\n      {\n        children.split('').map((char) => {\n          const charCode = char.charCodeAt(0);\n          if (charCode <= 32 || charCode >= 127) {\n            return <span className=\"text-orange-400 underline\">{char}</span>;\n          }\n          return char;\n        })\n        // .join('')\n      }\n    </>\n  );\n};\n\nexport default CharacterHighlighter;\n","const FallbackImg = ({ initials, className }: { initials: string; className?: string }) => {\n  return (\n    <div\n      className={`flex h-full w-full bg-slate-200 text-4xl font-light text-white dark:bg-slate-700 dark:text-black sm:text-6xl ${\n        className ?? ''\n      }`}\n    >\n      <span className=\"m-auto uppercase\">{initials}</span>\n    </div>\n  );\n};\n\nexport default FallbackImg;\n","import { FC } from 'react';\n\nconst Cake: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M86.4 5.5L61.8 47.6C58 54.1 56 61.6 56 69.2V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L105.6 5.5C103.6 2.1 100 0 96 0s-7.6 2.1-9.6 5.5zm128 0L189.8 47.6c-3.8 6.5-5.8 14-5.8 21.6V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L233.6 5.5C231.6 2.1 228 0 224 0s-7.6 2.1-9.6 5.5zM317.8 47.6c-3.8 6.5-5.8 14-5.8 21.6V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L361.6 5.5C359.6 2.1 356 0 352 0s-7.6 2.1-9.6 5.5L317.8 47.6zM128 176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48c-35.3 0-64 28.7-64 64v71c8.3 5.2 18.1 9 28.8 9c13.5 0 27.2-6.1 38.4-13.4c5.4-3.5 9.9-7.1 13-9.7c1.5-1.3 2.7-2.4 3.5-3.1c.4-.4 .7-.6 .8-.8l.1-.1 0 0 0 0s0 0 0 0s0 0 0 0c3.1-3.2 7.4-4.9 11.9-4.8s8.6 2.1 11.6 5.4l0 0 0 0 .1 .1c.1 .1 .4 .4 .7 .7c.7 .7 1.7 1.7 3.1 3c2.8 2.6 6.8 6.1 11.8 9.5c10.2 7.1 23 13.1 36.3 13.1s26.1-6 36.3-13.1c5-3.5 9-6.9 11.8-9.5c1.4-1.3 2.4-2.3 3.1-3c.3-.3 .6-.6 .7-.7l.1-.1c3-3.5 7.4-5.4 12-5.4s9 2 12 5.4l.1 .1c.1 .1 .4 .4 .7 .7c.7 .7 1.7 1.7 3.1 3c2.8 2.6 6.8 6.1 11.8 9.5c10.2 7.1 23 13.1 36.3 13.1s26.1-6 36.3-13.1c5-3.5 9-6.9 11.8-9.5c1.4-1.3 2.4-2.3 3.1-3c.3-.3 .6-.6 .7-.7l.1-.1c2.9-3.4 7.1-5.3 11.6-5.4s8.7 1.6 11.9 4.8l0 0 0 0 0 0 .1 .1c.2 .2 .4 .4 .8 .8c.8 .7 1.9 1.8 3.5 3.1c3.1 2.6 7.5 6.2 13 9.7c11.2 7.3 24.9 13.4 38.4 13.4c10.7 0 20.5-3.9 28.8-9V288c0-35.3-28.7-64-64-64V176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48H256V176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48H128V176zM448 394.6c-8.5 3.3-18.2 5.4-28.8 5.4c-22.5 0-42.4-9.9-55.8-18.6c-4.1-2.7-7.8-5.4-10.9-7.8c-2.8 2.4-6.1 5-9.8 7.5C329.8 390 310.6 400 288 400s-41.8-10-54.6-18.9c-3.5-2.4-6.7-4.9-9.4-7.2c-2.7 2.3-5.9 4.7-9.4 7.2C201.8 390 182.6 400 160 400s-41.8-10-54.6-18.9c-3.7-2.6-7-5.2-9.8-7.5c-3.1 2.4-6.8 5.1-10.9 7.8C71.2 390.1 51.3 400 28.8 400c-10.6 0-20.3-2.2-28.8-5.4V480c0 17.7 14.3 32 32 32H416c17.7 0 32-14.3 32-32V394.6z\" />\n    </svg>\n  );\n};\n\nexport default Cake;\n","import { ReactNode } from 'react';\n\nconst IconFrame = ({ children, className }: { children: ReactNode; className?: string }) => {\n  return (\n    <div\n      className={`mr-2 flex justify-center bg-slate-200 p-2 align-middle dark:bg-slate-800 ${\n        className ?? ''\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default IconFrame;\n","import { FC } from 'react';\n\nconst Phone: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M164.9 24.6c-7.7-18.6-28-28.5-47.4-23.2l-88 24C12.1 30.2 0 46 0 64C0 311.4 200.6 512 448 512c18 0 33.8-12.1 38.6-29.5l24-88c5.3-19.4-4.6-39.7-23.2-47.4l-96-40c-16.3-6.8-35.2-2.1-46.3 11.6L304.7 368C234.3 334.7 177.3 277.7 144 207.3L193.3 167c13.7-11.2 18.4-30 11.6-46.3l-40-96z\" />\n    </svg>\n  );\n};\n\nexport default Phone;\n","import React from 'react';\nimport { ReactNode, Ref } from 'react';\n\nconst Section = React.forwardRef(\n  (\n    {\n      title,\n      actions,\n      className,\n      children,\n      isOpaqueBg = false,\n      isBorderLess = false,\n    }: {\n      title?: ReactNode;\n      actions?: ReactNode;\n      className?: string;\n      children: ReactNode;\n      isOpaqueBg?: boolean;\n      isBorderLess?: boolean;\n    },\n    ref: Ref<HTMLElement>\n  ) => {\n    return (\n      <section\n        ref={ref}\n        className={`my-5 rounded-md ${\n          isOpaqueBg\n            ? isBorderLess\n              ? ''\n              : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n            : 'bg-slate-50 px-5 dark:bg-slate-800'\n        } dark:text-slate-300 ${className ?? ''}`}\n      >\n        {title || actions ? (\n          <div\n            className={`relative flex flex-row items-center border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n          >\n            <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n            <div className=\"ml-auto\">\n              <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n                {actions}\n              </div>\n            </div>\n          </div>\n        ) : null}\n        <div className=\"py-5 \">{children}</div>\n      </section>\n    );\n  }\n);\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport { ConnectionRequest } from '../../provider/connections/CircleDataTypes';\nimport useAuth from '../auth/useAuth';\n\nconst useConnection = ({ dotYouId }: { dotYouId?: string }) => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n\n  const fetchSingle = async ({ dotYouId }: { dotYouId: string }) => {\n    if (!dotYouId) {\n      return;\n    }\n\n    const connectionInfo = await circleNetworkProvider.getConnectionInfo(dotYouId);\n    if (connectionInfo && connectionInfo.status.toLowerCase() !== 'none') {\n      return connectionInfo;\n    }\n\n    const pendingRequest = await circleNetworkRequestProvider.getPendingRequest(dotYouId);\n    if (pendingRequest) {\n      return pendingRequest;\n    }\n\n    const sentRequest = await circleNetworkRequestProvider.getSentRequest(dotYouId);\n    return sentRequest ?? connectionInfo;\n  };\n\n  const disconnect = async ({ connectionDotYouId }: { connectionDotYouId?: string }) => {\n    return await circleNetworkProvider.disconnectFromContact(connectionDotYouId ?? dotYouId);\n  };\n\n  const sendConnectionRequest = async ({\n    targetDotYouId,\n    message,\n    name,\n    photoFileId,\n    circleIds,\n  }: {\n    targetDotYouId: string;\n    message: string;\n    name: { givenName: string; surname: string };\n    photoFileId: string | undefined;\n    circleIds: string[];\n  }) => {\n    await circleNetworkRequestProvider.sendRequest(\n      targetDotYouId,\n      message,\n      name,\n      photoFileId,\n      circleIds\n    );\n    return { targetDotYouId };\n  };\n\n  const revokeConnectionRequest = async ({ targetDotYouId }: { targetDotYouId: string }) => {\n    return await circleNetworkRequestProvider.deleteSentRequest(targetDotYouId);\n  };\n\n  const acceptRequest = async ({\n    senderDotYouId,\n    name,\n    photoFileId,\n    circleIds,\n  }: {\n    senderDotYouId: string;\n    name: { givenName: string; surname: string };\n    photoFileId: string | undefined;\n    circleIds: string[];\n  }) => {\n    await circleNetworkRequestProvider.acceptConnectionRequest(\n      senderDotYouId,\n      name,\n      photoFileId,\n      circleIds\n    );\n    return { senderDotYouId };\n  };\n\n  const ignoreRequest = async ({ senderDotYouId }: { senderDotYouId: string }) => {\n    return await circleNetworkRequestProvider.deletePendingRequest(senderDotYouId);\n  };\n\n  const block = async (dotYouId: string) => {\n    return await circleNetworkRequestProvider.blockDotYouId(dotYouId);\n  };\n  const unblock = async (dotYouId: string) => {\n    return await circleNetworkRequestProvider.unblockDotYouId(dotYouId);\n  };\n\n  return {\n    fetch: useQuery(['connectionInfo', dotYouId], () => fetchSingle({ dotYouId }), {\n      refetchOnWindowFocus: false,\n    }),\n\n    disconnect: useMutation(disconnect, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', param]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    sendConnectionRequest: useMutation(sendConnectionRequest, {\n      onMutate: async (newRequest) => {\n        await queryClient.cancelQueries(['sentRequests']);\n\n        const previousRequests: ConnectionRequest[] = queryClient.getQueryData(['sentRequests']);\n        const newRequests = [\n          {\n            status: 'sent',\n            recipient: newRequest.targetDotYouId,\n          },\n          ...(previousRequests ?? []),\n        ];\n\n        queryClient.setQueryData(['sentRequests'], newRequests);\n\n        return { previousRequests, newRequest };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['sentRequests'], context.previousRequests);\n      },\n      onSettled: (data) => {\n        queryClient.invalidateQueries(['sentRequests']);\n        queryClient.invalidateQueries(['connectionInfo', data.targetDotYouId]);\n      },\n    }),\n    revokeConnectionRequest: useMutation(revokeConnectionRequest, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['sentRequests']);\n        queryClient.invalidateQueries(['connectionInfo', param.targetDotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n    acceptRequest: useMutation(acceptRequest, {\n      onMutate: async (newRequest) => {\n        await queryClient.cancelQueries(['activeConnections']);\n\n        const previousConnections: ConnectionRequest[] = queryClient.getQueryData([\n          'activeConnections',\n        ]);\n        const newConnections = [\n          {\n            status: 'pending', // Set to pending to not update the connetion details page yet, as we don't have the data for that\n            dotYouId: newRequest.senderDotYouId,\n          },\n          ...(previousConnections ?? []),\n        ];\n\n        queryClient.setQueryData(['activeConnections'], newConnections);\n\n        return { previousConnections, newRequest };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['activeConnections'], context.previousConnections);\n      },\n      onSettled: (data) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', data?.senderDotYouId]);\n      },\n    }),\n    ignoreRequest: useMutation(ignoreRequest, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['connectionInfo', param.senderDotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n    block: useMutation(block, {\n      onSettled: (_data, _err, dotYouId) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n      },\n    }),\n    unblock: useMutation(unblock, {\n      onSettled: (_data, _err, dotYouId) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n      },\n    }),\n  };\n};\n\nexport default useConnection;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useFocusedEditing = () => {\n  const [searchParams] = useSearchParams();\n\n  const checkReturnTo = (state?: string) => {\n    if (searchParams.get('ui') !== 'focus' && searchParams.get('ui') !== 'minimal') {\n      return;\n    }\n\n    let returnUrl = searchParams.get('return');\n\n    if (state) {\n      if (returnUrl.indexOf('?') !== -1) {\n        returnUrl += `&status=${state}`;\n      } else {\n        returnUrl += `?status=${state}`;\n      }\n    }\n\n    window.location.href = returnUrl;\n  };\n\n  return checkReturnTo;\n};\n\nexport default useFocusedEditing;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  AccessControlList,\n  ApiType,\n  BlogConfig,\n  Client,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId?: string, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchImageData = async (imageFileId?: string, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined) {\n      return;\n    }\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  const saveImage = async ({\n    bytes,\n    type,\n    targetDrive = defaultDrive,\n    acl = { requiredSecurityGroup: SecurityGroupType.Anonymous },\n    fileId = undefined,\n  }: {\n    bytes: Uint8Array;\n    type: string;\n    targetDrive: TargetDrive;\n    acl?: AccessControlList;\n    fileId?: string;\n  }) => {\n    return (\n      await client.mediaProvider.uploadImage(targetDrive, undefined, acl, bytes, fileId, type)\n    ).fileId;\n  };\n\n  const removeImage = async ({\n    targetDrive = defaultDrive,\n    fileId,\n  }: {\n    targetDrive: TargetDrive;\n    fileId: string;\n  }) => {\n    return await client.mediaProvider.removeImage(fileId, targetDrive);\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive],\n      () => fetchImageData(imageFileId, imageDrive),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n        enabled: !!imageFileId,\n      }\n    ),\n    save: useMutation(saveImage, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.fileId) {\n          queryClient.invalidateQueries([\n            'image',\n            variables.fileId,\n            variables.targetDrive ?? defaultDrive,\n          ]);\n        } else {\n          queryClient.removeQueries(['image']);\n        }\n      },\n    }),\n    remove: useMutation(removeImage),\n    // The remove mutation doesn't force invalidate the cache anymore, as removing an image always corresponds to removing the refrence as well.\n  };\n};\n\nexport default useImage;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\nconst useAttributeVersions = ({ profileId, type }: { profileId: string; type: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchVersions = async ({ profileId, type }: { profileId: string; type: string }) => {\n    return await client.profileDataProvider.getAttributeVersions(profileId, undefined, [type]);\n  };\n  return {\n    fetchVersions: useQuery(\n      ['attributeVersions', profileId, type],\n      () => fetchVersions({ profileId, type }),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useAttributeVersions;\n","import { TargetDrive } from '@youfoundation/dotyoucore-js';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nexport interface uiSettings {\n  automaticallyLoadProfilePicture?: boolean;\n}\n\n//Handles management of Contacts\nexport class SettingsProvider extends OwnerProviderBase {\n  private static instance: SettingsProvider;\n  static DriveInfo: Promise<Record<string, TargetDrive>>;\n  private root = '/config';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw '[SettingsProvider] Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  public async getFlags() {\n    const client = super.createAxiosClient();\n    const url = this.root + '/system/flags';\n\n    return await client.post<Record<string, boolean>>(url).then((response) => {\n      return response.data;\n    });\n  }\n\n  public async updateFlag(name: string, value: boolean) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/system/updateflag';\n\n    return await client\n      .post(url, { flagName: name, value: value ? 'true' : 'false' })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  public async getSettings() {\n    const client = super.createAxiosClient();\n    const url = this.root + '/ownerapp/settings/list';\n\n    return await client.post<{ settings: uiSettings }>(url).then((response) => {\n      const settingsObj = response.data?.settings;\n      const returnObj: uiSettings = {};\n\n      Object.keys(settingsObj).forEach((key) => {\n        returnObj[key] = JSON.parse(settingsObj[key]);\n      });\n\n      return returnObj;\n    });\n  }\n\n  public async updateSettings(settings: uiSettings) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/ownerapp/settings/update';\n\n    const requestObj: uiSettings = {};\n\n    Object.keys(settings).forEach((key) => {\n      requestObj[key] = JSON.stringify(settings[key]);\n    });\n\n    return await client.post(url, { settings: requestObj }).then((response) => {\n      return response.data;\n    });\n  }\n\n  public static getInstance(sharedSecret): SettingsProvider {\n    if (!SettingsProvider.instance) {\n      SettingsProvider.instance = new SettingsProvider(sharedSecret);\n    }\n\n    return SettingsProvider.instance;\n  }\n}\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { SettingsProvider, uiSettings } from '../../provider/system/SettingsProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useSettings = () => {\n  const { getSharedSecret } = useAuth();\n  const settingsProvider = SettingsProvider.getInstance(getSharedSecret());\n  const queryClient = useQueryClient();\n\n  const fetchFlags = async () => {\n    return settingsProvider.getFlags();\n  };\n\n  const updateFlag = async ({ name, value }: { name: string; value: boolean }) => {\n    return settingsProvider.updateFlag(name, value);\n  };\n\n  const fetchUiSettings = async () => {\n    return settingsProvider.getSettings();\n  };\n\n  const updateUiSetting = async (settings: uiSettings) => {\n    return settingsProvider.updateSettings(settings);\n  };\n\n  return {\n    fetchFlags: useQuery(['systemFlags'], () => fetchFlags(), {\n      refetchOnWindowFocus: false,\n    }),\n    updateFlag: useMutation(updateFlag, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['systemFlags']);\n      },\n    }),\n    fetchUiSettings: useQuery(['uiSettings'], () => fetchUiSettings(), {\n      refetchOnWindowFocus: false,\n    }),\n    updateUiSetting: useMutation(updateUiSetting, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['uiSettings']);\n      },\n    }),\n  };\n};\n\nexport default useSettings;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["className","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","viewBox","d","cx","cy","r","dotYouId","onlyLoadAfterClick","useState","loadImage","setLoadImage","useContact","loadPendingProfilePicture","fetch","contactData","data","isLoading","shouldOnlyLoadAfterClick","source","imageUrl","useImage","imageFileId","undefined","ContactConfig","nameData","name","LoadingParagraph","src","FallbackImg","initials","givenName","surname","splittedDomain","split","length","getInitials","onClick","e","preventDefault","filterAttributesWithCircleGrants","attributes","circleGrants","filter","attr","Object","keys","acl","requiredSecurityGroup","SecurityGroupType","sort","attrA","attrB","priority","circleIdList","some","allowedCircleId","circleGrantId","DataUtil","onChange","useAttributeVersions","profileId","BuiltInProfiles","type","AttributeDefinitions","fetchVersions","nameAttributes","nameAttributesLoading","isFetchedAfterMount","filteredNameAttributes","photoAttributes","photoAttributesLoading","filteredPhotoAttributes","MinimalProfileFields","getTargetDriveFromProfileId","phoneAttributes","phoneAttributesLoading","filteredPhoneAttributes","locationAttributes","locationAttributesLoading","filteredLocationAttributes","birtydayAttributes","birtydayAttributesLoading","filteredBirtydayAttributes","info","phone","PhoneFields","city","LocationFields","country","birthday","BirthdayFields","useEffect","isCompact","t","to","title","confirmText","senderDotYouId","pendingConnection","isOpen","onConfirm","onCancel","target","usePortal","useConnection","acceptRequest","acceptPending","mutateAsync","acceptPendingStatus","status","acceptError","error","uiSettings","useSettings","fetchUiSettings","checkReturnTo","useFocusedEditing","doubleChecked","setDoubleChecked","setName","photoFileId","setPhotoFileId","setCircleGrants","dialog","onClose","keepOpenOnBlur","size","onSubmit","circleIds","defaultValue","value","icon","state","isDisabled","automaticallyLoadProfilePicture","message","createPortal","props","inputProps","useCircles","circles","circlesLoading","selection","setSelection","map","circle","index","isChecked","circleGrant","id","clickHandler","circleId","circleDef","hideMembers","htmlFor","checked","readOnly","permissionDetails","useCircle","fetchMembers","members","membersLoading","LinkWrapper","children","encodeURIComponent","checkedClasses","disabled","char","charCode","charCodeAt","xmlns","Section","React","ref","actions","isOpaqueBg","isBorderLess","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","a","b","useQuery","refetchOnWindowFocus","queryClient","useQueryClient","circleNetworkProvider","CircleNetworkProvider","circleNetworkRequestProvider","CircleNetworkRequestProvider","fetchSingle","getConnectionInfo","connectionInfo","toLowerCase","getPendingRequest","pendingRequest","getSentRequest","sentRequest","disconnect","connectionDotYouId","disconnectFromContact","sendConnectionRequest","targetDotYouId","sendRequest","revokeConnectionRequest","deleteSentRequest","acceptConnectionRequest","ignoreRequest","deletePendingRequest","block","blockDotYouId","unblock","unblockDotYouId","useMutation","onSuccess","param","invalidateQueries","onError","ex","console","onMutate","newRequest","cancelQueries","previousRequests","getQueryData","newRequests","recipient","setQueryData","err","newData","context","onSettled","previousConnections","newConnections","_data","_err","useSearchParams","searchParams","get","returnUrl","indexOf","window","location","href","defaultDrive","alias","HomePageConfig","BlogConfig","imageDrive","client","Client","api","ApiType","sharedSecret","fetchImageData","mediaProvider","getDecryptedImageUrl","saveImage","bytes","targetDrive","fileId","uploadImage","removeImage","refetchOnMount","staleTime","Infinity","enabled","save","variables","removeQueries","remove","profileDataProvider","getAttributeVersions","SettingsProvider","root","url","this","post","then","response","flagName","settingsObj","settings","returnObj","forEach","key","JSON","parse","requestObj","stringify","instance","OwnerProviderBase","DriveInfo","settingsProvider","getInstance","fetchFlags","getFlags","updateFlag","getSettings","updateUiSetting","updateSettings","_objectWithoutProperties","excluded","i","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}