{"version":3,"file":"static/js/4.3f311734.chunk.js","mappings":"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","sources":["components/Blog/Common/Blocks/Meta/Meta.tsx","components/Dialog/ConfirmDialog/ConfirmDialog.tsx","helpers/imageMerger.ts","components/SocialFeed/PostComposer.tsx","components/ui/Alerts/Alert/Alert.tsx","components/ui/Alerts/ErrorNotification/ErrorNotification.tsx","components/ui/Buttons/ActionLink.tsx","components/ui/Icons/Loader/Loader.tsx","components/ui/Buttons/Button.tsx","components/ui/Buttons/FakeAnchor.tsx","components/ui/Dialog/DialogWrapper.tsx","components/ui/Icons/Arrow/Arrow.tsx","components/ui/Icons/Article/Article.tsx","components/ui/Icons/Check/Check.tsx","components/ui/Icons/Exclamation/Exclamation.tsx","components/ui/Icons/Pencil/Pencil.tsx","components/ui/Icons/Plus/Plus.tsx","components/ui/Icons/Question/Question.tsx","components/ui/Icons/Save/Save.tsx","components/ui/Icons/Shield/Shield.tsx","components/ui/Icons/Trash/Trash.tsx","hooks/blog/useChannels.ts","hooks/portal/usePortal.ts","hooks/socialFeed/post/usePost.tsx","provider/blog/BlogPostProvider.ts","webpack://public-app/./src/components/ui/Icons/Loader/Loader.css?8b99"],"sourcesContent":["import { ChannelDefinition, PostContent } from '@youfoundation/dotyoucore-js';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\n\nconst PostMeta = ({\n  dotYouId,\n  post,\n  channel,\n  className,\n  size = 'text-xs',\n}: {\n  dotYouId?: string;\n  post: PostContent;\n  channel: ChannelDefinitionVm | ChannelDefinition;\n  className?: string;\n  size?: 'text-xs' | 'text-sm';\n}) => {\n  const now = new Date();\n  const date = new Date(post.dateUnixTime);\n  const format: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric',\n    year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined,\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n\n  return (\n    <div className={`flex flex-row ${size} font-medium ${className ?? ''}`}>\n      <span>{date.toLocaleDateString(undefined, format)}</span>\n      <a\n        className=\"ml-1 border-l pl-1 text-button dark:border-slate-500\"\n        href={`${dotYouId ? `https://${dotYouId}/` : ''}/home/posts/${channel.slug}`}\n      >\n        {channel?.name ? `${channel?.name}` : ''}\n      </a>\n    </div>\n  );\n};\n\nexport default PostMeta;\n","import { ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport Exclamation from '../../ui/Icons/Exclamation/Exclamation';\n\nconst ConfirmDialog = ({\n  title,\n  confirmText,\n  children,\n  needConfirmation,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText: string;\n  children: ReactNode;\n  needConfirmation: boolean;\n  onConfirm: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  if (!needConfirmation) {\n    return null;\n  }\n\n  const dialog = (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\" onClick={onCancel}>\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n          <div\n            className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all dark:bg-black sm:my-8 sm:w-full sm:max-w-lg\"\n            onClick={(e) => {\n              e.preventDefault();\n              return false;\n            }}\n          >\n            <div className=\"bg-white px-4 pt-5 pb-4 text-gray-900 dark:bg-black dark:text-slate-50 sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full text-red-400 sm:mx-0 sm:h-10 sm:w-10\">\n                  <Exclamation />\n                </div>\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <h3 className=\"text-lg font-medium leading-6\" id=\"modal-title\">\n                    {title}\n                  </h3>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-50 px-4 py-3 dark:bg-slate-900  sm:flex sm:flex-row-reverse sm:px-6\">\n              <button\n                type=\"button\"\n                className=\"inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm\"\n                onClick={onConfirm}\n              >\n                {confirmText}\n              </button>\n              <button\n                type=\"button\"\n                className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:border-gray-800 dark:bg-slate-700 dark:text-white sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                onClick={onCancel}\n              >\n                {t('Cancel')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default ConfirmDialog;\n","import { DataUtil, EmbeddedThumb } from '@youfoundation/dotyoucore-js';\n\nconst GRID_PIXEL_SIZE = 40;\nconst IMAGE_SIZE = GRID_PIXEL_SIZE / 2;\nconst MIME_TYPE = 'image/webp';\n\nexport const makeGrid = async (thumbs: EmbeddedThumb[]) => {\n  if (thumbs.length < 2) {\n    throw new Error('Making grid of less than 2 images is not supported');\n  }\n  const blobs = thumbs.slice(0, 4).map((thumb) => {\n    const buffer = DataUtil.base64ToUint8Array(thumb.content);\n    return new Blob([buffer], { type: thumb.contentType });\n  });\n\n  const imgs = await Promise.all(\n    blobs.map(\n      (imgBlob) =>\n        new Promise<HTMLImageElement>((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(imgBlob);\n          reader.onload = () => {\n            const img = new Image();\n            if (!reader.result || typeof reader.result !== 'string') {\n              reject();\n              return;\n            }\n            img.src = reader.result;\n            img.onload = () => {\n              resolve(img);\n            };\n          };\n        })\n    )\n  );\n\n  const canvas = document.createElement('canvas');\n  canvas.width = GRID_PIXEL_SIZE;\n  canvas.height = imgs.length > 2 ? GRID_PIXEL_SIZE : GRID_PIXEL_SIZE / 2;\n\n  const context2d = canvas.getContext('2d');\n  if (!context2d) {\n    throw new Error('grid failed');\n  }\n\n  context2d.drawImage(imgs[0], 0, 0, IMAGE_SIZE, IMAGE_SIZE);\n  context2d.drawImage(imgs[1], IMAGE_SIZE * 1, 0, IMAGE_SIZE, IMAGE_SIZE);\n  if (imgs[2]) {\n    context2d.drawImage(imgs[2], 0, IMAGE_SIZE * 1, IMAGE_SIZE, IMAGE_SIZE);\n  }\n  if (imgs[3]) {\n    context2d.drawImage(imgs[3], IMAGE_SIZE * 1, IMAGE_SIZE * 1, IMAGE_SIZE, IMAGE_SIZE);\n  }\n\n  return await new Promise<EmbeddedThumb>((resolve) => {\n    canvas.toBlob(\n      (blob) => {\n        if (!blob) {\n          return;\n        }\n        blob.arrayBuffer().then((buffer) => {\n          resolve({\n            pixelHeight: GRID_PIXEL_SIZE,\n            pixelWidth: GRID_PIXEL_SIZE,\n            contentType: MIME_TYPE,\n            content: DataUtil.uint8ArrayToBase64(new Uint8Array(buffer)),\n          });\n        });\n      },\n      MIME_TYPE,\n      10\n    );\n  });\n};\n","import {\n  BlogConfig,\n  ChannelDefinition,\n  DataUtil,\n  PostContent,\n  PostFile,\n  SecurityGroupType,\n  Image,\n  ImageUploadResult,\n} from '@youfoundation/dotyoucore-js';\nimport React, { ReactNode, Ref, useMemo } from 'react';\nimport { useRef, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport { makeGrid } from '../../helpers/imageMerger';\nimport useChannels from '../../hooks/blog/useChannels';\nimport usePost from '../../hooks/socialFeed/post/usePost';\nimport ErrorNotification from '../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionLink from '../ui/Buttons/ActionLink';\nimport ActionButton from '../ui/Buttons/Button';\nimport Button from '../ui/Buttons/Button';\nimport Article from '../ui/Icons/Article/Article';\n\nexport const DEFAULT_POST: PostContent = {\n  id: '',\n  channelId: BlogConfig.PublicChannel.channelId,\n  slug: '',\n  dateUnixTime: 0,\n  type: 'Tweet',\n  caption: '',\n};\n\nconst PostComposer = ({ onPost }: { onPost?: () => void }) => {\n  const { mutateAsync: savePost, error: savePostError } = usePost().save;\n  const { mutateAsync: saveFiles, error: saveFilesError } = usePost().saveFiles;\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const [post, setPost] = useState<PostContent>({ ...DEFAULT_POST });\n  const [channel, setChannel] = useState<ChannelDefinition>(BlogConfig.PublicChannel);\n  const [files, setFiles] = useState<File[]>();\n\n  const [state, setState] = useState<'idle' | 'loading' | 'error'>('idle');\n\n  const doPost = async () => {\n    setState('loading');\n\n    try {\n      // Upload files, if any\n      let uploadResults: ImageUploadResult[] | undefined = undefined;\n      if (files?.length && channel?.acl) {\n        uploadResults = await saveFiles({\n          acl: channel.acl,\n          channelId: channel.channelId,\n          files,\n        });\n      }\n\n      const imageFileIds = uploadResults?.map((result) => result.fileId);\n\n      // Upload posts\n      const postId = DataUtil.getNewId();\n      const toPostPost: PostContent | Image = {\n        ...post,\n        dateUnixTime: new Date().getTime(),\n        id: postId,\n        slug: postId,\n        channelId: channel.channelId,\n        primaryImageFileId: imageFileIds?.[0] ?? undefined,\n      };\n\n      if (imageFileIds && imageFileIds.length > 1) {\n        toPostPost.type = 'Image';\n        (toPostPost as Image).imageFileIds = imageFileIds;\n      }\n\n      const postFile: PostFile<PostContent> = {\n        content: toPostPost,\n        acl: channel.acl ? { ...channel.acl } : { requiredSecurityGroup: SecurityGroupType.Owner },\n        previewThumbnail:\n          uploadResults && uploadResults.length >= 4\n            ? await makeGrid(uploadResults.map((result) => result.previewThumbnail))\n            : uploadResults?.[0]?.previewThumbnail,\n      };\n\n      await savePost({ blogFile: postFile, channelId: channel.channelId });\n\n      // Reset UI:\n      resetUi();\n\n      // Notifiy parent:\n      onPost && onPost();\n    } catch (ex) {\n      setState('error');\n    }\n\n    setState('idle');\n  };\n\n  const resetUi = () => {\n    setPost({ ...DEFAULT_POST });\n    setChannel(BlogConfig.PublicChannel);\n    setFiles(undefined);\n\n    if (inputRef.current) {\n      inputRef.current.value = DEFAULT_POST.caption;\n    }\n    if (selectRef.current) {\n      selectRef.current.value = BlogConfig.PublicChannel.channelId;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mb-5 w-full rounded-md border border-gray-200 border-opacity-60 p-4 dark:border-gray-800\">\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            doPost();\n            return false;\n          }}\n        >\n          <div className=\"relative\">\n            <textarea\n              defaultValue={post.caption}\n              onChange={(e) =>\n                setPost({\n                  ...post,\n                  caption: e.target.value,\n                })\n              }\n              placeholder={t(\"What's up?\")}\n              className={`w-full resize-none rounded-sm bg-transparent p-2 ${\n                post.caption?.length ? '' : 'h-[2.5rem]'\n              }`}\n              ref={inputRef}\n              required={!files}\n            />\n          </div>\n          <FileOverview files={files} setFiles={setFiles} className=\"mt-2\" />\n          <div className=\"-m-2 mt-3 flex flex-row flex-wrap items-center md:flex-nowrap\">\n            <div\n              className=\"m-2 mr-0 text-xl font-extralight leading-4 text-opacity-50\"\n              title=\"Attach a file\"\n            >\n              <FileSelector onChange={(files) => setFiles(files)} />\n            </div>\n            <ActionLink\n              type=\"mute\"\n              className={`m-2 ml-0 cursor-pointer`}\n              size=\"small\"\n              href=\"/home/feed/new\"\n              title=\"Convert into an article\"\n            >\n              <Article className=\"h-4 w-4\" />\n            </ActionLink>\n            <ChannelSelector\n              className=\"m-2 ml-auto\"\n              defaultValue={post?.channelId}\n              onChange={(channel) => channel && setChannel(channel)}\n              ref={selectRef}\n            />\n            <Button\n              className={`m-2 w-full md:w-auto ${\n                post.caption?.length || files?.length\n                  ? ''\n                  : 'pointer-events-none opacity-20 grayscale'\n              } ${state === 'loading' ? 'pointer-events-none animate-pulse' : ''}`}\n              icon={'send'}\n            >\n              {t('Post')}\n            </Button>\n          </div>\n        </form>\n        {state === 'error' ? <ErrorNotification error={savePostError || saveFilesError} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const ChannelSelector = React.forwardRef(\n  (\n    {\n      className,\n      defaultValue,\n      onChange,\n    }: {\n      className?: string;\n      defaultValue?: string;\n      onChange: (channel: ChannelDefinition | undefined) => void;\n    },\n    ref: Ref<HTMLSelectElement>\n  ) => {\n    const { data: channels, isLoading } = useChannels();\n\n    return (\n      <select\n        className={`cursor-pointer bg-transparent px-3 py-2 text-sm ${className ?? ''}`}\n        defaultValue={defaultValue}\n        onChange={(e) => onChange(channels?.find((chnl) => chnl.channelId === e.target.value))}\n        ref={ref}\n      >\n        {isLoading || !channels ? (\n          <option>{t('Public Posts')}</option>\n        ) : (\n          <>\n            {channels.map((channel) => (\n              <option value={channel.channelId} key={channel.channelId}>\n                {channel.name}\n              </option>\n            ))}\n          </>\n        )}\n      </select>\n    );\n  }\n);\n\nexport const FileSelector = ({\n  children,\n  onChange,\n}: {\n  children?: ReactNode;\n  onChange?: (files: File[]) => void;\n}) => {\n  return (\n    <>\n      <label htmlFor=\"file-select\" className=\"block cursor-pointer select-none px-2 py-1\">\n        {children ?? '+'}\n      </label>\n      <input\n        id=\"file-select\"\n        name=\"file-select\"\n        onChange={(e) => {\n          const files = e.target?.files;\n          if (files) {\n            onChange && onChange(Array.from(files));\n          }\n        }}\n        type=\"file\"\n        accept=\"image/png, image/jpeg, image/tiff, image/webp, image/svg+xml\"\n        multiple\n        className={`sr-only`}\n      />\n    </>\n  );\n};\n\nexport const FileOverview = ({\n  files,\n  setFiles,\n  className,\n}: {\n  files?: File[];\n  setFiles: (files: File[]) => void;\n  className?: string;\n}) => {\n  if (!files || !files.length) {\n    return null;\n  }\n\n  const renderedFiles = useMemo(() => {\n    return files.map((currFile) => {\n      const url = URL.createObjectURL(currFile);\n      return (\n        <div key={url} className=\"relative p-[2px] md:w-1/3\">\n          <img\n            src={url}\n            onLoad={() => URL.revokeObjectURL(url)}\n            className=\"aspect-square h-auto w-full object-cover\"\n          />\n          <ActionButton\n            className=\"absolute bottom-3 right-3\"\n            icon=\"trash\"\n            type=\"remove\"\n            size=\"square\"\n            onClick={() => setFiles([...files.filter((file) => file.name !== currFile.name)])}\n          />\n        </div>\n      );\n    });\n  }, [files]);\n\n  return (\n    <div className={`-m-[2px] flex flex-row flex-wrap ${className ?? ''}`}>{renderedFiles}</div>\n  );\n};\n\nexport default PostComposer;\n","import { ReactNode } from 'react';\nimport Exclamation from '../../Icons/Exclamation/Exclamation';\nimport Question from '../../Icons/Question/Question';\n\ninterface AlertProps {\n  type: 'success' | 'warning' | 'critical' | 'info';\n  title?: ReactNode;\n  children?: ReactNode;\n  className?: string;\n  isCompact?: boolean;\n}\n\nconst Alert = ({ type, title, children, className, isCompact }: AlertProps) => {\n  const bgClass =\n    type === 'critical'\n      ? 'bg-red-50 dark:bg-red-900 border-red-100 dark:border-red-800 dark:text-white'\n      : type === 'warning'\n      ? 'bg-orange-50 border-orange-100'\n      : 'bg-slate-100 dark:bg-slate-700 dark:border-slate-900';\n\n  return (\n    <section className={`bg-red rounded-lg border p-5 ${bgClass} ${className ?? ''}`}>\n      <div className={`flex w-full flex-row flex-wrap sm:flex-nowrap`}>\n        {type === 'critical' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-red-400 dark:text-red-300 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : type === 'warning' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-orange-400 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-blue-400 ${\n              isCompact ? 'mb-2 mr-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Question />\n          </div>\n        )}\n        <div className={`ml-5 flex-grow ${isCompact ? 'contents' : 'contents sm:block'}`}>\n          {title && <p className=\"ml-3 mb-2 text-2xl sm:ml-0\">{title}</p>}\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Alert;\n","import { useEffect, useState } from 'react';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Times from '../../Icons/Times/Times';\nimport Alert from '../Alert/Alert';\n\nconst getKnownErrorMessages = (errorCode: number): string | undefined => {\n  if (errorCode) {\n    switch (errorCode) {\n      case 1001:\n        return t('InvalidAuthToken');\n      case 2001:\n        return t('InvalidNotificationType');\n      case 2002:\n        return t('UnknownNotificationId');\n      case 3001:\n        return t('A circle cannot have no permissions, please review and try again');\n      case 3002:\n        return t('CannotAllowCirclesOnAuthenticatedOnly');\n      case 3003:\n        return t('CannotAllowCirclesOrIdentitiesOnAnonymousOrOwnerOnly');\n      case 3004:\n        return t('CannotDeleteCircleWithMembers');\n      case 3005:\n        return t('IdentityAlreadyMemberOfCircle');\n      case 4001:\n        return t('CannotAllowAnonymousReadsOnOwnerOnlyDrive');\n      case 4002:\n        return t('CannotUpdateDeletedFile');\n      case 4003:\n        return t('DriveAliasAndTypeAlreadyExists');\n      case 4004:\n        return t('InvalidGrantNonExistingDrive');\n      case 4101:\n        return t('CannotOverwriteNonExistentFileStef');\n      case 4102:\n        return t('CannotUploadEncryptedFileForAnonymous');\n      case 4103:\n        return t('CannotUseGlobalTransitIdOnTransientFile');\n      case 4104:\n        return t('DriveSecurityAndAclMismatch');\n      case 4105:\n        return t('ExistingFileWithUniqueId');\n      case 4106:\n        return t('FileNotFound');\n      case 4107:\n        return t('IdAlreadyExists');\n      case 4108:\n        return t('InvalidInstructionSet');\n      case 4109:\n        return t('InvalidKeyHeader');\n      case 4110:\n        return t('InvalidRecipient');\n      case 4111:\n        return t('InvalidTargetDrive');\n      case 4112:\n        return t('InvalidThumnbnailName');\n      case 4113:\n        return t('InvalidTransferFileType');\n      case 4114:\n        return t('InvalidTransferType');\n      case 4115:\n        return t('MalformedMetadata');\n      case 4116:\n        return t('MissingUploadData');\n      case 4117:\n        return t('TransferTypeNotSpecified');\n      case 4118:\n        return t('UnknownId');\n      case 5001:\n        return t('CannotSendConnectionRequestToExistingIncomingRequest');\n      case 5002:\n        return t('CannotSendMultipleConnectionRequestToTheSameIdentity');\n      case 5003:\n        return t('You cannot send a connection request to yourself');\n      case 6001:\n        return t('AppNotRegistered');\n      case 9001:\n        return t('InvalidFlagName');\n      case 9002:\n        return t('NotInitialized');\n      case 9003:\n        return t('UnknownFlagName');\n    }\n\n    console.log('Error code found, but no corresponding message in the dictionary', errorCode);\n  }\n  return;\n};\n\nconst ErrorNotification = ({ error }: { error: unknown }) => {\n  const [isDismissed, setIsDismissed] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setIsDismissed(false);\n    }\n  }, [error]);\n\n  if (!error || isDismissed) {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const errorCode = (error as any)?.response?.data?.errorCode;\n  const knownErrorMessage = getKnownErrorMessages(errorCode);\n\n  return (\n    <div\n      className=\"fixed inset-0 z-10 flex bg-black bg-opacity-10\"\n      onClick={() => setIsDismissed(true)}\n    >\n      <Alert\n        type={knownErrorMessage ? 'warning' : 'critical'}\n        className=\"mx-auto mt-10 mb-auto cursor-pointer\"\n      >\n        <div className=\"flex flex-row\">\n          {knownErrorMessage ??\n            (error instanceof Error\n              ? error.message\n              : t('Something went wrong, please try again later'))}\n          <Times className=\"my-auto ml-5 h-5 w-5\" />\n        </div>\n      </Alert>\n    </div>\n  );\n};\n\nexport default ErrorNotification;\n","import React from 'react';\nimport { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Pencil from '../Icons/Pencil/Pencil';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Shield from '../Icons/Shield/Shield';\nimport Times from '../Icons/Times/Times';\nimport Trash from '../Icons/Trash/Trash';\n\nexport type ActionLinkState = 'loading' | 'success' | 'error' | 'idle';\n\ntype ActionLinkProps = {\n  children?: ReactNode;\n  className?: string;\n  type?: 'primary' | 'secondary' | 'remove' | 'mute';\n  title?: string;\n  size?: 'large' | 'small' | 'square';\n  onClick?: (e: unknown) => void;\n  icon?:\n    | 'save'\n    | 'send'\n    | 'plus'\n    | 'trash'\n    | 'edit'\n    | 'left'\n    | 'right'\n    | 'up'\n    | 'down'\n    | 'shield'\n    | 'check'\n    | 'times';\n  download?: string;\n  href?: string;\n};\n\nconst ActionLink: FC<ActionLinkProps> = ({\n  children,\n  className,\n  type,\n  title,\n  size,\n  onClick,\n  icon,\n  download,\n  href,\n}) => {\n  const Icon = (props: { className: string }) => {\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : icon === 'edit' ? (\n      <Pencil {...props} />\n    ) : icon === 'left' ? (\n      <Arrow {...props} className={`-rotate-180 ${props.className}`} />\n    ) : icon === 'right' ? (\n      <Arrow {...props} className={` ${props.className}`} />\n    ) : icon === 'up' ? (\n      <Arrow {...props} className={`-rotate-90 ${props.className}`} />\n    ) : icon === 'shield' ? (\n      <Shield {...props} fill=\"currentColor\" />\n    ) : icon === 'down' ? (\n      <Arrow {...props} className={`rotate-90 ${props.className}`} />\n    ) : icon === 'check' ? (\n      <Check {...props} className={`${props.className}`} />\n    ) : icon === 'times' ? (\n      <Times {...props} className={`${props.className}`} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    type === 'secondary'\n      ? 'border-button border-2 hover:bg-button hover:text-button-text'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : type === 'mute'\n      ? ''\n      : 'bg-button hover:filter hover:grayscale-[20%] text-button-text';\n\n  const widthClasses =\n    children && type !== 'mute'\n      ? `min-w-[6rem] ${className?.indexOf('w-') !== -1 ? '' : 'w-full sm:w-auto'}`\n      : '';\n\n  const sizeClasses =\n    size === 'large'\n      ? 'px-5 py-3'\n      : size === 'small'\n      ? 'px-3 py-1 text-sm'\n      : size === 'square'\n      ? 'p-2'\n      : 'px-3 py-2';\n\n  return (\n    <a\n      className={`relative flex flex-row items-center rounded-md text-left ${widthClasses} ${sizeClasses} ${colorClasses} ${className}`}\n      download={download}\n      href={href}\n      title={title}\n      onClick={onClick}\n    >\n      {children}\n      <Icon className={`my-auto ${children ? 'ml-2' : ''} h-4 w-4`} />\n    </a>\n  );\n};\n\nexport default ActionLink;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC, ReactNode, useState } from 'react';\nimport ConfirmDialog from '../../Dialog/ConfirmDialog/ConfirmDialog';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Pencil from '../Icons/Pencil/Pencil';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Shield from '../Icons/Shield/Shield';\nimport Times from '../Icons/Times/Times';\nimport Trash from '../Icons/Trash/Trash';\n\nexport type ActionButtonState = 'loading' | 'success' | 'error' | 'idle';\n\nexport interface ActionButtonProps {\n  children?: ReactNode;\n  className?: string;\n  icon?:\n    | 'save'\n    | 'send'\n    | 'plus'\n    | 'trash'\n    | 'edit'\n    | 'left'\n    | 'right'\n    | 'up'\n    | 'down'\n    | 'shield'\n    | 'check'\n    | 'times';\n  type?: 'primary' | 'secondary' | 'remove' | 'mute';\n  state?: ActionButtonState;\n  isDisabled?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n  size?: 'large' | 'small' | 'square';\n  confirmOptions?: {\n    title: string;\n    buttonText: string;\n    body: string;\n  };\n}\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n  size,\n  confirmOptions,\n  isDisabled,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : icon === 'edit' ? (\n      <Pencil {...props} />\n    ) : icon === 'left' ? (\n      <Arrow {...props} className={`-rotate-180 ${props.className}`} />\n    ) : icon === 'right' ? (\n      <Arrow {...props} className={` ${props.className}`} />\n    ) : icon === 'up' ? (\n      <Arrow {...props} className={`-rotate-90 ${props.className}`} />\n    ) : icon === 'shield' ? (\n      <Shield {...props} fill=\"currentColor\" />\n    ) : icon === 'down' ? (\n      <Arrow {...props} className={`rotate-90 ${props.className}`} />\n    ) : icon === 'check' ? (\n      <Check {...props} className={`${props.className}`} />\n    ) : icon === 'times' ? (\n      <Times {...props} className={`${props.className}`} />\n    ) : (\n      <></>\n    );\n  };\n\n  const [needsConfirmation, setNeedsConfirmation] = useState(false);\n\n  const colorClasses =\n    (state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'border-button border-2 hover:bg-button hover:text-button-text'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : type === 'mute'\n      ? ''\n      : 'bg-button hover:filter hover:grayscale-[20%] text-button-text') +\n    (isDisabled ? ' opacity-50 cursor-not-allowed' : '');\n\n  const widthClasses =\n    children && type !== 'mute'\n      ? `min-w-[6rem] ${className?.indexOf('w-full') ? '' : 'w-full sm:w-auto'}`\n      : '';\n\n  const sizeClasses =\n    size === 'large'\n      ? 'px-5 py-3'\n      : size === 'small'\n      ? 'px-3 py-1 text-sm'\n      : size === 'square'\n      ? 'p-2'\n      : 'px-3 py-2';\n\n  const stateClasses = state === 'loading' ? 'animate-pulse' : '';\n\n  return (\n    <>\n      <button\n        className={`${\n          className && className.indexOf('absolute') !== -1 ? '' : 'relative'\n        } flex flex-row items-center ${\n          className && className.indexOf('rounded-') !== -1 ? '' : 'rounded-md'\n        } text-left ${widthClasses} ${sizeClasses} ${colorClasses} ${stateClasses} ${className}`}\n        disabled={isDisabled || state === 'loading'}\n        onClick={\n          confirmOptions\n            ? (e) => {\n                e.preventDefault();\n                setNeedsConfirmation(true);\n                return false;\n              }\n            : onClick\n        }\n        title={title}\n      >\n        {children}\n        <Icon className={`my-auto ${children ? 'ml-2' : ''} h-4 w-4`} />\n      </button>\n      {confirmOptions && onClick && (\n        <ConfirmDialog\n          title={confirmOptions.title}\n          confirmText={confirmOptions.buttonText}\n          needConfirmation={needsConfirmation}\n          onConfirm={onClick ?? undefined}\n          onCancel={() => {\n            setNeedsConfirmation(false);\n          }}\n        >\n          <p className=\"text-sm\">{confirmOptions.body}</p>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default ActionButton;\n","import { ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface FakeAnchorProps extends React.HTMLProps<HTMLAnchorElement> {\n  children: ReactNode;\n}\n\nconst FakeAnchor = ({ children, href, className, ...props }: FakeAnchorProps) => {\n  const navigate = useNavigate();\n  return (\n    <span\n      {...props}\n      className={`${className ?? ''} cursor-pointer`}\n      onClick={() => {\n        if (href) {\n          if (!href.startsWith('http')) {\n            navigate(href);\n          } else {\n            window.location.href = href;\n          }\n        }\n      }}\n      tabIndex={0}\n      role=\"link\"\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default FakeAnchor;\n","import { ReactNode, useRef } from 'react';\nimport useOutsideTrigger from '../../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Times from '../Icons/Times/Times';\n\nconst DialogWrapper = ({\n  children,\n  title,\n  onClose,\n  keepOpenOnBlur,\n  size = 'large',\n  isSidePanel = false,\n}: {\n  children: ReactNode;\n  title?: string | ReactNode;\n  onClose?: () => void;\n  keepOpenOnBlur?: boolean;\n  size?: 'large' | 'normal' | '4xlarge' | '2xlarge';\n  isSidePanel?: boolean;\n}) => {\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => !keepOpenOnBlur && onClose && onClose());\n\n  return (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div\n          className={`flex min-h-full ${\n            isSidePanel ? 'justify-end' : 'items-end justify-center sm:items-center'\n          } p-4 text-center sm:p-0`}\n        >\n          <div\n            ref={wrapperRef}\n            className={`relative transform ${\n              !isSidePanel ? 'overflow-hidden rounded-lg shadow-xl' : ''\n            } bg-white text-left  transition-all dark:bg-black sm:w-full ${\n              size === 'normal'\n                ? 'sm:max-w-lg'\n                : size === 'large'\n                ? 'sm:max-w-xl'\n                : size === '2xlarge'\n                ? 'sm:max-w-2xl'\n                : 'sm:max-w-4xl'\n            }`}\n          >\n            <div className=\"bg-white dark:bg-black dark:text-slate-50\">\n              {title || onClose ? (\n                <div className=\"flex flex-row bg-slate-100 px-4 py-4 dark:bg-slate-700 sm:px-8\">\n                  {title ? (\n                    <h3\n                      className=\"my-3 text-2xl font-medium leading-6 text-gray-900 dark:text-slate-50\"\n                      id=\"modal-title\"\n                    >\n                      {title}\n                    </h3>\n                  ) : null}\n                  {onClose ? (\n                    <button onClick={onClose} className=\"ml-auto p-2\">\n                      <Times className=\"h-5 w-5\" />\n                    </button>\n                  ) : null}\n                </div>\n              ) : null}\n              <div className=\"max-h-[calc(100vh-112px)] overflow-y-auto px-4 py-8 sm:max-h-[calc(100vh-10rem)] sm:px-8\">\n                {children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogWrapper;\n","import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import { FC } from 'react';\n\nconst Article: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M456 32h-304C121.1 32 96 57.13 96 88v320c0 13.22-10.77 24-24 24S48 421.2 48 408V112c0-13.25-10.75-24-24-24S0 98.75 0 112v296C0 447.7 32.3 480 72 480h352c48.53 0 88-39.47 88-88v-304C512 57.13 486.9 32 456 32zM464 392c0 22.06-17.94 40-40 40H139.9C142.5 424.5 144 416.4 144 408v-320c0-4.406 3.594-8 8-8h304c4.406 0 8 3.594 8 8V392zM264 272h-64C186.8 272 176 282.8 176 296S186.8 320 200 320h64C277.3 320 288 309.3 288 296S277.3 272 264 272zM408 272h-64C330.8 272 320 282.8 320 296S330.8 320 344 320h64c13.25 0 24-10.75 24-24S421.3 272 408 272zM264 352h-64c-13.25 0-24 10.75-24 24s10.75 24 24 24h64c13.25 0 24-10.75 24-24S277.3 352 264 352zM408 352h-64C330.8 352 320 362.8 320 376s10.75 24 24 24h64c13.25 0 24-10.75 24-24S421.3 352 408 352zM400 112h-192c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h192c17.67 0 32-14.33 32-32v-64C432 126.3 417.7 112 400 112z\" />\n    </svg>\n  );\n};\n\nexport default Article;\n","import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Pencil: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M421.7 220.3L188.5 453.4L154.6 419.5L158.1 416H112C103.2 416 96 408.8 96 400V353.9L92.51 357.4C87.78 362.2 84.31 368 82.42 374.4L59.44 452.6L137.6 429.6C143.1 427.7 149.8 424.2 154.6 419.5L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3zM492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75z\" />\n    </svg>\n  );\n};\n\nexport default Pencil;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Question: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z\" />\n    </svg>\n  );\n};\n\nexport default Question;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC } from 'react';\n\ninterface ShieldProps extends IconProps {\n  fill?: 'currentColor';\n}\n\nconst Shield: FC<ShieldProps> = ({ className, fill }) => {\n  return (\n    <svg\n      fill={fill ?? 'none'}\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={'2'}\n      className={`${className}`}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n    </svg>\n  );\n};\n\nexport default Shield;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  BlogConfig,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  template: ChannelTemplate;\n}\n\nexport const parseChannelTemplate = (templateId: number | undefined) => {\n  return parseInt(templateId + '') === ChannelTemplate.LargeCards\n    ? ChannelTemplate.LargeCards\n    : parseInt(templateId + '') === ChannelTemplate.MasonryLayout\n    ? ChannelTemplate.MasonryLayout\n    : ChannelTemplate.ClassicBlog;\n};\n\nconst useChannels = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinition[] = [];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const entries = entry.filter(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n            BlogConfig.ChannelDefinitionFileType\n        );\n        channels = [\n          ...channels,\n          ...entries.map((entry) => {\n            return { ...entry.payload } as ChannelDefinition;\n          }),\n        ];\n      });\n    }\n\n    if (!channels?.length) {\n      channels = await client.blogPostReadonlyProvider.getChannels();\n    }\n\n    return channels.map((channel) => {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return useQuery(['channels'], () => fetchChannelData(), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","import { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id: string) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem: Element) {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\n  }\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id: string) {\n  const rootElemRef = useRef<Element | null>(null);\n\n  useEffect(\n    function setupElement() {\n      // Look for existing target dom element to append to\n      const existingParent = document.querySelector(`#${id}`);\n      // Parent is either a new root or the existing dom element\n      const parentElem = existingParent || createRootElement(id);\n\n      // If there is no existing DOM element, add a new one.\n      if (!existingParent) {\n        addRootElement(parentElem);\n      }\n\n      if (!rootElemRef?.current) {\n        return;\n      }\n\n      // Add the detached element to the parent\n      parentElem.appendChild(rootElemRef.current);\n\n      return function removeElement() {\n        rootElemRef.current && rootElemRef.current.remove();\n        if (!parentElem.childElementCount) {\n          parentElem.remove();\n        }\n      };\n    },\n    [id]\n  );\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;\n","import { InfiniteData, useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  AccessControlList,\n  ApiType,\n  CoreClient,\n  ImageUploadResult,\n} from '@youfoundation/dotyoucore-js';\nimport {\n  PostFile,\n  PostContent,\n  MultiRequestCursoredResult,\n  getChannelDrive,\n} from '@youfoundation/dotyoucore-js';\nimport BlogPostProvider from '../../../provider/blog/BlogPostProvider';\nimport { PostFileVm } from '../../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst usePost = () => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const savePost = async ({\n    blogFile,\n    channelId,\n  }: {\n    blogFile: PostFile<PostContent>;\n    channelId: string;\n  }) => {\n    const blogPostProvider = BlogPostProvider.getInstance(getSharedSecret());\n    return await blogPostProvider.savePost(blogFile, channelId);\n  };\n\n  const saveFiles = async ({\n    files,\n    acl,\n    channelId,\n  }: {\n    files: File[];\n    acl: AccessControlList;\n    channelId: string;\n  }) => {\n    const coreClient = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n    const targetDrive = getChannelDrive(channelId);\n\n    const imageUploadResults = await Promise.all(\n      files.map(async (file) => {\n        const bytes = new Uint8Array(await file.arrayBuffer());\n        return await coreClient.mediaProvider.uploadImage(\n          targetDrive,\n          undefined,\n          acl,\n          bytes,\n          undefined,\n          file.type\n        );\n      })\n    );\n\n    return imageUploadResults.filter(Boolean) as ImageUploadResult[];\n  };\n\n  return {\n    save: useMutation(savePost, {\n      onSuccess: (_data, variables) => {\n        if (variables.blogFile.content.slug) {\n          queryClient.invalidateQueries(['blog', variables.blogFile.content.slug]);\n        } else {\n          queryClient.invalidateQueries(['blog']);\n        }\n        queryClient.removeQueries(['blogs']);\n\n        //TODO: publishStaticFiles();\n      },\n      onMutate: async (newPost) => {\n        await queryClient.cancelQueries(['social-feeds']);\n\n        // Update section attributes\n        const previousFeed:\n          | InfiniteData<MultiRequestCursoredResult<PostFileVm<PostContent>[]>>\n          | undefined = queryClient.getQueryData(['social-feeds']);\n\n        if (previousFeed) {\n          const newFeed = { ...previousFeed };\n          newFeed.pages[0].results = [\n            {\n              ...newPost.blogFile,\n              dotYouId: window.location.hostname,\n            },\n            ...newFeed.pages[0].results,\n          ];\n\n          queryClient.setQueryData(['social-feeds'], newFeed);\n        }\n\n        return { newPost, previousFeed };\n      },\n      onError: (err, _newCircle, context) => {\n        console.error(err);\n\n        // Revert local caches to what they were\n        queryClient.setQueryData(['social-feeds'], context?.previousFeed);\n      },\n    }),\n    saveFiles: useMutation(saveFiles),\n  };\n};\n\nexport default usePost;\n","import {\n  ProviderOptions,\n  BlogDefinitionProvider,\n  BlogPostReadonlyProvider,\n  DriveProvider,\n  PostContent,\n  PostFile,\n  DataUtil,\n  SecurityGroupType,\n  UploadInstructionSet,\n  UploadFileMetadata,\n  postTypeToTag,\n  BlogConfig,\n  UploadResult,\n  ApiType,\n  DraftTag,\n} from '@youfoundation/dotyoucore-js';\n\ninterface BlostPostProviderOptions extends ProviderOptions {\n  driveProvider: DriveProvider;\n  blogDefinitionProvider: BlogDefinitionProvider;\n}\n\nexport default class BlogPostProvider extends BlogPostReadonlyProvider {\n  private static instance: BlogPostProvider;\n\n  constructor(options: BlostPostProviderOptions) {\n    super({\n      api: options.api,\n      sharedSecret: options.sharedSecret,\n      driveProvider: options.driveProvider,\n      blogDefinitionProvider: options.blogDefinitionProvider,\n    });\n  }\n\n  async savePost<T extends PostContent>(file: PostFile<T>, channelId: string): Promise<string> {\n    if (!file.content.id) {\n      file.content.id = file.content.slug\n        ? DataUtil.toGuidId(file.content.slug)\n        : DataUtil.getNewId();\n    } else if (!file.fileId) {\n      // Check if content.id exists and with which fileId\n      file.fileId = (await this.getPost(channelId, file.content.id))?.fileId ?? undefined;\n    }\n\n    const encrypt = !(\n      file.acl?.requiredSecurityGroup === SecurityGroupType.Anonymous ||\n      file.acl?.requiredSecurityGroup === SecurityGroupType.Authenticated\n    );\n\n    const instructionSet: UploadInstructionSet = {\n      transferIv: this._driveProvider.Random16(),\n      storageOptions: {\n        overwriteFileId: file?.fileId ?? '',\n        drive: this._blogDefinitionProvider.getTargetDrive(channelId),\n      },\n      transitOptions: null,\n    };\n\n    const payloadJson: string = DataUtil.JsonStringify64(file.content);\n    const payloadBytes = DataUtil.stringToUint8Array(payloadJson);\n\n    const uniqueId = file.content.slug ? DataUtil.toGuidId(file.content.slug) : file.content.id;\n\n    // Set max of 3kb for jsonContent so enough room is left for metadata\n    const shouldEmbedContent = payloadBytes.length < 3000;\n    const metadata: UploadFileMetadata = {\n      contentType: 'application/json',\n      appData: {\n        tags: [\n          postTypeToTag('type' in file.content ? file.content.type : 'Article').toString(),\n          file.content.id,\n          ...(uniqueId && uniqueId !== file.content.id ? [uniqueId] : []),\n          ...(file.acl?.requiredSecurityGroup === SecurityGroupType.Owner ? [DraftTag] : []),\n        ],\n        uniqueId: uniqueId,\n        contentIsComplete: shouldEmbedContent,\n        fileType: BlogConfig.PostFileType,\n        jsonContent: shouldEmbedContent ? payloadJson : null,\n        previewThumbnail: file.previewThumbnail,\n      },\n      payloadIsEncrypted: encrypt,\n      accessControlList: file.acl,\n    };\n\n    const result: UploadResult = await this._driveProvider.Upload(\n      instructionSet,\n      metadata,\n      payloadBytes,\n      undefined,\n      encrypt\n    );\n\n    return result.file.fileId;\n  }\n\n  async removePost(fileId: string, channelId: string) {\n    const targetDrive = this._blogDefinitionProvider.getTargetDrive(channelId);\n    this._driveProvider.DeleteFile(targetDrive, fileId);\n  }\n\n  public static getInstance(sharedSecret?: Uint8Array): BlogPostProvider {\n    if (!sharedSecret) {\n      throw new Error('Shared Secret not set for OwnerProvider');\n    }\n\n    if (!BlogPostProvider.instance) {\n      const driveProvider = new DriveProvider({ api: ApiType.Owner, sharedSecret: sharedSecret });\n      const blogDefinitionProvider = new BlogDefinitionProvider({\n        api: ApiType.Owner,\n        sharedSecret: sharedSecret,\n        driveProvider: driveProvider,\n      });\n\n      BlogPostProvider.instance = new BlogPostProvider({\n        api: ApiType.Owner,\n        sharedSecret: sharedSecret,\n        driveProvider: driveProvider,\n\n        blogDefinitionProvider: blogDefinitionProvider,\n      });\n    }\n\n    return BlogPostProvider.instance;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["dotYouId","post","channel","className","size","now","Date","date","dateUnixTime","format","month","day","year","getFullYear","undefined","hour","minute","toLocaleDateString","href","slug","name","title","confirmText","children","needConfirmation","onConfirm","onCancel","target","usePortal","dialog","role","onClick","e","preventDefault","id","type","t","createPortal","GRID_PIXEL_SIZE","IMAGE_SIZE","MIME_TYPE","makeGrid","thumbs","length","Error","blobs","slice","map","thumb","buffer","DataUtil","content","Blob","contentType","Promise","all","imgBlob","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","result","src","imgs","canvas","document","createElement","width","height","context2d","getContext","drawImage","toBlob","blob","arrayBuffer","then","pixelHeight","pixelWidth","Uint8Array","DEFAULT_POST","channelId","BlogConfig","caption","ChannelSelector","React","ref","defaultValue","onChange","useChannels","channels","data","isLoading","find","chnl","value","FileSelector","htmlFor","files","Array","from","accept","multiple","FileOverview","setFiles","renderedFiles","useMemo","currFile","url","URL","createObjectURL","onLoad","revokeObjectURL","icon","filter","file","onPost","usePost","save","savePost","mutateAsync","savePostError","error","saveFiles","saveFilesError","inputRef","useRef","selectRef","useState","setPost","setChannel","state","setState","doPost","uploadResults","acl","imageFileIds","fileId","postId","toPostPost","getTime","primaryImageFileId","requiredSecurityGroup","SecurityGroupType","previewThumbnail","postFile","blogFile","resetUi","current","onSubmit","placeholder","required","ActionLink","Article","Button","ErrorNotification","isCompact","bgClass","Exclamation","Question","isDismissed","setIsDismissed","useEffect","knownErrorMessage","errorCode","console","log","getKnownErrorMessages","response","message","Times","download","Icon","props","fill","colorClasses","widthClasses","indexOf","sizeClasses","require","confirmOptions","isDisabled","Check","Save","Arrow","Plus","Trash","Pencil","Shield","needsConfirmation","setNeedsConfirmation","stateClasses","disabled","ConfirmDialog","buttonText","body","navigate","useNavigate","startsWith","window","location","tabIndex","onClose","keepOpenOnBlur","isSidePanel","wrapperRef","useOutsideTrigger","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","xmlns","parseChannelTemplate","templateId","parseInt","ChannelTemplate","useAuth","getSharedSecret","getApiType","fetchChannelData","client","PublicClient","api","sharedSecret","fileReadOnlyProvider","GetFile","fileData","forEach","entry","entries","possibleChannel","header","fileMetadata","appData","fileType","payload","blogPostReadonlyProvider","getChannels","template","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","rootElemRef","rootElem","existingParent","querySelector","parentElem","rootContainer","setAttribute","createRootElement","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childElementCount","queryClient","useQueryClient","blogPostProvider","BlogPostProvider","coreClient","CoreClient","ApiType","targetDrive","getChannelDrive","bytes","mediaProvider","uploadImage","imageUploadResults","Boolean","useMutation","onSuccess","_data","variables","invalidateQueries","removeQueries","onMutate","newPost","cancelQueries","previousFeed","getQueryData","newFeed","pages","results","hostname","setQueryData","onError","err","_newCircle","context","options","driveProvider","blogDefinitionProvider","this","getPost","encrypt","instructionSet","transferIv","_driveProvider","Random16","storageOptions","overwriteFileId","drive","_blogDefinitionProvider","getTargetDrive","transitOptions","payloadJson","payloadBytes","uniqueId","shouldEmbedContent","metadata","tags","postTypeToTag","toString","DraftTag","contentIsComplete","jsonContent","payloadIsEncrypted","accessControlList","Upload","DeleteFile","instance","DriveProvider","BlogDefinitionProvider","BlogPostReadonlyProvider"],"sourceRoot":""}