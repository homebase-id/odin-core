# here's what to do when we upgrade to dotnet 8:
# https://devblogs.microsoft.com/dotnet/improving-multiplatform-container-support/
# https://github.com/dotnet/dotnet-docker/issues/4388

FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0 AS build
LABEL org.opencontainers.image.source="https://github.com/youfoundation/dotyoucore"
ARG TARGETARCH

WORKDIR /build

# Copy project files for restoring
COPY services/Odin.Core/Odin.Core.csproj services/Odin.Core/
COPY services/Odin.Core.Cryptography/Odin.Core.Cryptography.csproj services/Odin.Core.Cryptography/
COPY services/Odin.Core.Storage/Odin.Core.Storage.csproj services/Odin.Core.Storage/
COPY services/Odin.Core.Services/Odin.Core.Services.csproj services/Odin.Core.Services/
COPY services/Odin.Core.Services.Background/Odin.Core.Services.Background.csproj services/Odin.Core.Services.Background/
COPY services/Odin.Hosting/Odin.Hosting.csproj services/Odin.Hosting/
COPY services/Odin.Cli/Odin.Cli.csproj services/Odin.Cli/

# Restore dependencies
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Core/Odin.Core.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Core.Cryptography/Odin.Core.Cryptography.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Core.Storage/Odin.Core.Storage.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Core.Services/Odin.Core.Services.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Core.Services.Background/Odin.Core.Services.Background.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Hosting/Odin.Hosting.csproj
RUN dotnet restore -a $TARGETARCH --disable-parallel services/Odin.Cli/Odin.Cli.csproj

# Copy the rest for building
COPY services/Odin.Core/ services/Odin.Core/
COPY services/Odin.Core.Cryptography/ services/Odin.Core.Cryptography/
COPY services/Odin.Core.Storage/ services/Odin.Core.Storage/
COPY services/Odin.Core.Services/ services/Odin.Core.Services/
COPY services/Odin.Core.Services.Background/ services/Odin.Core.Services.Background/
COPY services/Odin.Hosting/ services/Odin.Hosting/
COPY services/Odin.Cli/ services/Odin.Cli/

# Build release
RUN dotnet publish --no-restore --warnaserror -a $TARGETARCH --self-contained false services/Odin.Hosting/Odin.Hosting.csproj -c Release -o out/web
RUN dotnet publish --no-restore --warnaserror -a $TARGETARCH --self-contained false services/Odin.Cli/Odin.Cli.csproj -c Release -o out/cli

# Create runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
RUN echo "alias ls='ls --color=auto'" >> ~/.bashrc
RUN echo "alias l='ls -lah'" >> ~/.bashrc
RUN echo "alias ll='ls -lh'" >> ~/.bashrc

RUN apt-get update -q && \
    apt-get install -yq \
    curl \
    less \
    netcat-openbsd \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app/cli
COPY --from=build /build/out/cli .

WORKDIR /app/web
COPY --from=build /build/out/web .

EXPOSE 80
EXPOSE 443

ENV PATH="/app/cli:${PATH}"

ENTRYPOINT ["dotnet", "Odin.Hosting.dll"]
