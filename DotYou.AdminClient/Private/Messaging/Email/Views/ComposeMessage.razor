@using DotYou.AdminClient.Private.Components
@inject HttpClient _http
@inject NavigationManager _nav
@inject AppState _state
@inject IEmailMessageClient _email

<H4>New Message</H4>
<EditForm Model="@sendMessageModel">
    <FormGroup>
        <label>To</label>
        <ContactTypeAhead @ref="recipientsList"></ContactTypeAhead>
    </FormGroup>
    <FormGroup>
        <Input @bind-Value="topic" />
    </FormGroup>
    <FormGroup>

        <BlazoredTextEditor @ref="messageBody">
            <ToolbarContent>
                <select class="ql-header">
                    <option selected=""></option>
                    <option value="1"></option>
                    <option value="2"></option>
                    <option value="3"></option>
                    <option value="4"></option>
                    <option value="5"></option>
                </select>
                <span class="ql-formats">
                    <button class="ql-bold"></button>
                    <button class="ql-italic"></button>
                    <button class="ql-underline"></button>
                    <button class="ql-strike"></button>
                </span>
                <span class="ql-formats">
                    <select class="ql-color"></select>
                    <select class="ql-background"></select>
                </span>
                <span class="ql-formats">
                    <button class="ql-list" value="ordered"></button>
                    <button class="ql-list" value="bullet"></button>
                </span>
                <span class="ql-formats">
                    <button class="ql-link"></button>
                </span>
            </ToolbarContent>
            <EditorContent>

            </EditorContent>
        </BlazoredTextEditor>
    </FormGroup>

    <div style="max-width:100px">
        <Button Size="ButtonSize.Normal" @onclick="@SendMessage">Send</Button>
    </div>
</EditForm>

@code {

    private class SendMessageFormModel
    {
        public string Recipients { get; set; }
        public string Topic { get; set; }
        public string Body { get; set; }
    }

    private bool showToast = false;
    private InputState topic = new InputState()
    {
        Identifier = "topic",
        Label = "Topic",
        Placeholder = "What is this message about?",
    };

    private BlazoredTextEditor messageBody;
    private SendMessageFormModel sendMessageModel { get; set; } = new SendMessageFormModel();

    private ContactTypeAhead recipientsList;
//    private IList<Contact> recipientsList = new List<Contact>();

    protected override void OnInitialized()
    {
    }

    private async void ClearForm()
    {
        recipientsList.ContactList.Clear();
        topic.Value = "";
        await messageBody.LoadHTMLContent("");
    }

    private async void SendMessage()
    {
        string body = await messageBody.GetHTML();
        var recipients = recipientsList.ContactList.Select(c => c.DotYouId.ToString()).ToList();
        
        var message = new Message()
        {
            Id = Guid.NewGuid(),
            Recipients = recipients.Select(r => (DotYouIdentity)r),
            Topic = topic.Value,
            Body = body
        };

        _email.SendMessage(message);
        
        ClearForm();
        StateHasChanged();
    }

}
