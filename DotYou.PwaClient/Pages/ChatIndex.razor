@page "/Chat"
@using DotYou.PwaClient.Pages.Chat
@inject AppUIState _appUiState;

<div class="appHeader bg-primary text-light">
    <div class="left">
        @* <div class="item" @onclick='@HandleMenu'> *@
        @*     <ion-icon name="ellipsis-vertical-outline"></ion-icon> *@
        @* </div> *@
    </div>
    <div class="pageTitle">Contacts</div>
    <div class="right">
        <div class="item" @onclick="@HandleMenu">
            <ion-icon name="ellipsis-vertical-outline"></ion-icon>
        </div>
    </div>
</div>

@if (_currentChatParticipant == null)
{
    <ChatMessageList OnChatPress="@HandleChatMessagePress" OnLongPress="@HandleChatMessageLongPress"/>
}
else
{
    <Chat ParticipantId="@_currentChatParticipant" OnNavigateBackPressed="@HandleChatWindowClosed"/>
}

@code {

    private string _currentChatParticipant = null;

    protected override void OnInitialized()
    {
        _appUiState.BottomTabsVisible = false;
        this.StateHasChanged();
        base.OnInitialized();
    }
    
    private void SwitchChatWindow(string participantId)
    {
        if (string.IsNullOrEmpty(participantId) || string.IsNullOrWhiteSpace(participantId))
        {
            return;
        }

        _currentChatParticipant = participantId;
        this.StateHasChanged();
    }
    
    private void ShowContextMenu(string participantId)
    {
        Console.WriteLine($"Show context menu for {participantId}");
        
    }

    private void HandleChatMessageLongPress(string participantId)
    {
        this.ShowContextMenu(participantId);
    }
    
    private void HandleChatMessagePress(string participantId)
    {
        this.SwitchChatWindow(participantId);
    }
    
    private void HandleChatWindowClosed()
    {
        _currentChatParticipant = null;
        this.StateHasChanged();
    }

    private void HandleMenu()
    {
    }

}