<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
     <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <TypeScriptCompileBlocked>false</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
  </PropertyGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\DotYou.Kernel\DotYou.Kernel.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Dawn.Guard" Version="1.12.0" />
    <PackageReference Include="JsonModelBinder" Version="2.1.1" />
    <PackageReference Include="MagicOnion.Abstractions" Version="4.3.1" />
    <PackageReference Include="MagicOnion.Client" Version="4.3.1" />
    <PackageReference Include="MagicOnion.Server" Version="4.3.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" Version="5.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.8" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="5.0.1" />
    <PackageReference Include="NReco.Logging.File" Version="1.1.1" />
  </ItemGroup>

  <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

  <ItemGroup>
    <None Update="https\local.youfoundation.id\ca_bundle.crt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\local.youfoundation.id\certificate.crt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\local.youfoundation.id\private.key">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\samwisegamgee.me\private.key">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\frodobaggins.me\certificate.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\frodobaggins.me\fullchain.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\frodobaggins.me\private.key">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\gandalf.middleearth.life\certificate.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\gandalf.middleearth.life\fullchain.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\gandalf.middleearth.life\private.key">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\samwisegamgee.me\certificate.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\youfoundation.id\certificate.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\youfoundation.id\fullchain.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="https\youfoundation.id\private.key">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="identityweb.service">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="ClientApp\package-lock.json" />
    <None Include="ClientApp\package.json" />
    <None Include="ClientApp\public\manifest.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\public\assets\unknown.png" />
    <Content Include="Properties\PublishProfiles\FTPProfile.pubxml.user" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="wwwroot\assets\unknown.png" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\assets" />
  </ItemGroup>

</Project>
