name: Full Docker Release

on:
  workflow_dispatch:
  push:
    branches: [ release-docker ]
#  pull_request:
#    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@octocat'

      - name: Checkout dotyoucore
        uses: actions/checkout@v3
        with:
          path: dotyoucore

      - name: Checkout owner-app
        uses: actions/checkout@v3
        with:
          repository: YouFoundation/owner-app
          token: ${{ secrets.DOTYOUCORE_LIB_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: client/owner-app

      - name: Checkout public-app
        uses: actions/checkout@v3
        with:
          repository: YouFoundation/public-app
          token: ${{ secrets.DOTYOUCORE_LIB_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: client/public-app

      - name: Checkout provisioning-app
        uses: actions/checkout@v3
        with:
          repository: YouFoundation/provisioning-app
          token: ${{ secrets.DOTYOUCORE_LIB_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: client/provisioning-app

      - name: Authenticate to Github packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > client/owner-app/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > client/public-app/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > client/provisioning-app/.npmrc

      - name: Build owner-app
        working-directory: ./client/owner-app
        run: |
          npm ci
          touch .env
          echo REACT_APP_VERSION=$(date +%s) >> .env
          npm run build
          rm -rf ../../dotyoucore/services/Youverse.Hosting/client/owner-app
          mv build ../../dotyoucore/services/Youverse.Hosting/client/owner-app

      - name: Build public-app
        working-directory: ./client/public-app
        run: |
          npm ci
          touch .env
          echo REACT_APP_VERSION=$(date +%s) >> .env
          npm run build
          rm -rf ../../dotyoucore/services/Youverse.Hosting/client/public-app
          mv build ../../dotyoucore/services/Youverse.Hosting/client/public-app

      - name: Build provisioning-app
        working-directory: ./client/provisioning-app
        run: |
          npm ci
          touch .env
          echo REACT_APP_VERSION=$(date +%s) >> .env
          npm run build
          rm -rf ../../dotyoucore/services/Youverse.Hosting/client/provisioning-app
          mv build ../../dotyoucore/services/Youverse.Hosting/client/provisioning-app

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./dotyoucore
          file: ./dotyoucore/services/Youverse.Hosting/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
