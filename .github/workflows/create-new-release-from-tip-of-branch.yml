name: Create new release from tip of branch

on:
  workflow_dispatch:
    # inputs:
    #   reason:
    #     description: "Reason for manual run"
    #     required: true
    #     default: "Just because"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NEW_VERSION_TAG: 'overwritten-below'
  IMAGE_TAGS: 'overwritten-below'

jobs:
  tag-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history so we can see all tags
          path: dotyoucore

      - name: Execute versioning script
        working-directory: dotyoucore
        run: |
          output=$(./.github/scripts/increment-version-tag-on-git-tip.sh)
          echo "Tagging output: $output"
          echo "NEW_VERSION_TAG=${output}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@octocat'

      - name: Checkout dotyoucorejs monorepo
        uses: actions/checkout@v3
        with:
          repository: YouFoundation/dotyoucore-js
          token: ${{ secrets.DOTYOUCORE_LIB_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: client/apps

      - name: Authenticate to Github packages
        working-directory: ./client/apps
        run: |
          echo "@youfoundation:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: Build libs & setup .env
        working-directory: ./client/apps
        run: |
          npm ci
          npm run build:libs
          touch packages/public-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/public-app/.env
          touch packages/owner-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/owner-app/.env
          touch packages/feed-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/feed-app/.env
          touch packages/chat-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/chat-app/.env
          touch packages/mail-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/mail-app/.env
          touch packages/provisioning-app/.env
          echo VITE_VERSION=$(date +%s) >> packages/provisioning-app/.env

      - name: Build owner-app
        working-directory: ./client/apps
        run: |
          npm run build:owner
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/owner-app
          mv packages/owner-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/owner-app

      - name: Build public-app
        working-directory: ./client/apps
        run: |
          npm run build:public
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/public-app
          mv packages/public-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/public-app

      - name: Build feed-app
        working-directory: ./client/apps
        run: |
          npm run build:feed
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/apps/feed
          mv packages/feed-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/apps/feed

      - name: Build chat-app
        working-directory: ./client/apps
        run: |
          npm run build:chat
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/apps/chat
          mv packages/chat-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/apps/chat

      - name: Build mail-app
        working-directory: ./client/apps
        run: |
          npm run build:mail
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/apps/mail
          mv packages/mail-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/apps/mail

      - name: Build provisioning-app
        working-directory: ./client/apps
        run: |
          npm run build:provisioning
          rm -rf ../../dotyoucore/src/apps/Odin.Hosting/client/provisioning-app
          mv packages/provisioning-app/dist ../../dotyoucore/src/apps/Odin.Hosting/client/provisioning-app

      #
      # Build Docker image
      #
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Combine Docker tags
        run: |
          lowercase_image_tags=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NEW_VERSION_TAG }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_TAGS=$lowercase_image_tags" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./dotyoucore
          file: ./dotyoucore/docker/Dockerfile-identity-host
          push: true
          tags: ${{ env.IMAGE_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=homebase.id
