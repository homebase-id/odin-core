name: "Host: Build and deploy branch to environment"

on:
  workflow_dispatch:
    inputs:
      env_choice:
        type: choice
        required: true
        description: "Environment"
        options:
        - bleeding_edge
        - sandbox
      fe_ref:
        description: "Frontend branch/commit to include"
        required: true
        default: "main"
      start_choice:
        type: choice
        required: true
        description: "Start container"
        options:
        - 'true'
        - 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-internal

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Log all workflow inputs and current branch
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $BRANCH_NAME"
          echo "Workflow inputs as JSON: $INPUTS"
        env:
          INPUTS: ${{ toJson(github.event.inputs) }}
          GITHUB_REF: ${{ github.ref }}    

      - name: Checkout Repository
        uses: actions/checkout@v4 
        with:
          path: odin-core

      - name: Only allow main branch
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Error: Workflow must run on 'main' branch. Current ref: ${{ github.ref }}"
          exit 1          

      #
      # Build Frontend
      #

      - name: Build frontend
        uses: ./odin-core/.github/actions/host/build-frontend
        with:
          odin_lib_token: ${{ secrets.DOTYOUCORE_LIB_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_ref: ${{ github.event.inputs.fe_ref }}

      #
      # Build docker image
      #

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Combine Docker tags
        run: |
          lowercase_image_tags=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}__${{ github.event.inputs.fe_ref }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_WITH_TAG=$lowercase_image_tags" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: ./odin-core
          file: ./odin-core/docker/Dockerfile-identity-host
          push: true
          tags: ${{ env.IMAGE_WITH_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=homebase.id

      #
      # Deploy docker image
      #

      - name: Deploy Docker Image    
        uses: ./odin-core/.github/actions/host/deploy-image-to-environment
        with:
          image_name: ${{ env.IMAGE_WITH_TAG }}
          env_name: ${{ github.event.inputs.env_choice }}
          force_update: 'true'
          start_container: ${{ github.event.inputs.start_choice }}
          ansible_host: ${{ secrets.ANSIBLE_HOST }}
          ansible_username: ${{ secrets.ANSIBLE_USERNAME }}
          ansible_ssh_key: ${{ secrets.ANSIBLE_SSH_KEY }}


