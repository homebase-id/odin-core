name: "Host: Build frontend"
description: "Buid frontend code"
inputs:
  odin_lib_token:
    description: "Github token for odin-js repo"
    required: true
  github_token:
    description: "Github token for package repo"
    required: true
  git_ref:
    description: "Branch or commit to build frontend from"
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Setup Node
      uses: actions/setup-node@v4.0.2
      with:
        node-version: "20.x"
        registry-url: "https://npm.pkg.github.com"

    - name: Checkout odin-js monorepo
      uses: actions/checkout@v4
      with:
        repository: homebase-id/odin-js
        token: ${{ inputs.odin_lib_token }}
        ref: ${{ inputs.git_ref }}
        path: client/apps

    - name: Authenticate to Github packages
      shell: bash
      working-directory: ./client/apps
      run: |
        echo "@homebase-id:registry=https://npm.pkg.github.com" > .npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ inputs.github_token }}" >> .npmrc

    - name: Build libs & setup .env
      shell: bash
      working-directory: ./client/apps
      run: |
        npm ci
        npm run build:libs
        touch packages/public-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/public-app/.env
        touch packages/owner-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/owner-app/.env
        touch packages/feed-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/feed-app/.env
        touch packages/chat-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/chat-app/.env
        touch packages/mail-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/mail-app/.env
        touch packages/provisioning-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/provisioning-app/.env
        touch packages/community-app/.env
        echo VITE_VERSION=$(date +%s) >> packages/community-app/.env

    - name: Build owner-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:owner
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/owner-app
        mv packages/owner-app/dist ../../odin-core/src/apps/Odin.Hosting/client/owner-app

    - name: Build public-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:public
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/public-app
        mv packages/public-app/dist ../../odin-core/src/apps/Odin.Hosting/client/public-app

    - name: Build feed-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:feed
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/apps/feed
        mv packages/feed-app/dist ../../odin-core/src/apps/Odin.Hosting/client/apps/feed

    - name: Build chat-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:chat
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/apps/chat
        mv packages/chat-app/dist ../../odin-core/src/apps/Odin.Hosting/client/apps/chat

    - name: Build mail-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:mail
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/apps/mail
        mv packages/mail-app/dist ../../odin-core/src/apps/Odin.Hosting/client/apps/mail

    - name: Build community-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:community
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/community
        mv packages/community-app/dist ../../odin-core/src/apps/Odin.Hosting/client/community

    - name: Build provisioning-app
      shell: bash
      working-directory: ./client/apps
      run: |
        npm run build:provisioning
        rm -rf ../../odin-core/src/apps/Odin.Hosting/client/provisioning-app
        mv packages/provisioning-app/dist ../../odin-core/src/apps/Odin.Hosting/client/provisioning-app
