{"ast":null,"code":"export const convertTextToSlug = text => {\n  return text.replaceAll(/[^a-z0-9 ]/gi, '').split(' ').join('-').toLowerCase();\n};\nexport const stringify = obj => {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n};\nexport const getVersion = () => {\n  try {\n    var _process$env$REACT_AP;\n\n    const numberedVersion = parseInt((_process$env$REACT_AP = process.env.REACT_APP_VERSION) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '');\n\n    if (isNaN(numberedVersion)) {\n      return process.env.REACT_APP_VERSION;\n    }\n\n    const t = new Date(1970, 0, 1); // Epoch\n\n    t.setSeconds(numberedVersion);\n    return `${t.toLocaleDateString()} ${t.toLocaleTimeString()}`;\n  } catch (ex) {\n    console.error(ex);\n    return process.env.REACT_APP_VERSION;\n  }\n}; // Flattens all pages, sorts descending and slice on the max number expected\n\nexport const flattenInfinteData = (rawData, pageSize, sortFn) => {\n  return rawData === null || rawData === void 0 ? void 0 : rawData.pages.flatMap(page => page === null || page === void 0 ? void 0 : page.results).filter(post => !!post).sort(sortFn).slice(0, (rawData === null || rawData === void 0 ? void 0 : rawData.pages.length) * pageSize);\n};","map":{"version":3,"names":["convertTextToSlug","text","replaceAll","split","join","toLowerCase","stringify","obj","Object","keys","map","key","getVersion","numberedVersion","parseInt","process","env","REACT_APP_VERSION","isNaN","t","Date","setSeconds","toLocaleDateString","toLocaleTimeString","ex","console","error","flattenInfinteData","rawData","pageSize","sortFn","pages","flatMap","page","results","filter","post","sort","slice","length"],"sources":["/Users/toddmitchell/src/youfoundation/dyc/dotyoucore/Youverse.Provisioning/ClientApp/src/helpers/common.ts"],"sourcesContent":["import { InfiniteData } from '@tanstack/react-query';\n\nexport const convertTextToSlug = (text: string) => {\n  return text\n    .replaceAll(/[^a-z0-9 ]/gi, '')\n    .split(' ')\n    .join('-')\n    .toLowerCase();\n};\n\nexport const stringify = (obj: Record<string, unknown>) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n\nexport const getVersion = () => {\n  try {\n    const numberedVersion = parseInt(process.env.REACT_APP_VERSION ?? '');\n    if (isNaN(numberedVersion)) {\n      return process.env.REACT_APP_VERSION;\n    }\n\n    const t = new Date(1970, 0, 1); // Epoch\n    t.setSeconds(numberedVersion);\n    return `${t.toLocaleDateString()} ${t.toLocaleTimeString()}`;\n  } catch (ex) {\n    console.error(ex);\n    return process.env.REACT_APP_VERSION;\n  }\n};\n\n// Flattens all pages, sorts descending and slice on the max number expected\nexport const flattenInfinteData = <T>(\n  rawData:\n    | InfiniteData<{\n        results: T[];\n        cursorState: unknown;\n      }>\n    | undefined,\n  pageSize: number,\n  sortFn: (a: T, b: T) => number\n) => {\n  return rawData?.pages\n    .flatMap((page) => page?.results)\n    .filter((post) => !!post)\n    .sort(sortFn)\n    .slice(0, rawData?.pages.length * pageSize) as T[];\n};\n"],"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAIC,IAAD,IAAkB;EACjD,OAAOA,IAAI,CACRC,UADI,CACO,cADP,EACuB,EADvB,EAEJC,KAFI,CAEE,GAFF,EAGJC,IAHI,CAGC,GAHD,EAIJC,WAJI,EAAP;AAKD,CANM;AAQP,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAkC;EACzD,OAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EACJG,GADI,CACCC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYJ,GAAG,CAACI,GAAD,CADxB,EAEJP,IAFI,CAEC,GAFD,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,UAAU,GAAG,MAAM;EAC9B,IAAI;IAAA;;IACF,MAAMC,eAAe,GAAGC,QAAQ,0BAACC,OAAO,CAACC,GAAR,CAAYC,iBAAb,yEAAkC,EAAlC,CAAhC;;IACA,IAAIC,KAAK,CAACL,eAAD,CAAT,EAA4B;MAC1B,OAAOE,OAAO,CAACC,GAAR,CAAYC,iBAAnB;IACD;;IAED,MAAME,CAAC,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAV,CANE,CAM8B;;IAChCD,CAAC,CAACE,UAAF,CAAaR,eAAb;IACA,OAAQ,GAAEM,CAAC,CAACG,kBAAF,EAAuB,IAAGH,CAAC,CAACI,kBAAF,EAAuB,EAA3D;EACD,CATD,CASE,OAAOC,EAAP,EAAW;IACXC,OAAO,CAACC,KAAR,CAAcF,EAAd;IACA,OAAOT,OAAO,CAACC,GAAR,CAAYC,iBAAnB;EACD;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMU,kBAAkB,GAAG,CAChCC,OADgC,EAOhCC,QAPgC,EAQhCC,MARgC,KAS7B;EACH,OAAOF,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEG,KAAT,CACJC,OADI,CACKC,IAAD,IAAUA,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEC,OADpB,EAEJC,MAFI,CAEIC,IAAD,IAAU,CAAC,CAACA,IAFf,EAGJC,IAHI,CAGCP,MAHD,EAIJQ,KAJI,CAIE,CAJF,EAIK,CAAAV,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,KAAT,CAAeQ,MAAf,IAAwBV,QAJ7B,CAAP;AAKD,CAfM"},"metadata":{},"sourceType":"module"}