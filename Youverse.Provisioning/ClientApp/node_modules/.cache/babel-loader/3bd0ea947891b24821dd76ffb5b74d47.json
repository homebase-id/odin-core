{"ast":null,"code":"var _jsxFileName = \"/Users/toddmitchell/src/youfoundation/dyc/dotyoucore/Youverse.Provisioning/ClientApp/src/templates/ProvisionTest/ProvisionTest.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { ScreenStatus } from './ScreenStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  domainPrefix: 'tao.nahs',\n  domainSuffix: '.truvian.id',\n  screenStatus: ScreenStatus.EnterDomain,\n  reservation: null,\n  registrationId: null,\n  statusText: '',\n  managedDomains: [],\n  firstRunToken: null\n};\nlet pollingCounter = 0;\nexport default class ProvisionTest extends Component {\n  componentDidMount() {\n    this.getManagedDomains();\n  }\n\n  constructor(props) {\n    super(props);\n    this.root = '//' + window.location.host + '/api/v1';\n    this.state = defaultState; //should have used autobind\n\n    this.handlePrefixChange = this.handlePrefixChange.bind(this);\n    this.handleSuffixChange = this.handleSuffixChange.bind(this);\n    this.handleReserve = this.handleReserve.bind(this);\n    this.startRegistration = this.startRegistration.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleAxiosError = this.handleAxiosError.bind(this);\n    this.startPolling = this.startPolling.bind(this);\n    this.stopPolling = this.stopPolling.bind(this);\n    this.finalizeRegistration = this.finalizeRegistration.bind(this);\n  }\n\n  handleReset() {\n    this.setState(defaultState);\n  }\n\n  handlePrefixChange(event) {\n    let prefix = event.target.value.trimEnd();\n    this.setState({\n      domainPrefix: prefix\n    });\n  }\n\n  handleSuffixChange(event) {\n    this.setState({\n      domainSuffix: event.target.value\n    });\n  }\n\n  getDomain() {\n    return this.state.domainPrefix + this.state.domainSuffix;\n  }\n\n  async handleReserve(event) {\n    let domain = this.getDomain();\n    let isAvailableUrl = this.root + '/registration/availability/' + domain;\n    let response = await axios.get(isAvailableUrl).catch(this.handleAxiosError);\n    this.setState({\n      statusText: 'Checking Availability...'\n    });\n\n    if (response.data === false) {\n      this.setState({\n        statusText: 'Not available ლ(ಠ益ಠლ)'\n      });\n      this.forceUpdate();\n      return;\n    }\n\n    let url = this.root + '/registration/reservations';\n    let data = {\n      domainName: domain //\"previousReservationId\": \"\"  //must be a valid guid or not included in the payload\n\n    };\n    this.setState({\n      statusText: 'submitting reservation...',\n      screenStatus: ScreenStatus.Reserving\n    });\n    axios.post(url, data).then(response => {\n      console.log('reservation', response.data);\n      this.setState({\n        reservation: response.data,\n        statusText: 'Reservation Successful',\n        screenStatus: ScreenStatus.ReadyToRegister\n      });\n    }).catch(this.handleAxiosError);\n  }\n\n  startRegistration() {\n    this.setState({\n      statusText: 'Starting Registration...',\n      screenStatus: ScreenStatus.RegistrationInProgress\n    });\n    let url = this.root + '/registration';\n    let data = {\n      domainName: this.getDomain(),\n      registrationInfo: {\n        reservationId: this.state.reservation.id\n      }\n    };\n    axios.post(url, data).then(response => {\n      this.setState({\n        statusText: 'Polling for certificate creation ever one sec',\n        screenStatus: ScreenStatus.PollingForCertificate,\n        firstRunToken: response.data\n      });\n    }).catch(this.handleAxiosError);\n    this.startPolling();\n  }\n\n  startPolling() {\n    this.timer = setInterval(() => this.poll(), 5000);\n  }\n\n  poll() {\n    pollingCounter++;\n    this.setState({\n      statusText: 'Polling Registration...' + pollingCounter\n    });\n    let data = {\n      domainName: this.getDomain(),\n      firstRunToken: this.state.firstRunToken\n    };\n    let url = this.root + '/registration/status';\n    axios.post(url, data).then(response => {\n      let regStatus = response.data; // public enum RegistrationStatus\n      // {\n      //     Unknown = 0,\n      //     AwaitingCertificate = 100,\n      //     ReadyForPassword = 200\n      // }\n\n      const Unknown = 0;\n      const AwaitingCertificate = 100;\n      const ReadyForPassword = 200;\n\n      if (regStatus.status === ReadyForPassword) {\n        this.stopPolling();\n        this.finalizeRegistration();\n      }\n\n      if (regStatus.status === Unknown) {\n        this.stopPolling();\n        this.setState({\n          statusText: 'Unknown status returned',\n          screenStatus: ScreenStatus.RegistrationFailed\n        });\n      }\n    }).catch(this.handleAxiosError);\n  }\n\n  stopPolling() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  finalizeRegistration() {\n    this.setState({\n      statusText: 'Ready to set your password',\n      screenStatus: ScreenStatus.ReadyForPassword\n    });\n  }\n\n  getManagedDomains() {\n    let url = this.root + '/config/domains';\n    axios.get(url).then(response => {\n      this.setState({\n        managedDomains: response.data\n      });\n    }).catch(this.handleAxiosError);\n  }\n\n  handleAxiosError(error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      this.setState({\n        statusText: 'Unhandled Error occured.  Response Status: [' + error.response.status + '].  See the console for more.',\n        screenStatus: ScreenStatus.UnhandledError\n      });\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n      this.setState({\n        statusText: 'Failed: Request sent but no response received.  (this can happen when server exception occurs before the CORS header can be sent back). See the console.',\n        screenStatus: ScreenStatus.UnhandledError\n      });\n    } else {\n      this.setState({\n        statusText: \"Something happened before sending the request.  Validate how you're setting up the request.\",\n        screenStatus: ScreenStatus.UnhandledError\n      }); // Something happened in setting up the request that triggered an Error\n\n      console.log('Error', error.message);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        minHeight: '100%'\n      },\n      className: \" flex-column align-items-center justify-content-around text-center align-middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-6\",\n          children: \"Test Provisioning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.getDomain()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), this.state.screenStatus === ScreenStatus.EnterDomain && /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Domain Prefix\\xA0\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.domainPrefix,\n              size: 20,\n              onChange: this.handlePrefixChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: this.handleSuffixChange,\n              children: this.state.managedDomains.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"{d}\",\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.handleReserve,\n            value: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.Reserving && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: \"Reserving domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.ReadyToRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.startRegistration,\n            value: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.RegistrationInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registration in progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: this.state.statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 4\n            },\n            children: \"\\u1559(\\u21C0\\u2038\\u21BC\\u2036)\\u1557\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.PollingForCertificate && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registration in progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: this.state.statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 4\n            },\n            children: \"(-_-)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.ReadyForPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Password is next...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: this.state.statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 4\n            },\n            children: \" \\u1566(\\xF2_\\xF3\\u02C7)\\u1564\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Your new identity: \", this.getDomain()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://${this.getDomain()}/owner/firstrun?id=${this.state.firstRunToken}`,\n            children: [\"Click here to continue to \", this.getDomain(), \" and set your password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.RegistrationFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registration Failed =(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: this.state.statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 4\n            },\n            children: \" \\xAF\\\\_(\\u2299\\uFE3F\\u2299)_/\\xAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.handleReset,\n            value: \"Try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this), this.state.screenStatus === ScreenStatus.UnhandledError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Unhandled Error - See server log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: this.state.statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 4\n            },\n            children: \" \\xAF\\\\_(\\u2299\\uFE3F\\u2299)_/\\xAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.handleReset,\n            value: \"Try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","axios","ScreenStatus","defaultState","domainPrefix","domainSuffix","screenStatus","EnterDomain","reservation","registrationId","statusText","managedDomains","firstRunToken","pollingCounter","ProvisionTest","componentDidMount","getManagedDomains","constructor","props","root","window","location","host","state","handlePrefixChange","bind","handleSuffixChange","handleReserve","startRegistration","handleReset","handleAxiosError","startPolling","stopPolling","finalizeRegistration","setState","event","prefix","target","value","trimEnd","getDomain","domain","isAvailableUrl","response","get","catch","data","forceUpdate","url","domainName","Reserving","post","then","console","log","ReadyToRegister","RegistrationInProgress","registrationInfo","reservationId","id","PollingForCertificate","timer","setInterval","poll","regStatus","Unknown","AwaitingCertificate","ReadyForPassword","status","RegistrationFailed","clearInterval","error","headers","UnhandledError","request","message","render","height","minHeight","map","d","flexDirection","padding"],"sources":["/Users/toddmitchell/src/youfoundation/dyc/dotyoucore/Youverse.Provisioning/ClientApp/src/templates/ProvisionTest/ProvisionTest.js"],"sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {ScreenStatus} from './ScreenStatus';\n\nconst defaultState = {\n    domainPrefix: 'tao.nahs',\n    domainSuffix: '.truvian.id',\n    screenStatus: ScreenStatus.EnterDomain,\n    reservation: null,\n    registrationId: null,\n    statusText: '',\n    managedDomains: [],\n    firstRunToken: null\n};\n\nlet pollingCounter = 0;\n\nexport default class ProvisionTest extends Component {\n    root = '//' + window.location.host + '/api/v1';\n\n    componentDidMount() {\n        this.getManagedDomains();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = defaultState;\n\n        //should have used autobind\n        this.handlePrefixChange = this.handlePrefixChange.bind(this);\n        this.handleSuffixChange = this.handleSuffixChange.bind(this);\n        this.handleReserve = this.handleReserve.bind(this);\n        this.startRegistration = this.startRegistration.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleAxiosError = this.handleAxiosError.bind(this);\n\n        this.startPolling = this.startPolling.bind(this);\n        this.stopPolling = this.stopPolling.bind(this);\n        this.finalizeRegistration = this.finalizeRegistration.bind(this);\n    }\n\n    handleReset() {\n        this.setState(defaultState);\n    }\n\n    handlePrefixChange(event) {\n        let prefix = event.target.value.trimEnd();\n        this.setState({domainPrefix: prefix});\n    }\n\n    handleSuffixChange(event) {\n        this.setState({domainSuffix: event.target.value});\n    }\n\n    getDomain() {\n        return this.state.domainPrefix + this.state.domainSuffix;\n    }\n\n    async handleReserve(event) {\n        let domain = this.getDomain();\n\n        let isAvailableUrl = this.root + '/registration/availability/' + domain;\n        let response = await axios.get(isAvailableUrl).catch(this.handleAxiosError);\n\n        this.setState({\n            statusText: 'Checking Availability...',\n        });\n\n        if (response.data === false) {\n            this.setState({\n                statusText: 'Not available ლ(ಠ益ಠლ)',\n            });\n\n            this.forceUpdate();\n            return;\n        }\n\n        let url = this.root + '/registration/reservations';\n        let data = {\n            domainName: domain,\n            //\"previousReservationId\": \"\"  //must be a valid guid or not included in the payload\n        };\n\n        this.setState({\n            statusText: 'submitting reservation...',\n            screenStatus: ScreenStatus.Reserving,\n        });\n\n        axios\n            .post(url, data)\n            .then((response) => {\n                console.log('reservation', response.data);\n                this.setState({\n                    reservation: response.data,\n                    statusText: 'Reservation Successful',\n                    screenStatus: ScreenStatus.ReadyToRegister,\n                });\n            })\n            .catch(this.handleAxiosError);\n    }\n\n    startRegistration() {\n        this.setState({\n            statusText: 'Starting Registration...',\n            screenStatus: ScreenStatus.RegistrationInProgress,\n        });\n\n        let url = this.root + '/registration';\n        let data = {\n            domainName: this.getDomain(),\n            registrationInfo: {\n                reservationId: this.state.reservation.id,\n            },\n        };\n\n        axios\n            .post(url, data)\n            .then((response) => {\n                this.setState({\n                    statusText: 'Polling for certificate creation ever one sec',\n                    screenStatus: ScreenStatus.PollingForCertificate,\n                    firstRunToken: response.data,\n                });\n            })\n            .catch(this.handleAxiosError);\n\n        this.startPolling();\n    }\n\n    startPolling() {\n        this.timer = setInterval(() => this.poll(), 5000);\n    }\n    \n    poll() {\n        pollingCounter++;\n        this.setState({\n            statusText: 'Polling Registration...' + pollingCounter,\n        });\n\n        let data = {\n            domainName: this.getDomain(),\n            firstRunToken: this.state.firstRunToken\n        };\n\n        let url = this.root + '/registration/status';\n        \n        axios\n            .post(url, data)\n            .then((response) => {\n                let regStatus = response.data;\n\n                // public enum RegistrationStatus\n                // {\n                //     Unknown = 0,\n                //     AwaitingCertificate = 100,\n                //     ReadyForPassword = 200\n                // }\n\n                const Unknown = 0;\n                const AwaitingCertificate = 100;\n                const ReadyForPassword = 200;\n\n                if (regStatus.status === ReadyForPassword) {\n                    this.stopPolling();\n                    this.finalizeRegistration();\n                }\n\n                if (regStatus.status === Unknown) {\n                    this.stopPolling();\n                    this.setState({\n                        statusText: 'Unknown status returned',\n                        screenStatus: ScreenStatus.RegistrationFailed,\n                    });\n                }\n            })\n            .catch(this.handleAxiosError);\n    }\n\n    stopPolling() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n\n    finalizeRegistration() {\n        this.setState({\n            statusText: 'Ready to set your password',\n            screenStatus: ScreenStatus.ReadyForPassword,\n        });\n    }\n\n    getManagedDomains() {\n        let url = this.root + '/config/domains';\n\n        axios\n            .get(url)\n            .then((response) => {\n                this.setState({\n                    managedDomains: response.data,\n                });\n            })\n            .catch(this.handleAxiosError);\n    }\n\n    handleAxiosError(error) {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            this.setState({\n                statusText:\n                    'Unhandled Error occured.  Response Status: [' +\n                    error.response.status +\n                    '].  See the console for more.',\n                screenStatus: ScreenStatus.UnhandledError,\n            });\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n\n            this.setState({\n                statusText:\n                    'Failed: Request sent but no response received.  (this can happen when server exception occurs before the CORS header can be sent back). See the console.',\n                screenStatus: ScreenStatus.UnhandledError,\n            });\n        } else {\n            this.setState({\n                statusText:\n                    \"Something happened before sending the request.  Validate how you're setting up the request.\",\n                screenStatus: ScreenStatus.UnhandledError,\n            });\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', error.message);\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{height: '100%', minHeight: '100%'}}\n                className=\" flex-column align-items-center justify-content-around text-center align-middle\"\n            >\n                <div className=\"pt-5\">\n                    <h1 className=\"display-6\">Test Provisioning</h1>\n                    <hr/>\n\n                    <h4>{this.getDomain()}</h4>\n\n                    {this.state.screenStatus === ScreenStatus.EnterDomain && (\n                        <form>\n                            <label>\n                                Domain Prefix&nbsp;{' '}\n                                <input\n                                    type=\"text\"\n                                    value={this.state.domainPrefix}\n                                    size={20}\n                                    onChange={this.handlePrefixChange}\n                                />{' '}\n                            </label>\n                            <label>\n                                <select onChange={this.handleSuffixChange}>\n                                    {this.state.managedDomains.map((d) => (\n                                        <option key={d} value=\"{d}\">\n                                            {d}\n                                        </option>\n                                    ))}\n                                </select>{' '}\n                            </label>\n                            <input type=\"button\" onClick={this.handleReserve} value=\"Go\"/>\n                        </form>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.Reserving && (\n                        <div style={{flexDirection: 'column'}}>Reserving domain</div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.ReadyToRegister && (\n                        <div style={{flexDirection: 'column'}}>\n                            <input type=\"button\" onClick={this.startRegistration} value=\"Register\"/>\n                        </div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.RegistrationInProgress && (\n                        <div style={{flexDirection: 'column'}}>\n                            <h3>Registration in progress</h3>\n                            <h6>{this.state.statusText}</h6>\n                            <div style={{padding: 4}}>ᕙ(⇀‸↼‶)ᕗ</div>\n                        </div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.PollingForCertificate && (\n                        <div style={{flexDirection: 'column'}}>\n                            <h3>Registration in progress</h3>\n                            <h6>{this.state.statusText}</h6>\n                            <div style={{padding: 4}}>(-_-)</div>\n                        </div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.ReadyForPassword && (\n                        <div style={{flexDirection: 'column'}}>\n                            <h3>Password is next...</h3>\n                            <h6>{this.state.statusText}</h6>\n                            <div style={{padding: 4}}> ᕦ(ò_óˇ)ᕤ</div>\n                            <h2>Your new identity: {this.getDomain()}</h2>\n\n                            <a href={`http://${this.getDomain()}/owner/firstrun?id=${this.state.firstRunToken}`}>\n                                Click here to continue to {this.getDomain()} and set your password\n                            </a>\n                        </div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.RegistrationFailed && (\n                        <div style={{flexDirection: 'column'}}>\n                            <h3>Registration Failed =(</h3>\n                            <h6>{this.state.statusText}</h6>\n                            <div style={{padding: 4}}> ¯\\_(⊙︿⊙)_/¯</div>\n                            <input type=\"button\" onClick={this.handleReset} value=\"Try again\"/>\n                        </div>\n                    )}\n\n                    {this.state.screenStatus === ScreenStatus.UnhandledError && (\n                        <div style={{flexDirection: 'column'}}>\n                            <h3>Unhandled Error - See server log</h3>\n                            <h6>{this.state.statusText}</h6>\n\n                            <div style={{padding: 4}}> ¯\\_(⊙︿⊙)_/¯</div>\n                            <input type=\"button\" onClick={this.handleReset} value=\"Try again\"/>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}