{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMutation } from '@tanstack/react-query';\nimport axios from 'axios';\n\nconst useDomain = () => {\n  _s();\n\n  const root = '//' + window.location.host + '/api/v1';\n\n  const reserveDomain = async _ref => {\n    let {\n      domain\n    } = _ref;\n    let isAvailableUrl = root + '/registration/availability/' + domain;\n    let isAvailable = await axios.get(isAvailableUrl).then(response => response.data);\n\n    if (!isAvailable) {\n      return false;\n    }\n\n    let url = root + '/registration/reservations';\n    let data = {\n      domainName: domain //\"previousReservationId\": \"\"  //must be a valid guid or not included in the payload\n\n    };\n    const reserveResponse = await axios.post(url, data).then(response => response.data);\n    return reserveResponse.id;\n  };\n\n  const registerDomain = async _ref2 => {\n    let {\n      domain,\n      reservationId\n    } = _ref2;\n    let url = root + '/registration';\n    let data = {\n      domainName: domain,\n      registrationInfo: {\n        reservationId: reservationId\n      }\n    };\n    const response = await axios.post(url, data).then(response => response.data);\n    return response;\n  };\n\n  return {\n    reserve: useMutation(reserveDomain, {\n      onError: ex => {\n        console.error(ex);\n      }\n    }),\n    register: useMutation(registerDomain, {\n      onError: ex => {\n        console.error(ex);\n      }\n    })\n  };\n};\n\n_s(useDomain, \"eOg58rAe5ZQ1hfOTAe/rlckTgDw=\", false, function () {\n  return [useMutation, useMutation];\n});\n\nexport default useDomain;","map":{"version":3,"names":["useMutation","axios","useDomain","root","window","location","host","reserveDomain","domain","isAvailableUrl","isAvailable","get","then","response","data","url","domainName","reserveResponse","post","id","registerDomain","reservationId","registrationInfo","reserve","onError","ex","console","error","register"],"sources":["/Users/toddmitchell/src/youfoundation/dyc/dotyoucore/Youverse.Provisioning/ClientApp/src/hooks/domain/useDomain.ts"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\nimport axios from 'axios';\n\nconst useDomain = () => {\n  const root = '//' + window.location.host + '/api/v1';\n\n  const reserveDomain = async ({ domain }: { domain: string }) => {\n    let isAvailableUrl = root + '/registration/availability/' + domain;\n    let isAvailable = await axios.get<boolean>(isAvailableUrl).then((response) => response.data);\n\n    if (!isAvailable) {\n      return false;\n    }\n\n    let url = root + '/registration/reservations';\n    let data = {\n      domainName: domain,\n      //\"previousReservationId\": \"\"  //must be a valid guid or not included in the payload\n    };\n\n    const reserveResponse = await axios\n      .post<{ id: string }>(url, data)\n      .then((response) => response.data);\n\n    return reserveResponse.id;\n  };\n\n  const registerDomain = async ({\n    domain,\n    reservationId,\n  }: {\n    domain: string;\n    reservationId: string;\n  }) => {\n    let url = root + '/registration';\n    let data = {\n      domainName: domain,\n      registrationInfo: {\n        reservationId: reservationId,\n      },\n    };\n\n    const response = await axios.post<string>(url, data).then((response) => response.data);\n\n    return response;\n  };\n\n  return {\n    reserve: useMutation(reserveDomain, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n    register: useMutation(registerDomain, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useDomain;\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAMC,IAAI,GAAG,OAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAvB,GAA8B,SAA3C;;EAEA,MAAMC,aAAa,GAAG,cAA0C;IAAA,IAAnC;MAAEC;IAAF,CAAmC;IAC9D,IAAIC,cAAc,GAAGN,IAAI,GAAG,6BAAP,GAAuCK,MAA5D;IACA,IAAIE,WAAW,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAmBF,cAAnB,EAAmCG,IAAnC,CAAyCC,QAAD,IAAcA,QAAQ,CAACC,IAA/D,CAAxB;;IAEA,IAAI,CAACJ,WAAL,EAAkB;MAChB,OAAO,KAAP;IACD;;IAED,IAAIK,GAAG,GAAGZ,IAAI,GAAG,4BAAjB;IACA,IAAIW,IAAI,GAAG;MACTE,UAAU,EAAER,MADH,CAET;;IAFS,CAAX;IAKA,MAAMS,eAAe,GAAG,MAAMhB,KAAK,CAChCiB,IAD2B,CACNH,GADM,EACDD,IADC,EAE3BF,IAF2B,CAErBC,QAAD,IAAcA,QAAQ,CAACC,IAFD,CAA9B;IAIA,OAAOG,eAAe,CAACE,EAAvB;EACD,CAnBD;;EAqBA,MAAMC,cAAc,GAAG,eAMjB;IAAA,IANwB;MAC5BZ,MAD4B;MAE5Ba;IAF4B,CAMxB;IACJ,IAAIN,GAAG,GAAGZ,IAAI,GAAG,eAAjB;IACA,IAAIW,IAAI,GAAG;MACTE,UAAU,EAAER,MADH;MAETc,gBAAgB,EAAE;QAChBD,aAAa,EAAEA;MADC;IAFT,CAAX;IAOA,MAAMR,QAAQ,GAAG,MAAMZ,KAAK,CAACiB,IAAN,CAAmBH,GAAnB,EAAwBD,IAAxB,EAA8BF,IAA9B,CAAoCC,QAAD,IAAcA,QAAQ,CAACC,IAA1D,CAAvB;IAEA,OAAOD,QAAP;EACD,CAlBD;;EAoBA,OAAO;IACLU,OAAO,EAAEvB,WAAW,CAACO,aAAD,EAAgB;MAClCiB,OAAO,EAAGC,EAAD,IAAQ;QACfC,OAAO,CAACC,KAAR,CAAcF,EAAd;MACD;IAHiC,CAAhB,CADf;IAMLG,QAAQ,EAAE5B,WAAW,CAACoB,cAAD,EAAiB;MACpCI,OAAO,EAAGC,EAAD,IAAQ;QACfC,OAAO,CAACC,KAAR,CAAcF,EAAd;MACD;IAHmC,CAAjB;EANhB,CAAP;AAYD,CAxDD;;GAAMvB,S;UA6COF,W,EAKCA,W;;;AAQd,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}