{"version":3,"file":"static/js/457.e56bc895.chunk.js","mappings":"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","sources":["components/Icons/Arrow/Arrow.tsx","hooks/image/useImage.ts","hooks/image/useTinyThumb.ts","components/Image/Image.tsx","hooks/connections/useConnectionDetails.ts","components/Templates/Home/Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem.tsx","hooks/link/useLink.ts","components/Layout/Links/Links.tsx","components/Templates/Home/Common/ProfileHero/ProfileHero.tsx","components/Icons/Bubble/Bubble.tsx","components/Icons/Eye/Eye.tsx","components/Templates/Home/Common/ChannelTeaser/ChannelTeaser.tsx","hooks/biography/useBiography.ts","components/Templates/Home/Common/Biography/Biography.tsx","components/Templates/Home/Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll.tsx","components/Templates/Home/Classic/HomeClassic.tsx","components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.tsx","components/Templates/Home/Content/HomeContent.tsx","components/Templates/Home/Cover/HomeCover.tsx","components/Templates/Home/Home.tsx","helpers/common.ts","hooks/blog/useBlogPosts.ts","hooks/blog/useChannels.ts","hooks/connections/useConnections.ts","hooks/intersection/useIntersection.ts","webpack://public-app/./src/components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.css?19d7"],"sourcesContent":["import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  PublicClient,\n  HomePageConfig,\n  TargetDrive,\n  ThumbSize,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId: string | undefined, imageDrive?: TargetDrive, size?: ThumbSize) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const fetchImageData = async (\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive,\n    size?: ThumbSize\n  ) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n    return await client.mediaProvider.getDecryptedImageUrl(\n      imageDrive ?? defaultDrive,\n      imageFileId,\n      size\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive, size],\n      () => fetchImageData(imageFileId, imageDrive, size),\n      { refetchOnMount: false, refetchOnWindowFocus: false, staleTime: Infinity }\n    ),\n    testCache: (imageFileId: string, imageDrive: any) => {\n      const cache = queryClient.getQueryData(['image', imageFileId, imageDrive]);\n      return !!cache;\n    },\n  };\n};\n\nexport default useImage;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  PublicClient,\n  HomePageConfig,\n  TargetDrive,\n  DataUtil,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useTinyThumb = (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Look for tiny thumb in already fetched data:\n    const thumbFromStaticFile = await client.fileReadOnlyProvider.getFileEntryFromCache(\n      imageFileId\n    );\n    if (thumbFromStaticFile?.[0]?.header.fileMetadata.appData.previewThumbnail) {\n      const previewThumbnail = thumbFromStaticFile[0].header.fileMetadata.appData.previewThumbnail;\n      const buffer = DataUtil.base64ToUint8Array(previewThumbnail.content);\n      const url = window.URL.createObjectURL(new Blob([buffer]));\n\n      return {\n        naturalSize: { width: previewThumbnail.pixelWidth, height: previewThumbnail.pixelHeight },\n        sizes: thumbFromStaticFile[0].header.fileMetadata.appData.additionalThumbnails ?? [],\n        url,\n      };\n    }\n\n    return await client.mediaProvider.getDecryptedThumbnailMeta(\n      imageDrive ?? defaultDrive,\n      imageFileId\n    );\n  };\n\n  return useQuery(\n    ['tinyThumb', imageFileId, imageDrive],\n    () => fetchImageData(imageFileId, imageDrive),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }\n  );\n};\n\nexport default useTinyThumb;\n","import { TargetDrive, ThumbSize } from '@youfoundation/transit-lib';\nimport { useEffect, useRef, useState } from 'react';\nimport useImage from '../../hooks/image/useImage';\nimport useTinyThumb from '../../hooks/image/useTinyThumb';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  cover?: boolean;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, cover, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const [loadSize, setLoadSize] = useState<ThumbSize | 'full' | undefined>(undefined);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: thumbMeta } = useTinyThumb(isInView ? fileId : undefined, targetDrive);\n  const {\n    fetch: { data: imageUrl },\n    testCache,\n  } = useImage(\n    loadSize !== undefined ? fileId : undefined,\n    targetDrive,\n    loadSize !== 'full' ? loadSize : undefined\n  );\n\n  useIntersection(imgRef, () => {\n    if (fileId && testCache(fileId, targetDrive)) {\n      findLoadOptimalSize();\n    }\n    setIsInView(true);\n  });\n\n  useEffect(() => {\n    if (thumbMeta && thumbMeta.url?.length) {\n      // Set to load full, with timeout to allow other tinies to load\n      setTimeout(() => {\n        findLoadOptimalSize();\n      }, 100);\n    }\n  }, [thumbMeta]);\n\n  const findLoadOptimalSize = () => {\n    if (!thumbMeta?.sizes?.length || !imgRef.current) {\n      setLoadSize('full');\n      return;\n    }\n\n    const targetWidth = imgRef.current?.clientWidth;\n    const targetHeight = imgRef.current?.clientHeight;\n\n    const matchingSize = thumbMeta.sizes.find((size) => {\n      return targetWidth < size.pixelWidth && targetHeight < size.pixelHeight;\n    });\n\n    setLoadSize(matchingSize ?? 'full');\n  };\n\n  const state: 'idle' | 'loading-tiny' | 'tiny' | 'loading-full' | 'loaded' = loadSize\n    ? imageUrl\n      ? 'loaded'\n      : 'loading-full'\n    : isInView\n    ? thumbMeta && thumbMeta.url?.length\n      ? 'tiny'\n      : 'loading-tiny'\n    : 'idle';\n\n  return (\n    <figure\n      className={`${\n        className?.indexOf('absolute') !== -1 ? '' : 'relative'\n      } overflow-hidden ${className}`}\n    >\n      {state !== 'loading-tiny' ? (\n        <img\n          src={state === 'loaded' ? imageUrl : thumbMeta?.url}\n          alt={isInView && thumbMeta?.url ? alt : ' '}\n          className={`${state !== 'loaded' && 'blur-[50px]'} ${\n            cover ? 'h-full w-full object-cover' : ''\n          }`}\n          title={\n            title ||\n            `${fileId}@${\n              loadSize !== undefined && loadSize !== 'full'\n                ? `${loadSize.pixelWidth}x${loadSize.pixelHeight}`\n                : loadSize\n            }`\n          }\n          ref={imgRef}\n          width={thumbMeta?.naturalSize?.width}\n          height={thumbMeta?.naturalSize?.height}\n        />\n      ) : null}\n    </figure>\n  );\n};\n\nexport default Image;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  // AttributeDefinitions,\n  // BuiltInProfiles,\n  DataUtil,\n  PublicClient,\n} from '@youfoundation/transit-lib';\n\nconst useConnectionDetails = ({ dotYouId }: { dotYouId?: string }) => {\n  const client = new PublicClient({ api: ApiType.YouAuth, root: dotYouId });\n\n  const fetchSingle = async ({ dotYouId }: { dotYouId?: string }) => {\n    if (!dotYouId) {\n      return;\n    }\n\n    // const bestNameAttr = await client.profileDataProvider.getBestAttributeVersion(\n    //   BuiltInProfiles.StandardProfileId.toString(),\n    //   BuiltInProfiles.PersonalInfoSectionId.toString(),\n    //   AttributeDefinitions.Name.type.toString()\n    // );\n    // console.log(bestNameAttr);\n\n    const rawData = await client.fileReadOnlyProvider.GetFile('public.json');\n\n    const nameAttr = rawData.get('name')?.[0];\n    const photoRefAttr = rawData.get('photo')?.[0];\n    const photoAttr = rawData.get(photoRefAttr?.payload?.data?.profileImageId)?.[0];\n\n    const previewThumbnail = photoAttr?.additionalThumbnails?.reduce(\n      (prevVal, curValue) => {\n        if (prevVal.pixelWidth < curValue.pixelWidth && curValue.pixelWidth <= 250) {\n          return curValue;\n        }\n        return prevVal;\n      },\n      { ...photoAttr.header.fileMetadata.appData.previewThumbnail, pixelWidth: 20, pixelHeight: 20 }\n    );\n\n    const buffer = previewThumbnail?.content\n      ? DataUtil.base64ToUint8Array(previewThumbnail.content)\n      : undefined;\n    const url = buffer ? window.URL.createObjectURL(new Blob([buffer])) : undefined;\n\n    const returnVal = {\n      name: {\n        ...nameAttr?.payload.data,\n      },\n      profileImage: {\n        naturalSize: { width: previewThumbnail?.pixelWidth, height: previewThumbnail?.pixelHeight },\n        contentType: previewThumbnail?.contentType,\n        url,\n      },\n    };\n\n    return returnVal;\n  };\n\n  return {\n    fetch: useQuery(['connectionDetails', dotYouId], () => fetchSingle({ dotYouId }), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnectionDetails;\n","import { useRef, useState } from 'react';\nimport useConnectionDetails from '../../../../../../hooks/connections/useConnectionDetails';\nimport { useIntersection } from '../../../../../../hooks/intersection/useIntersection';\n\nconst ConnectionTeaser = ({ dotYouId }: { dotYouId: string }) => {\n  const [isInView, setIsInView] = useState(false);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const { data: connectionDetails } = useConnectionDetails({\n    dotYouId: isInView ? dotYouId : undefined,\n  }).fetch;\n\n  const fullName = connectionDetails?.name?.givenName\n    ? `${connectionDetails.name?.givenName ?? ''} ${connectionDetails.name?.surname ?? ''}`\n    : undefined;\n  const title = undefined;\n\n  useIntersection(wrapperRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <div className=\"w-full p-2 md:w-1/2 lg:w-1/3\" ref={wrapperRef}>\n      <a\n        href={`https://${dotYouId}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        className=\"contents\"\n      >\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 p-4 hover:bg-gray-200 dark:border-gray-700 dark:hover:bg-gray-800\">\n          {connectionDetails?.profileImage ? (\n            <img\n              src={connectionDetails.profileImage.url}\n              width={connectionDetails.profileImage.naturalSize.width}\n              height={connectionDetails.profileImage.naturalSize.height}\n              className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"\n            />\n          ) : (\n            <div className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"></div>\n          )}\n\n          <div className=\"flex-grow\">\n            <h2 className=\"title-font font-medium text-gray-900 dark:text-white\">\n              {fullName ?? dotYouId}\n            </h2>\n            <p className=\"text-gray-500\">{title ?? ''}</p>\n            <p className=\"text-right text-sm text-gray-500\">{dotYouId}</p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectionTeaser;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  Attribute,\n  LinkProfileFields,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useLink = () => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchData: () => Promise<\n    { text: string; target: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('profile.json');\n    if (fileData.has('link')) {\n      const linkAttributes = fileData.get('link')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          text: attribute.data[LinkProfileFields.LinkText] as string,\n          target: attribute.data[LinkProfileFields.LinkTarget] as string,\n          id: attribute.id,\n        };\n      });\n      if (linkAttributes?.length) {\n        return linkAttributes;\n      }\n    }\n\n    const linkAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      undefined,\n      AttributeDefinitions.Link.type.toString()\n    );\n\n    return linkAttributes?.versions.map((attribute) => {\n      return {\n        text: attribute.data[LinkProfileFields.LinkText] as string,\n        target: attribute.data[LinkProfileFields.LinkTarget] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['link'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useLink;\n","import useLink from '../../../hooks/link/useLink';\n\nconst Links = ({ className, style }: { className: string; style?: 'secondary' }) => {\n  const { data: links } = useLink();\n\n  if (!links) {\n    return null;\n  }\n\n  const buttonClass =\n    style === 'secondary'\n      ? 'border-gray border-[1px] py-2 px-4 hover:bg-gray-100 rounded'\n      : 'rounded border-0 bg-gray-500 py-2 px-4 text-white hover:bg-gray-600';\n\n  return (\n    <div className={`-mx-1 flex flex-row flex-wrap ${className}`}>\n      {links.map((link) => (\n        <a\n          href={link.target}\n          key={link.target}\n          className={`m-1 block focus:outline-none ${buttonClass}`}\n        >\n          {link.text}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default Links;\n","import { BuiltInProfiles, HomePageConfig, ProfileConfig } from '@youfoundation/transit-lib';\nimport useSiteData from '../../../../../hooks/siteData/useSiteData';\nimport Image from '../../../../Image/Image';\nimport Links from '../../../../Layout/Links/Links';\nimport Socials from '../../../../Layout/Socials/Socials';\n\nconst ProfileHero = () => {\n  const { owner, home, social } = useSiteData().data ?? {};\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  const showProfileImage = owner?.profileImageId && targetDrive;\n\n  return (\n    <section className=\"bg-slate-100 dark:bg-slate-800\">\n      <div className=\"relative h-[27vh] min-h-[330px]\">\n        <Image\n          fileId={home?.headerImageFileId}\n          targetDrive={HomePageConfig.HomepageTargetDrive}\n          className=\"absolute inset-0\"\n          cover={true}\n        />\n        <div className=\"container absolute top-0 left-0 right-0 bottom-0 mx-auto flex justify-center px-5 md:block\">\n          {showProfileImage ? (\n            <div className=\"absolute bottom-[-4.5rem] h-60 w-60 overflow-hidden rounded-full border-8 border-neutral-200 md:bottom-[-7.5rem] \">\n              <Image\n                fileId={owner?.profileImageId}\n                targetDrive={targetDrive}\n                className=\"h-full w-full\"\n                cover={true}\n              />\n            </div>\n          ) : null}\n        </div>\n      </div>\n      {/* min height of 7.5 rem to ensure sufficient spacing after the hero picture to support the offset of the profile picture*/}\n      <div className=\"container mx-auto flex min-h-[8.5rem] px-5 dark:text-white xl:h-[8.5rem]\">\n        <div className={`my-auto w-full ${showProfileImage ? 'pt-[6rem] md:py-4 md:pl-60' : ''}`}>\n          <div className={`flex flex-col ${showProfileImage ? 'md:pl-10' : ''} lg:flex-row`}>\n            <h1 className=\"text-center text-2xl md:text-left\">\n              {`${owner?.firstName ?? ''} ${owner?.surName ?? ''}`}\n              <br />\n              <small>{home?.tagLine}</small>\n            </h1>\n            <div className=\"mt-10 mb-5 flex flex-col justify-center md:my-auto md:ml-auto\">\n              <Socials\n                socialHandles={social}\n                className=\"mt-4 justify-center sm:mt-0 md:ml-auto md:justify-start\"\n              />\n              <Links className=\"mt-3 justify-center md:justify-end\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileHero;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Eye: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n};\n\nexport default Eye;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../../../helpers/i18n/dictionary';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\n\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Bubble from '../../../../Icons/Bubble/Bubble';\nimport Eye from '../../../../Icons/Eye/Eye';\n\ninterface ChannelTeaserProps {\n  className?: string;\n  channel: ChannelDefinitionVm;\n}\n\nconst ChannelTeaser: FC<ChannelTeaserProps> = ({ className, channel }) => {\n  return (\n    <div className={className}>\n      <div className=\"relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 pt-16 pb-24 dark:bg-gray-800 dark:bg-opacity-40\">\n        {/* <h2 className=\"title-font mb-1 text-xs font-medium tracking-widest text-gray-400 dark:text-gray-500\">\n          {channel.category}\n        </h2> */}\n        <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n          {channel.name}\n        </h1>\n        {channel.description && <p className=\"mb-3 leading-relaxed\">{channel.description}</p>}\n        <Link\n          className=\"inline-flex items-center text-indigo-500\"\n          to={`/home/blog/${channel.slug ?? '#'}`}\n        >\n          {t('learn more')}\n          <Arrow className=\"ml-2 h-4 w-4\" />\n        </Link>\n        <div className=\"absolute bottom-0 left-0 mt-2 flex w-full justify-end py-4 px-8 text-center leading-none text-gray-400 dark:text-gray-600 \">\n          <span className=\"mr-3 inline-flex items-center border-r-2 border-gray-200 py-1 pr-3 text-sm leading-none dark:border-gray-700\">\n            <Eye className=\"mr-1 h-4 w-4\" />\n            1.2K\n          </span>\n          <span className=\"inline-flex items-center text-sm leading-none\">\n            <Bubble className=\"mr-1 h-4 w-4\" />6\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ChannelTeaser;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  MinimalProfileFields,\n  Attribute,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useBiography = () => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchData: () => Promise<\n    { title: string; body: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('profile.json');\n    if (fileData.has('bio')) {\n      const bioAttributes = fileData.get('bio')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n          body: attribute.data[MinimalProfileFields.FullBioId] as string,\n          id: attribute.id,\n        };\n      });\n      if (bioAttributes?.length) {\n        return bioAttributes;\n      }\n    }\n\n    const biographyAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.FullBio.type.toString()\n    );\n\n    return biographyAttributes?.versions.map((attribute) => {\n      return {\n        title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n        body: attribute.data[MinimalProfileFields.FullBioId] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['biography'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBiography;\n","import { ReactNode } from 'react';\nimport useBiography from '../../../../../hooks/biography/useBiography';\n\nconst Biography = ({ className }: { className: string }) => {\n  const { data } = useBiography();\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <div className={className}>\n      {data.map((bio) => {\n        return (\n          <BiographyBlock title={bio.title} children={bio.body} key={bio.id} className=\"my-5\" />\n        );\n      })}\n    </div>\n  );\n};\n\nconst BiographyBlock = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: string | ReactNode;\n  className: string;\n}) => {\n  return (\n    <div\n      className={`relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 py-12 dark:bg-gray-800 dark:bg-opacity-40 ${className}`}\n    >\n      <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n        {title}\n      </h1>\n      <p className=\"leading-relaxed\" style={{ whiteSpace: 'pre-line' }}>\n        {children}\n      </p>\n    </div>\n  );\n};\n\nexport default Biography;\n","import { Link } from 'react-router-dom';\nimport { t } from '../../../../../../helpers/i18n/dictionary';\nimport Arrow from '../../../../../Icons/Arrow/Arrow';\n\nconst ConnectionTeaserAll = () => {\n  return (\n    <div className=\"w-full p-2 md:w-1/2 lg:w-1/3\">\n      <Link to=\"/home/connections\" className=\"contents\">\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 bg-gray-100 p-4 hover:bg-gray-200 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700\">\n          {t('See more')} <Arrow className=\"ml-auto h-5 w-5\" />\n        </div>\n      </Link>\n    </div>\n  );\n};\nexport default ConnectionTeaserAll;\n","import ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Biography from '../Common/Biography/Biography';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\nimport useConnections from '../../../../hooks/connections/useConnections';\n\nconst HomeClassic = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n  const { data: connections } = useConnections({}).fetch;\n\n  return (\n    <>\n      <ProfileHero />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        {props?.leadText && (\n          <div className=\"container mx-auto px-5 pt-12\">\n            <div className=\"lg:w-2/3\">{props.leadText}</div>\n          </div>\n        )}\n        <div className=\"container mx-auto px-5\">\n          <Biography className=\"my-20 lg:w-2/3\" />\n\n          <div className=\"my-20\">\n            <h2 className=\"mb-5 text-3xl\">{t('blog')}</h2>\n            <div className=\"-mx-4 flex flex-wrap\">\n              {channels?.map((channel) => {\n                return (\n                  <ChannelTeaser\n                    key={channel.channelId}\n                    channel={channel}\n                    className={'w-full p-4 lg:w-1/2'}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          {connections?.length ? (\n            <div className=\"my-20\">\n              <h2 className=\"mb-5 text-3xl\">{t('Connections')}</h2>\n              <div className=\"-m-3 flex flex-wrap\">\n                {connections.map((item, index) => {\n                  return <ConnectionTeaser key={index} dotYouId={item?.dotYouId} />;\n                })}\n                {connections?.length > 5 ? <ConnectionTeaserAll /> : null}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeClassic;\n","import { BlogConfig, BlogContent, TargetDrive } from '@youfoundation/transit-lib';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useBlogPosts from '../../../../../hooks/blog/useBlogPosts';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Image from '../../../../Image/Image';\n\nrequire('./BlogChannelTeaser.css');\n\ninterface BlogChannelTeaserProps {\n  className?: string;\n  title: string;\n  channel: ChannelDefinitionVm;\n}\n\nexport const BlogChannelTeaser: FC<BlogChannelTeaserProps> = ({ className, title, channel }) => {\n  const [index, setIndex] = useState(0);\n  const [disableAutomaticIndexCalculcation, setDisableAutomaticIndexCalculation] = useState(false);\n  const [maxIndex, setMaxIndex] = useState(1);\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const { blogPosts } = useBlogPosts({ channelId: channel?.channelId }).data ?? {};\n\n  const doScroll = (direction: number) => {\n    if (scrollContainer?.current) {\n      const newIndex = index + direction;\n      setIndex(newIndex);\n      setDisableAutomaticIndexCalculation(true);\n\n      scrollContainer.current.scrollTo({\n        left: newIndex * scrollContainer.current.clientWidth,\n        behavior: 'smooth',\n      });\n      setMaxIndex(scrollContainer.current.scrollWidth / scrollContainer.current.clientWidth - 1);\n    }\n  };\n\n  const calculateIndex = () => {\n    if (scrollContainer?.current && !disableAutomaticIndexCalculcation) {\n      const calculcatedIndex =\n        scrollContainer.current.scrollLeft / scrollContainer.current.clientWidth;\n      setIndex(calculcatedIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (disableAutomaticIndexCalculcation) {\n      setTimeout(() => {\n        setDisableAutomaticIndexCalculation(false);\n      }, 1000);\n    }\n  }, [disableAutomaticIndexCalculcation]);\n\n  useEffect(() => {\n    // calculate index on load to ensure that there was no scroll state enforced by the browser\n    calculateIndex();\n  }, []);\n\n  return (\n    <section className={`body-font overflow-hidden ${className ?? ''}`}>\n      <div className=\"container mx-auto px-5 py-6\">\n        <h2 className=\"mb-5 text-2xl text-gray-600 dark:text-gray-300\">{title}</h2>\n        <div className=\"relative\">\n          <div\n            className=\"overflow-vertical-hidden overflow-horizontal-scroll -m-1 flex flex-nowrap\"\n            ref={scrollContainer}\n            onScroll={calculateIndex}\n          >\n            {blogPosts?.map((blog) => {\n              return (\n                <BlogTeaser\n                  className=\"w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/6\"\n                  blog={blog}\n                  linkRoot={`/home/blog/${channel.slug ? channel.slug + '/' : ''}`}\n                  key={`${blog.channelId}_${blog.id}`}\n                />\n              );\n            })}\n          </div>\n          {index !== 0 ? (\n            <div className=\"absolute top-0 bottom-20 left-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\" rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(-1)}\n              >\n                <Arrow className=\"rotate-180\" />\n              </button>\n            </div>\n          ) : null}\n          {index < maxIndex ? (\n            <div className=\"absolute bottom-20 top-0 right-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\"rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(+1)}\n              >\n                <Arrow />\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\ninterface BlogTeaserProps {\n  className: string;\n  blog: BlogContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  const imageTargetDrive: TargetDrive | undefined = blog.channelId\n    ? {\n        alias: blog.channelId,\n        type: BlogConfig.ChannelDriveType.toString(),\n      }\n    : undefined;\n\n  return (\n    <div className={`mb-0 flex-shrink-0 p-1  ${className}`}>\n      <Link to={linkRoot + (blog.slug ?? '#')} className=\"contents\">\n        <div className=\"aspect-video overflow-hidden transition-transform duration-300 hover:scale-110\">\n          {imageTargetDrive && blog.primaryImageFileId ? (\n            <Image\n              className=\"h-full w-full object-cover object-center\"\n              fileId={blog.primaryImageFileId}\n              targetDrive={imageTargetDrive}\n              alt=\"blog\"\n              cover={true}\n            />\n          ) : (\n            <div className=\"flex h-full items-center bg-slate-200 p-2  text-center dark:bg-slate-700\">\n              {blog.caption}\n            </div>\n          )}\n        </div>\n        <div>\n          <h2 className=\"title-font text-md fade-overflow max-h-14 pt-2 font-medium text-gray-900 dark:text-gray-200\">\n            {blog.caption}\n          </h2>\n          <span className=\"text-gray-500 md:pt-1 md:text-sm\">\n            {new Date(blog.dateUnixTime).toLocaleDateString()}\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import { t } from '../../../../helpers/i18n/dictionary';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport useConnections from '../../../../hooks/connections/useConnections';\n\nimport { BlogChannelTeaser } from '../Common/BlogChannelTeaser/BlogChannelTeaser';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ProfileHero from '../Common/ProfileHero/ProfileHero';\n\nconst HomeContent = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n  const { data: connections } = useConnections({}).fetch;\n\n  return (\n    <>\n      <ProfileHero />\n      <div className=\"container mx-auto px-5 pt-12\">{props.leadText}</div>\n      <div className=\"py-12\">\n        {channels?.map((channel) => {\n          return (\n            <BlogChannelTeaser key={channel.channelId} title={channel.name} channel={channel} />\n          );\n        })}\n      </div>\n      {connections?.length ? (\n        <div className=\"container mx-auto px-5\">\n          <div className=\"mt-0 mb-10\">\n            <h2 className=\"mb-5 text-2xl\">{t('Connections')}</h2>\n            <div className=\"-m-3 flex flex-wrap\">\n              {connections.map((item, index) => {\n                return <ConnectionTeaser key={index} dotYouId={item?.dotYouId} />;\n              })}\n              {connections?.length > 5 ? <ConnectionTeaserAll /> : null}\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default HomeContent;\n","import ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\nimport { BuiltInProfiles, ProfileConfig } from '@youfoundation/transit-lib';\nimport Image from '../../../Image/Image';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Links from '../../../Layout/Links/Links';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\nimport useConnections from '../../../../hooks/connections/useConnections';\n\nconst HomeCover = (props: { leadText?: string }) => {\n  const { owner, home } = useSiteData().data ?? {};\n  const { channels } = useChannels().data ?? {};\n  const { data: connections } = useConnections({}).fetch;\n\n  if (!owner) {\n    return <></>;\n  }\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  return (\n    <>\n      <section className=\"body-font my-auto\">\n        <div className=\"container mx-auto\">\n          <div className=\"lg:flex\">\n            <div className=\"mb-12 lg:w-1/2\">\n              {owner?.profileImageId && targetDrive ? (\n                <Image\n                  fileId={owner?.profileImageId}\n                  targetDrive={targetDrive}\n                  className=\"w-full max-w-[none] sm:mx-auto md:max-w-[30rem] lg:max-w-[none]\"\n                />\n              ) : null}\n            </div>\n\n            <div className=\"flex h-full flex-col px-5 lg:w-1/2\">\n              <div className=\"px-5\">\n                <h1 className=\"mb-4 text-2xl dark:text-white\">\n                  {owner?.firstName ?? ''} {owner?.surName ?? ''}\n                  <br />\n                  <small>{home?.tagLine ?? ''}</small>\n                </h1>\n                {props?.leadText ?? ''}\n              </div>\n              <div className=\"mt-auto -mb-4 py-12\">\n                {channels?.map((channel) => {\n                  return (\n                    <ChannelTeaser\n                      key={channel.channelId}\n                      channel={channel}\n                      className={'w-full py-4'}\n                    />\n                  );\n                })}\n                <Links className=\"justify-center\" style=\"secondary\" />\n              </div>\n            </div>\n          </div>\n          {connections?.length ? (\n            <div className=\"mt-16 mb-20 px-5\">\n              <div className=\"-m-3 flex flex-wrap\">\n                {connections.map((item, index) => {\n                  return <ConnectionTeaser key={index} dotYouId={item?.dotYouId} />;\n                })}\n                {connections?.length > 5 ? <ConnectionTeaserAll /> : null}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeCover;\n","import { Helmet } from 'react-helmet-async';\nimport { HomePageTheme } from '@youfoundation/transit-lib';\nimport useSiteData from '../../../hooks/siteData/useSiteData';\nimport HomeClassic from './Classic/HomeClassic';\nimport HomeContent from './Content/HomeContent';\nimport HomeCover from './Cover/HomeCover';\n\nconst Home = () => {\n  const { home, owner } = useSiteData().data ?? {};\n\n  if (!home) {\n    return <></>;\n  }\n\n  const renderBody = () => {\n    if (home?.template === HomePageTheme.SocialClassic.toString()) {\n      return <HomeClassic leadText={home.leadText} />;\n    } else if (home?.template === HomePageTheme.ContentProducer.toString()) {\n      return <HomeContent leadText={home.leadText} />;\n    } else {\n      return <HomeCover leadText={home?.leadText} />;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{owner?.firstName ?? 'Home'} | Youniverse</title>\n      </Helmet>\n      {renderBody()}\n    </>\n  );\n};\n\nexport default Home;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport const stringify = (obj: Record<string, unknown>) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, PublicClient } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogPosts = ({ channelId }: useBlogPostsProps) => {\n  const { getSharedSecret } = useAuth();\n  const pageSize = 10;\n\n  const fetchBlogData = async ({ channelId }: { channelId?: string }) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Blog posts\n    let foundBlogPosts: BlogContentVm[];\n\n    // If located in a specific channel, only fetch those, otherwise fallback to recents;\n    if (channelId) {\n      const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n      if (fileData.has(channelId)) {\n        foundBlogPosts =\n          fileData.get(channelId)?.map((entry) => {\n            const item = entry.payload;\n\n            return {\n              ...item,\n              slug: convertTextToSlug(typeof item.caption === 'string' ? item.caption : ''),\n              itemKey: `${item.channelId}_${item.id}`,\n            } as BlogContentVm;\n          }) ?? [];\n      } else {\n        if (fileData.entries.length > 1) {\n          foundBlogPosts = [];\n\n          for (const channelId of fileData.keys()) {\n            foundBlogPosts = [\n              ...foundBlogPosts,\n              ...(fileData.get(channelId)?.map((entry) => {\n                const item = entry.payload;\n\n                return {\n                  ...item,\n                  slug: convertTextToSlug(typeof item.caption === 'string' ? item.caption : ''),\n                  itemKey: `${item.channelId}_${item.id}`,\n                } as BlogContentVm;\n              }) ?? []),\n            ];\n\n            // Sorted descending\n            foundBlogPosts.sort((a, b) => b.dateUnixTime - a.dateUnixTime);\n          }\n        } else {\n          foundBlogPosts = (\n            await client.blogPostReadonlyProvider.getPosts(\n              channelId,\n              'Article',\n              undefined,\n              pageSize\n            )\n          ).posts;\n        }\n      }\n    } else {\n      foundBlogPosts = await client.blogPostReadonlyProvider.getRecentPosts('Article', pageSize);\n    }\n\n    // Process blog posts (Only until fixed in data upload)\n    const blogPosts = clearDuplicateBlogs(foundBlogPosts).map((item) => {\n      return {\n        ...item,\n        slug: convertTextToSlug(item.caption),\n        itemKey: `${item.channelId}_${item.id}`,\n      };\n    });\n\n    return { blogPosts };\n  };\n\n  return useQuery(['blogs_recents', channelId], () => fetchBlogData({ channelId }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    onError: (er) => {\n      console.log(er);\n    },\n  });\n};\n\n//// TODO Remove these temporary helpers:\nconst clearDuplicateBlogs = (blogs: BlogContent[]) => {\n  return blogs.reduce(\n    (returnVal, currBlog) =>\n      returnVal.some((blog) => blog.id === currBlog.id && blog.channelId === currBlog.channelId)\n        ? returnVal\n        : [...returnVal, currBlog],\n    <BlogContent[]>[]\n  );\n};\n\nexport default useBlogPosts;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useChannelsProps = {\n  channelSlug: string;\n};\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n  template: ChannelTemplate;\n}\n\nconst useChannels = ({ channelSlug }: useChannelsProps = { channelSlug: '' }) => {\n  const { getSharedSecret } = useAuth();\n\n  const parseTemplate = (templateId: number | undefined) => {\n    return parseInt(templateId + '') === ChannelTemplate.LargeCards\n      ? ChannelTemplate.LargeCards\n      : parseInt(templateId + '') === ChannelTemplate.ClassicBlog\n      ? ChannelTemplate.ClassicBlog\n      : ChannelTemplate.MasonryLayout;\n  };\n\n  const fetchChannelData = async (channelSlug: string | undefined) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinitionVm[];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('channels.json');\n\n    if (fileData.has('channels')) {\n      channels =\n        fileData.get('channels')?.map((entry: any) => {\n          const item = entry.payload;\n          return {\n            ...item,\n            slug: convertTextToSlug(item?.name),\n            template: parseTemplate(item?.templateId),\n          } as ChannelDefinitionVm;\n        }) ?? [];\n    } else {\n      channels = (await client.blogPostReadonlyProvider.getChannels()).map((item) => {\n        return {\n          ...item,\n          slug: convertTextToSlug(item?.name),\n          template: parseTemplate(item?.templateId),\n        } as ChannelDefinitionVm;\n      });\n    }\n\n    // Active Channel\n    const activeChannel = channelSlug\n      ? channels?.find((channel) => convertTextToSlug(channel.name) === channelSlug) ?? undefined\n      : undefined;\n\n    return { channels, activeChannel };\n  };\n\n  return useQuery(['channels', channelSlug], () => fetchChannelData(channelSlug), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, PublicClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = ({ pageSize }: { pageSize?: number }) => {\n  const { getSharedSecret } = useAuth();\n\n  const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n  const fetchConnections = async ({ pageSize }: { pageSize?: number }) => {\n    if (!getSharedSecret()) {\n      return;\n    }\n    return (\n      await client.circleNetworkReadOnlyProvider.getConnections({\n        pageNumber: 1,\n        pageSize: pageSize ?? 10,\n      })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['connections', pageSize], () => fetchConnections({ pageSize }), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (elem: React.RefObject<HTMLElement>, callback: () => void) => {\n  useEffect(() => {\n    const target = elem.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, []);\n};\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["className","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","defaultDrive","alias","HomePageConfig","type","BlogConfig","imageFileId","imageDrive","size","getSharedSecret","useAuth","queryClient","useQueryClient","fetchImageData","undefined","client","PublicClient","api","ApiType","sharedSecret","mediaProvider","getDecryptedImageUrl","fetch","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","testCache","getQueryData","fileReadOnlyProvider","getFileEntryFromCache","thumbFromStaticFile","header","fileMetadata","appData","previewThumbnail","buffer","DataUtil","content","url","window","URL","createObjectURL","Blob","naturalSize","width","pixelWidth","height","pixelHeight","sizes","additionalThumbnails","getDecryptedThumbnailMeta","targetDrive","fileId","cover","alt","title","useState","isInView","setIsInView","loadSize","setLoadSize","imgRef","useRef","thumbMeta","useTinyThumb","data","useImage","imageUrl","useIntersection","findLoadOptimalSize","useEffect","length","setTimeout","current","targetWidth","clientWidth","targetHeight","clientHeight","matchingSize","find","state","indexOf","src","ref","dotYouId","root","fetchSingle","GetFile","rawData","nameAttr","get","photoRefAttr","photoAttr","payload","profileImageId","reduce","prevVal","curValue","returnVal","name","profileImage","contentType","wrapperRef","connectionDetails","useConnectionDetails","fullName","givenName","surname","href","target","rel","fetchData","fileData","has","linkAttributes","map","entry","attribute","text","LinkProfileFields","id","profileDataProvider","getAttributeVersions","BuiltInProfiles","AttributeDefinitions","versions","style","links","useLink","buttonClass","link","useSiteData","owner","home","social","ProfileConfig","showProfileImage","Image","headerImageFileId","firstName","surName","tagLine","Socials","socialHandles","cx","cy","r","channel","description","to","slug","t","Arrow","bioAttributes","MinimalProfileFields","body","biographyAttributes","BiographyBlock","children","whiteSpace","useBiography","bio","props","channels","useChannels","connections","useConnections","leadText","channelId","item","index","require","BlogChannelTeaser","setIndex","disableAutomaticIndexCalculcation","setDisableAutomaticIndexCalculation","maxIndex","setMaxIndex","scrollContainer","blogPosts","useBlogPosts","doScroll","direction","newIndex","scrollTo","left","behavior","scrollWidth","calculateIndex","calculcatedIndex","scrollLeft","onScroll","blog","BlogTeaser","linkRoot","onClick","imageTargetDrive","primaryImageFileId","caption","Date","dateUnixTime","toLocaleDateString","template","HomePageTheme","convertTextToSlug","split","join","toLowerCase","clearDuplicateBlogs","blogs","currBlog","some","fetchBlogData","foundBlogPosts","itemKey","entries","keys","sort","a","b","blogPostReadonlyProvider","getPosts","posts","getRecentPosts","onError","er","console","log","channelSlug","parseTemplate","templateId","parseInt","ChannelTemplate","fetchChannelData","getChannels","activeChannel","pageSize","fetchConnections","circleNetworkReadOnlyProvider","getConnections","pageNumber","results","observer","listenerCallbacks","WeakMap","handleIntersections","forEach","callback","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","IntersectionObserver","rootMargin","threshold","elem","set","observe"],"sourceRoot":""}