{"version":3,"file":"static/js/618.887c938f.chunk.js","mappings":"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","sources":["components/Icons/Arrow/Arrow.tsx","hooks/intersection/useIntersection.ts","hooks/image/useImage.ts","hooks/image/useTinyThumb.ts","components/Image/Image.tsx","hooks/link/useLink.ts","components/Layout/Links/Links.tsx","components/Templates/Home/Common/ProfileHero/ProfileHero.tsx","components/Icons/Bubble/Bubble.tsx","components/Icons/Eye/Eye.tsx","components/Templates/Home/Common/ChannelTeaser/ChannelTeaser.tsx","hooks/biography/useBiography.ts","components/Templates/Home/Common/Biography/Biography.tsx","components/Templates/Home/Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem.tsx","components/Templates/Home/Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll.tsx","components/Templates/Home/Classic/HomeClassic.tsx","hooks/connections/useConnections.ts","components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.tsx","components/Templates/Home/Content/HomeContent.tsx","components/Templates/Home/Cover/HomeCover.tsx","components/Templates/Home/Home.tsx","helpers/common.ts","hooks/blog/useBlogPosts.ts","hooks/blog/useChannels.ts","webpack://public-app/./src/components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.css?19d7"],"sourcesContent":["import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (elem: React.RefObject<HTMLElement>, callback: () => void) => {\n  useEffect(() => {\n    const target = elem.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, []);\n};\n","import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  PublicClient,\n  HomePageConfig,\n  TargetDrive,\n  ThumbSize,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId: string | undefined, imageDrive?: TargetDrive, size?: ThumbSize) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const fetchImageData = async (\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive,\n    size?: ThumbSize\n  ) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n    return await client.mediaProvider.getDecryptedImageUrl(\n      imageDrive ?? defaultDrive,\n      imageFileId,\n      size\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive, size],\n      () => fetchImageData(imageFileId, imageDrive, size),\n      { refetchOnMount: false, refetchOnWindowFocus: false, staleTime: Infinity }\n    ),\n    testCache: (imageFileId: string, imageDrive: any) => {\n      const cache = queryClient.getQueryData(['image', imageFileId, imageDrive]);\n      return !!cache;\n    },\n  };\n};\n\nexport default useImage;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  PublicClient,\n  HomePageConfig,\n  TargetDrive,\n  DataUtil,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useTinyThumb = (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Look for tiny thumb in already fetched data:\n    const thumbFromStaticFile = await client.fileReadOnlyProvider.getFileEntryFromCache(\n      imageFileId\n    );\n    if (thumbFromStaticFile?.[0]?.header.fileMetadata.appData.previewThumbnail) {\n      const previewThumbnail = thumbFromStaticFile[0].header.fileMetadata.appData.previewThumbnail;\n      const buffer = DataUtil.base64ToUint8Array(previewThumbnail.content);\n      const url = window.URL.createObjectURL(new Blob([buffer]));\n\n      return {\n        naturalSize: { width: previewThumbnail.pixelWidth, height: previewThumbnail.pixelHeight },\n        sizes: thumbFromStaticFile[0].header.fileMetadata.appData.additionalThumbnails ?? [],\n        url,\n      };\n    }\n\n    return await client.mediaProvider.getDecryptedThumbnailMeta(\n      imageDrive ?? defaultDrive,\n      imageFileId\n    );\n  };\n\n  return useQuery(\n    ['tinyThumb', imageFileId, imageDrive],\n    () => fetchImageData(imageFileId, imageDrive),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }\n  );\n};\n\nexport default useTinyThumb;\n","import { TargetDrive, ThumbSize } from '@youfoundation/transit-lib';\nimport { useEffect, useRef, useState } from 'react';\nimport useImage from '../../hooks/image/useImage';\nimport useTinyThumb from '../../hooks/image/useTinyThumb';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  cover?: boolean;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, cover, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const [loadSize, setLoadSize] = useState<ThumbSize | 'full' | undefined>(undefined);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: thumbMeta } = useTinyThumb(isInView ? fileId : undefined, targetDrive);\n  const {\n    fetch: { data: imageUrl },\n    testCache,\n  } = useImage(\n    loadSize !== undefined ? fileId : undefined,\n    targetDrive,\n    loadSize !== 'full' ? loadSize : undefined\n  );\n\n  useIntersection(imgRef, () => {\n    if (fileId && testCache(fileId, targetDrive)) {\n      findLoadOptimalSize();\n    }\n    setIsInView(true);\n  });\n\n  useEffect(() => {\n    if (thumbMeta && thumbMeta.url?.length) {\n      // Set to load full, with timeout to allow other tinies to load\n      setTimeout(() => {\n        findLoadOptimalSize();\n      }, 100);\n    }\n  }, [thumbMeta]);\n\n  const findLoadOptimalSize = () => {\n    if (!thumbMeta?.sizes?.length || !imgRef.current) {\n      setLoadSize('full');\n      return;\n    }\n\n    const targetWidth = imgRef.current?.clientWidth;\n    const targetHeight = imgRef.current?.clientHeight;\n\n    const matchingSize = thumbMeta.sizes.find((size) => {\n      return targetWidth < size.pixelWidth && targetHeight < size.pixelHeight;\n    });\n\n    setLoadSize(matchingSize ?? 'full');\n  };\n\n  const state: 'idle' | 'loading-tiny' | 'tiny' | 'loading-full' | 'loaded' = loadSize\n    ? imageUrl\n      ? 'loaded'\n      : 'loading-full'\n    : isInView\n    ? thumbMeta && thumbMeta.url?.length\n      ? 'tiny'\n      : 'loading-tiny'\n    : 'idle';\n\n  return (\n    <figure\n      className={`${\n        className?.indexOf('absolute') !== -1 ? '' : 'relative'\n      } overflow-hidden ${className}`}\n    >\n      {state !== 'loading-tiny' ? (\n        <img\n          src={state === 'loaded' ? imageUrl : thumbMeta?.url}\n          alt={isInView && thumbMeta?.url ? alt : ' '}\n          className={`${state !== 'loaded' && 'blur-[50px]'} ${\n            cover ? 'h-full w-full object-cover' : ''\n          }`}\n          title={\n            title ||\n            `${fileId}@${\n              loadSize !== undefined && loadSize !== 'full'\n                ? `${loadSize.pixelWidth}x${loadSize.pixelHeight}`\n                : loadSize\n            }`\n          }\n          ref={imgRef}\n          width={thumbMeta?.naturalSize?.width}\n          height={thumbMeta?.naturalSize?.height}\n        />\n      ) : null}\n    </figure>\n  );\n};\n\nexport default Image;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  Attribute,\n  LinkProfileFields,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useLink = () => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchData: () => Promise<\n    { text: string; target: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('profile.json');\n    if (fileData.has('link')) {\n      const linkAttributes = fileData.get('link')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          text: attribute.data[LinkProfileFields.LinkText] as string,\n          target: attribute.data[LinkProfileFields.LinkTarget] as string,\n          id: attribute.id,\n        };\n      });\n      if (linkAttributes?.length) {\n        return linkAttributes;\n      }\n    }\n\n    const linkAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.Link.type.toString()\n    );\n\n    return linkAttributes?.versions.map((attribute) => {\n      return {\n        text: attribute.data[LinkProfileFields.LinkText] as string,\n        target: attribute.data[LinkProfileFields.LinkTarget] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['link'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useLink;\n","import useLink from '../../../hooks/link/useLink';\n\nconst Links = ({ className, style }: { className: string; style?: 'secondary' }) => {\n  const { data: links } = useLink();\n\n  if (!links) {\n    return null;\n  }\n\n  const buttonClass =\n    style === 'secondary'\n      ? 'border-gray border-[1px] py-2 px-4 hover:bg-gray-100 rounded'\n      : 'rounded border-0 bg-gray-500 py-2 px-4 text-white hover:bg-gray-600';\n\n  return (\n    <div className={`-mx-1 flex flex-row flex-wrap ${className}`}>\n      {links.map((link) => (\n        <a\n          href={link.target}\n          key={link.target}\n          className={`m-1 block focus:outline-none ${buttonClass}`}\n        >\n          {link.text}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default Links;\n","import { BuiltInProfiles, HomePageConfig, ProfileConfig } from '@youfoundation/transit-lib';\nimport useSiteData from '../../../../../hooks/siteData/useSiteData';\nimport Image from '../../../../Image/Image';\nimport Links from '../../../../Layout/Links/Links';\nimport Socials from '../../../../Layout/Socials/Socials';\n\nconst ProfileHero = () => {\n  const { owner, home, social } = useSiteData().data ?? {};\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  const showProfileImage = owner?.profileImageId && targetDrive;\n\n  return (\n    <section className=\"bg-slate-100 dark:bg-slate-800\">\n      <div className=\"relative h-[27vh] min-h-[330px]\">\n        <Image\n          fileId={home?.headerImageFileId}\n          targetDrive={HomePageConfig.HomepageTargetDrive}\n          className=\"absolute inset-0\"\n          cover={true}\n        />\n        <div className=\"container absolute top-0 left-0 right-0 bottom-0 mx-auto flex justify-center px-5 md:block\">\n          {showProfileImage ? (\n            <div className=\"absolute bottom-[-4.5rem] h-60 w-60 overflow-hidden rounded-full border-8 border-neutral-200 md:bottom-[-7.5rem] \">\n              <Image\n                fileId={owner?.profileImageId}\n                targetDrive={targetDrive}\n                className=\"h-full w-full\"\n                cover={true}\n              />\n            </div>\n          ) : null}\n        </div>\n      </div>\n      {/* min height of 7.5 rem to ensure sufficient spacing after the hero picture to support the offset of the profile picture*/}\n      <div className=\"container mx-auto flex min-h-[8.5rem] px-5 dark:text-white xl:h-[8.5rem]\">\n        <div className={`my-auto w-full ${showProfileImage ? 'pt-[6rem] md:py-4 md:pl-60' : ''}`}>\n          <div className={`flex flex-col ${showProfileImage ? 'md:pl-10' : ''} lg:flex-row`}>\n            <h1 className=\"text-center text-2xl md:text-left\">\n              {`${owner?.firstName ?? ''} ${owner?.surName ?? ''}`}\n              <br />\n              <small>{home?.tagLine}</small>\n            </h1>\n            <div className=\"mt-10 mb-5 flex flex-col justify-center md:my-auto md:ml-auto\">\n              <Socials\n                socialHandles={social}\n                className=\"mt-4 justify-center sm:mt-0 md:ml-auto md:justify-start\"\n              />\n              <Links className=\"mt-3 justify-center md:justify-end\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileHero;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Eye: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n};\n\nexport default Eye;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../../../helpers/i18n/dictionary';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\n\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Bubble from '../../../../Icons/Bubble/Bubble';\nimport Eye from '../../../../Icons/Eye/Eye';\n\ninterface ChannelTeaserProps {\n  className?: string;\n  channel: ChannelDefinitionVm;\n}\n\nconst ChannelTeaser: FC<ChannelTeaserProps> = ({ className, channel }) => {\n  return (\n    <div className={className}>\n      <div className=\"relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 pt-16 pb-24 dark:bg-gray-800 dark:bg-opacity-40\">\n        {/* <h2 className=\"title-font mb-1 text-xs font-medium tracking-widest text-gray-400 dark:text-gray-500\">\n          {channel.category}\n        </h2> */}\n        <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n          {channel.name}\n        </h1>\n        {channel.description && <p className=\"mb-3 leading-relaxed\">{channel.description}</p>}\n        <Link\n          className=\"inline-flex items-center text-indigo-500\"\n          to={`/home/blog/${channel.slug ?? '#'}`}\n        >\n          {t('learn more')}\n          <Arrow className=\"ml-2 h-4 w-4\" />\n        </Link>\n        <div className=\"absolute bottom-0 left-0 mt-2 flex w-full justify-end py-4 px-8 text-center leading-none text-gray-400 dark:text-gray-600 \">\n          <span className=\"mr-3 inline-flex items-center border-r-2 border-gray-200 py-1 pr-3 text-sm leading-none dark:border-gray-700\">\n            <Eye className=\"mr-1 h-4 w-4\" />\n            1.2K\n          </span>\n          <span className=\"inline-flex items-center text-sm leading-none\">\n            <Bubble className=\"mr-1 h-4 w-4\" />6\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ChannelTeaser;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinitions,\n  BuiltInProfiles,\n  PublicClient,\n  MinimalProfileFields,\n  Attribute,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useBiography = () => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchData: () => Promise<\n    { title: string; body: string; id: string }[] | undefined\n  > = async () => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('profile.json');\n    if (fileData.has('bio')) {\n      const bioAttributes = fileData.get('bio')?.map((entry) => {\n        const attribute = entry.payload as Attribute;\n\n        return {\n          title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n          body: attribute.data[MinimalProfileFields.FullBioId] as string,\n          id: attribute.id,\n        };\n      });\n      if (bioAttributes?.length) {\n        return bioAttributes;\n      }\n    }\n\n    const biographyAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.FullBio.type.toString()\n    );\n\n    return biographyAttributes?.versions.map((attribute) => {\n      return {\n        title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n        body: attribute.data[MinimalProfileFields.FullBioId] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['biography'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBiography;\n","import { ReactNode } from 'react';\nimport useBiography from '../../../../../hooks/biography/useBiography';\n\nconst Biography = ({ className }: { className: string }) => {\n  const { data } = useBiography();\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <div className={className}>\n      {data.map((bio) => {\n        return (\n          <BiographyBlock title={bio.title} children={bio.body} key={bio.id} className=\"my-5\" />\n        );\n      })}\n    </div>\n  );\n};\n\nconst BiographyBlock = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: string | ReactNode;\n  className: string;\n}) => {\n  return (\n    <div\n      className={`relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 py-12 dark:bg-gray-800 dark:bg-opacity-40 ${className}`}\n    >\n      <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n        {title}\n      </h1>\n      <p className=\"leading-relaxed\" style={{ whiteSpace: 'pre-line' }}>\n        {children}\n      </p>\n    </div>\n  );\n};\n\nexport default Biography;\n","const ConnectionTeaser = () => {\n  return (\n    <div className=\"w-full p-2 md:w-1/2 lg:w-1/3\">\n      <a href=\"\" className=\"contents\">\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 p-4 hover:bg-gray-200 dark:border-gray-700 dark:hover:bg-gray-800\">\n          <img\n            alt=\"team\"\n            className=\"mr-4 h-16 w-16 flex-shrink-0 rounded-full bg-gray-100 object-cover object-center\"\n            src=\"https://dummyimage.com/80x80\"\n          />\n          <div className=\"flex-grow\">\n            <h2 className=\"title-font font-medium text-gray-900 dark:text-white\">\n              Gandalf the Grey\n            </h2>\n            <p className=\"text-gray-500\">Wizard</p>\n            <p className=\"text-right text-sm text-gray-500\">gandalf-the-grey.digital</p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectionTeaser;\n","import { t } from '../../../../../../helpers/i18n/dictionary';\nimport Arrow from '../../../../../Icons/Arrow/Arrow';\n\nconst ConnectionTeaserAll = () => {\n  return (\n    <div className=\"w-full p-2 md:w-1/2 lg:w-1/3\">\n      <a href=\"\" className=\"contents\">\n        <div className=\"flex h-full items-center rounded-lg border border-gray-200 bg-gray-100 p-4 hover:bg-gray-200 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700\">\n          {t('See more')} <Arrow className=\"ml-auto h-5 w-5\" />\n        </div>\n      </a>\n    </div>\n  );\n};\nexport default ConnectionTeaserAll;\n","import ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Biography from '../Common/Biography/Biography';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Arrow from '../../../Icons/Arrow/Arrow';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\n\nconst HomeClassic = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n\n  return (\n    <>\n      <ProfileHero />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        {props?.leadText && (\n          <div className=\"container mx-auto px-5 pt-12\">\n            <div className=\"lg:w-2/3\">{props.leadText}</div>\n          </div>\n        )}\n        <div className=\"container mx-auto px-5\">\n          <Biography className=\"my-20 lg:w-2/3\" />\n\n          <div className=\"my-20\">\n            <h2 className=\"mb-5 text-3xl\">{t('blog')}</h2>\n            <div className=\"-mx-4 flex flex-wrap\">\n              {channels?.map((channel) => {\n                return (\n                  <ChannelTeaser\n                    key={channel.channelId}\n                    channel={channel}\n                    className={'w-full p-4 lg:w-1/2'}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"my-20\">\n            <h2 className=\"mb-5 text-3xl\">{t('Connections')}</h2>\n            <div className=\"-m-3 flex flex-wrap\">\n              {Array.from('x'.repeat(5)).map((item, index) => {\n                return <ConnectionTeaser key={index} />;\n              })}\n              <ConnectionTeaserAll />\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeClassic;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, PublicClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret, isAuthenticated } = useAuth();\n\n  const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n  const fetchConnections = async () => {\n    if (!getSharedSecret()) {\n      return;\n    }\n    return (\n      await client.circleNetworkReadOnlyProvider.getConnections({\n        pageNumber: 1,\n        pageSize: 10,\n      })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['connections'], () => fetchConnections(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { BlogConfig, BlogContent, TargetDrive } from '@youfoundation/transit-lib';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useBlogPosts from '../../../../../hooks/blog/useBlogPosts';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Image from '../../../../Image/Image';\n\nrequire('./BlogChannelTeaser.css');\n\ninterface BlogChannelTeaserProps {\n  className?: string;\n  title: string;\n  channel: ChannelDefinitionVm;\n}\n\nexport const BlogChannelTeaser: FC<BlogChannelTeaserProps> = ({ className, title, channel }) => {\n  const [index, setIndex] = useState(0);\n  const [disableAutomaticIndexCalculcation, setDisableAutomaticIndexCalculation] = useState(false);\n  const [maxIndex, setMaxIndex] = useState(1);\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const { blogPosts } = useBlogPosts({ channelId: channel?.channelId }).data ?? {};\n\n  const doScroll = (direction: number) => {\n    if (scrollContainer?.current) {\n      const newIndex = index + direction;\n      setIndex(newIndex);\n      setDisableAutomaticIndexCalculation(true);\n\n      scrollContainer.current.scrollTo({\n        left: newIndex * scrollContainer.current.clientWidth,\n        behavior: 'smooth',\n      });\n      setMaxIndex(scrollContainer.current.scrollWidth / scrollContainer.current.clientWidth - 1);\n    }\n  };\n\n  const calculateIndex = () => {\n    if (scrollContainer?.current && !disableAutomaticIndexCalculcation) {\n      const calculcatedIndex =\n        scrollContainer.current.scrollLeft / scrollContainer.current.clientWidth;\n      setIndex(calculcatedIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (disableAutomaticIndexCalculcation) {\n      setTimeout(() => {\n        setDisableAutomaticIndexCalculation(false);\n      }, 1000);\n    }\n  }, [disableAutomaticIndexCalculcation]);\n\n  useEffect(() => {\n    // calculate index on load to ensure that there was no scroll state enforced by the browser\n    calculateIndex();\n  }, []);\n\n  return (\n    <section className={`body-font overflow-hidden ${className ?? ''}`}>\n      <div className=\"container mx-auto px-5 py-6\">\n        <h2 className=\"mb-5 text-2xl text-gray-600 dark:text-gray-300\">{title}</h2>\n        <div className=\"relative\">\n          <div\n            className=\"overflow-vertical-hidden overflow-horizontal-scroll -m-1 flex flex-nowrap\"\n            ref={scrollContainer}\n            onScroll={calculateIndex}\n          >\n            {blogPosts?.map((blog) => {\n              return (\n                <BlogTeaser\n                  className=\"w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/6\"\n                  blog={blog}\n                  linkRoot={`/home/blog/${channel.slug ? channel.slug + '/' : ''}`}\n                  key={`${blog.channelId}_${blog.id}`}\n                />\n              );\n            })}\n          </div>\n          {index !== 0 ? (\n            <div className=\"absolute top-0 bottom-20 left-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\" rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(-1)}\n              >\n                <Arrow className=\"rotate-180\" />\n              </button>\n            </div>\n          ) : null}\n          {index < maxIndex ? (\n            <div className=\"absolute bottom-20 top-0 right-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\"rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(+1)}\n              >\n                <Arrow />\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\ninterface BlogTeaserProps {\n  className: string;\n  blog: BlogContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  const imageTargetDrive: TargetDrive | undefined = blog.channelId\n    ? {\n        alias: blog.channelId,\n        type: BlogConfig.ChannelDriveType.toString(),\n      }\n    : undefined;\n\n  return (\n    <div className={`mb-0 flex-shrink-0 p-1  ${className}`}>\n      <Link to={linkRoot + (blog.slug ?? '#')} className=\"contents\">\n        <div className=\"aspect-video overflow-hidden transition-transform duration-300 hover:scale-110\">\n          {imageTargetDrive && blog.primaryImageFileId ? (\n            <Image\n              className=\"h-full w-full object-cover object-center\"\n              fileId={blog.primaryImageFileId}\n              targetDrive={imageTargetDrive}\n              alt=\"blog\"\n              cover={true}\n            />\n          ) : (\n            <div className=\"flex h-full items-center bg-slate-200 p-2  text-center dark:bg-slate-700\">\n              {blog.caption}\n            </div>\n          )}\n        </div>\n        <div>\n          <h2 className=\"title-font text-md fade-overflow max-h-14 pt-2 font-medium text-gray-900 dark:text-gray-200\">\n            {blog.caption}\n          </h2>\n          <span className=\"text-gray-500 md:pt-1 md:text-sm\">\n            {new Date(blog.dateUnixTime).toLocaleDateString()}\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import { t } from '../../../../helpers/i18n/dictionary';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport useConnections from '../../../../hooks/connections/useConnections';\n\nimport { BlogChannelTeaser } from '../Common/BlogChannelTeaser/BlogChannelTeaser';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ProfileHero from '../Common/ProfileHero/ProfileHero';\n\nconst HomeContent = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n  const { data: connections } = useConnections().fetch;\n\n  return (\n    <>\n      <ProfileHero />\n      <div className=\"container mx-auto px-5 pt-12\">{props.leadText}</div>\n      <div className=\"py-12\">\n        {channels?.map((channel) => {\n          return (\n            <BlogChannelTeaser key={channel.channelId} title={channel.name} channel={channel} />\n          );\n        })}\n      </div>\n      {connections?.length ? (\n        <div className=\"container mx-auto px-5\">\n          <div className=\"mt-0 mb-10\">\n            <h2 className=\"mb-5 text-2xl\">{t('Connections')}</h2>\n            <div className=\"-m-3 flex flex-wrap\">\n              {Array.from('x'.repeat(5)).map((item, index) => {\n                return <ConnectionTeaser key={index} />;\n              })}\n              <ConnectionTeaserAll />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default HomeContent;\n","import ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\nimport { BuiltInProfiles, ProfileConfig } from '@youfoundation/transit-lib';\nimport Image from '../../../Image/Image';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Links from '../../../Layout/Links/Links';\nimport ConnectionTeaser from '../Common/ConnectionTeaser/ConnectionTeaserItem/ConnectionTeaserItem';\nimport ConnectionTeaserAll from '../Common/ConnectionTeaser/ConnectionTeaserAll/ConnectionTeaserAll';\n\nconst HomeCover = (props: { leadText?: string }) => {\n  const { owner, home } = useSiteData().data ?? {};\n  const { channels } = useChannels().data ?? {};\n\n  if (!owner) {\n    return <></>;\n  }\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  return (\n    <>\n      <section className=\"body-font my-auto\">\n        <div className=\"container mx-auto\">\n          <div className=\"lg:flex\">\n            <div className=\"mb-12 lg:w-1/2\">\n              {owner?.profileImageId && targetDrive ? (\n                <Image\n                  fileId={owner?.profileImageId}\n                  targetDrive={targetDrive}\n                  className=\"w-full max-w-[none] sm:mx-auto md:max-w-[30rem] lg:max-w-[none]\"\n                />\n              ) : null}\n            </div>\n\n            <div className=\"flex h-full flex-col px-5 lg:w-1/2\">\n              <div className=\"px-5\">\n                <h1 className=\"mb-4 text-2xl dark:text-white\">\n                  {owner?.firstName ?? ''} {owner?.surName ?? ''}\n                  <br />\n                  <small>{home?.tagLine ?? ''}</small>\n                </h1>\n                {props?.leadText ?? ''}\n              </div>\n              <div className=\"mt-auto -mb-4 py-12\">\n                {channels?.map((channel) => {\n                  return (\n                    <ChannelTeaser\n                      key={channel.channelId}\n                      channel={channel}\n                      className={'w-full py-4'}\n                    />\n                  );\n                })}\n                <Links className=\"justify-center\" style=\"secondary\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-16 mb-20 px-5\">\n            <div className=\"-m-3 flex flex-wrap\">\n              {Array.from('x'.repeat(5)).map((item, index) => {\n                return <ConnectionTeaser key={index} />;\n              })}\n              <ConnectionTeaserAll />\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeCover;\n","import { Helmet } from 'react-helmet-async';\nimport { HomePageTheme } from '@youfoundation/transit-lib';\nimport useSiteData from '../../../hooks/siteData/useSiteData';\nimport HomeClassic from './Classic/HomeClassic';\nimport HomeContent from './Content/HomeContent';\nimport HomeCover from './Cover/HomeCover';\n\nconst Home = () => {\n  const { home, owner } = useSiteData().data ?? {};\n\n  if (!home) {\n    return <></>;\n  }\n\n  const renderBody = () => {\n    if (home?.template === HomePageTheme.SocialClassic.toString()) {\n      return <HomeClassic leadText={home.leadText} />;\n    } else if (home?.template === HomePageTheme.ContentProducer.toString()) {\n      return <HomeContent leadText={home.leadText} />;\n    } else {\n      return <HomeCover leadText={home?.leadText} />;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{owner?.firstName ?? 'Home'} | Youniverse</title>\n      </Helmet>\n      {renderBody()}\n    </>\n  );\n};\n\nexport default Home;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport const stringify = (obj: Record<string, unknown>) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, PublicClient } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogPosts = ({ channelId }: useBlogPostsProps) => {\n  const { getSharedSecret } = useAuth();\n  const pageSize = 10;\n\n  const fetchBlogData = async ({ channelId }: { channelId?: string }) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Blog posts\n    let foundBlogPosts: BlogContentVm[];\n\n    // If located in a specific channel, only fetch those, otherwise fallback to recents;\n    if (channelId) {\n      const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n      if (fileData.has(channelId)) {\n        foundBlogPosts =\n          fileData.get(channelId)?.map((entry) => {\n            const item = entry.payload;\n\n            return {\n              ...item,\n              slug: convertTextToSlug(typeof item.caption === 'string' ? item.caption : ''),\n              itemKey: `${item.channelId}_${item.id}`,\n            } as BlogContentVm;\n          }) ?? [];\n      } else {\n        if (fileData.entries.length > 1) {\n          foundBlogPosts = [];\n\n          for (const channelId of fileData.keys()) {\n            foundBlogPosts = [\n              ...foundBlogPosts,\n              ...(fileData.get(channelId)?.map((entry) => {\n                const item = entry.payload;\n\n                return {\n                  ...item,\n                  slug: convertTextToSlug(typeof item.caption === 'string' ? item.caption : ''),\n                  itemKey: `${item.channelId}_${item.id}`,\n                } as BlogContentVm;\n              }) ?? []),\n            ];\n\n            // Sorted descending\n            foundBlogPosts.sort((a, b) => b.dateUnixTime - a.dateUnixTime);\n          }\n        } else {\n          foundBlogPosts = (\n            await client.blogPostReadonlyProvider.getPosts(\n              channelId,\n              'Article',\n              undefined,\n              pageSize\n            )\n          ).posts;\n        }\n      }\n    } else {\n      foundBlogPosts = await client.blogPostReadonlyProvider.getRecentPosts('Article', pageSize);\n    }\n\n    // Process blog posts (Only until fixed in data upload)\n    const blogPosts = clearDuplicateBlogs(foundBlogPosts).map((item) => {\n      return {\n        ...item,\n        slug: convertTextToSlug(item.caption),\n        itemKey: `${item.channelId}_${item.id}`,\n      };\n    });\n\n    return { blogPosts };\n  };\n\n  return useQuery(['blogs_recents', channelId], () => fetchBlogData({ channelId }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    onError: (er) => {\n      console.log(er);\n    },\n  });\n};\n\n//// TODO Remove these temporary helpers:\nconst clearDuplicateBlogs = (blogs: BlogContent[]) => {\n  return blogs.reduce(\n    (returnVal, currBlog) =>\n      returnVal.some((blog) => blog.id === currBlog.id && blog.channelId === currBlog.channelId)\n        ? returnVal\n        : [...returnVal, currBlog],\n    <BlogContent[]>[]\n  );\n};\n\nexport default useBlogPosts;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useChannelsProps = {\n  channelSlug: string;\n};\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n  template: ChannelTemplate;\n}\n\nconst useChannels = ({ channelSlug }: useChannelsProps = { channelSlug: '' }) => {\n  const { getSharedSecret } = useAuth();\n\n  const parseTemplate = (templateId: number | undefined) => {\n    return parseInt(templateId + '') === ChannelTemplate.LargeCards\n      ? ChannelTemplate.LargeCards\n      : parseInt(templateId + '') === ChannelTemplate.ClassicBlog\n      ? ChannelTemplate.ClassicBlog\n      : ChannelTemplate.MasonryLayout;\n  };\n\n  const fetchChannelData = async (channelSlug: string | undefined) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinitionVm[];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('channels.json');\n\n    if (fileData.has('channels')) {\n      channels =\n        fileData.get('channels')?.map((entry: any) => {\n          const item = entry.payload;\n          return {\n            ...item,\n            slug: convertTextToSlug(item?.name),\n            template: parseTemplate(item?.templateId),\n          } as ChannelDefinitionVm;\n        }) ?? [];\n    } else {\n      channels = (await client.blogPostReadonlyProvider.getChannels()).map((item) => {\n        return {\n          ...item,\n          slug: convertTextToSlug(item?.name),\n          template: parseTemplate(item?.templateId),\n        } as ChannelDefinitionVm;\n      });\n    }\n\n    // Active Channel\n    const activeChannel = channelSlug\n      ? channels?.find((channel) => convertTextToSlug(channel.name) === channelSlug) ?? undefined\n      : undefined;\n\n    return { channels, activeChannel };\n  };\n\n  return useQuery(['channels', channelSlug], () => fetchChannelData(channelSlug), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["className","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","observer","defaultDrive","alias","HomePageConfig","type","BlogConfig","imageFileId","imageDrive","size","getSharedSecret","useAuth","queryClient","useQueryClient","fetchImageData","undefined","client","PublicClient","api","ApiType","sharedSecret","mediaProvider","getDecryptedImageUrl","fetch","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","testCache","getQueryData","fileReadOnlyProvider","getFileEntryFromCache","thumbFromStaticFile","header","fileMetadata","appData","previewThumbnail","buffer","DataUtil","content","url","window","URL","createObjectURL","Blob","naturalSize","width","pixelWidth","height","pixelHeight","sizes","additionalThumbnails","getDecryptedThumbnailMeta","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","target","callback","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","IntersectionObserver","rootMargin","threshold","elem","targetDrive","fileId","cover","alt","title","useState","isInView","setIsInView","loadSize","setLoadSize","imgRef","useRef","thumbMeta","useTinyThumb","data","useImage","imageUrl","findLoadOptimalSize","useEffect","current","set","observe","length","setTimeout","targetWidth","clientWidth","targetHeight","clientHeight","matchingSize","find","state","indexOf","src","ref","fetchData","GetFile","fileData","linkAttributes","map","attribute","payload","text","LinkProfileFields","id","profileDataProvider","getAttributeVersions","BuiltInProfiles","AttributeDefinitions","versions","style","links","useLink","buttonClass","link","href","useSiteData","owner","home","social","ProfileConfig","showProfileImage","profileImageId","Image","headerImageFileId","firstName","surName","tagLine","Socials","socialHandles","cx","cy","r","channel","name","description","to","slug","t","Arrow","bioAttributes","MinimalProfileFields","body","biographyAttributes","BiographyBlock","children","whiteSpace","useBiography","bio","props","channels","useChannels","leadText","channelId","Array","from","repeat","item","index","isAuthenticated","fetchConnections","circleNetworkReadOnlyProvider","getConnections","pageNumber","pageSize","results","require","BlogChannelTeaser","setIndex","disableAutomaticIndexCalculcation","setDisableAutomaticIndexCalculation","maxIndex","setMaxIndex","scrollContainer","blogPosts","useBlogPosts","doScroll","direction","newIndex","scrollTo","left","behavior","scrollWidth","calculateIndex","calculcatedIndex","scrollLeft","onScroll","blog","BlogTeaser","linkRoot","onClick","imageTargetDrive","primaryImageFileId","caption","Date","dateUnixTime","toLocaleDateString","connections","useConnections","template","HomePageTheme","convertTextToSlug","split","join","toLowerCase","clearDuplicateBlogs","blogs","reduce","returnVal","currBlog","some","fetchBlogData","foundBlogPosts","itemKey","keys","sort","a","b","blogPostReadonlyProvider","getPosts","posts","getRecentPosts","onError","er","console","log","channelSlug","parseTemplate","templateId","parseInt","ChannelTemplate","fetchChannelData","getChannels","activeChannel"],"sourceRoot":""}