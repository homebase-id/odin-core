{"version":3,"file":"static/js/915.b6e46e6a.chunk.js","mappings":"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","sources":["components/Icons/Arrow/Arrow.tsx","hooks/intersection/useIntersection.ts","components/Image/Image.tsx","components/Layout/Links/Links.tsx","components/Templates/Home/Common/ProfileHero/ProfileHero.tsx","components/Icons/Bubble/Bubble.tsx","components/Icons/Eye/Eye.tsx","components/Templates/Home/Common/ChannelTeaser/ChannelTeaser.tsx","hooks/biography/useBiography.ts","components/Templates/Home/Common/Biography/Biography.tsx","components/Templates/Home/Classic/HomeClassic.tsx","components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.tsx","components/Templates/Home/Content/HomeContent.tsx","components/Templates/Home/Cover/HomeCover.tsx","components/Templates/Home/Home.tsx","hooks/blog/useBlogPosts.ts","hooks/blog/useChannels.ts","hooks/image/useImage.ts","webpack://public-app/./src/components/Templates/Home/Common/BlogChannelTeaser/BlogChannelTeaser.css?19d7","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (elem: React.RefObject<HTMLElement>, callback: () => void) => {\n  useEffect(() => {\n    const target = elem.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, []);\n};\n","import { TargetDrive } from '@youfoundation/transit-lib';\nimport { useRef, useState } from 'react';\nimport useImage from '../../hooks/image/useImage';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: imageUrl } = useImage(isInView ? fileId : undefined, targetDrive);\n\n  useIntersection(imgRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <img\n      src={imageUrl}\n      alt={isInView && imageUrl ? alt : ' '}\n      className={`${className} ${\n        (!isInView || !imageUrl) && 'h-full w-full animate-pulse bg-slate-100'\n      }`}\n      title={title}\n      ref={imgRef}\n    />\n  );\n};\n\nexport default Image;\n","const Links = ({ className, style }: { className: string; style?: 'secondary' }) => {\n  const buttonClass =\n    style === 'secondary'\n      ? 'border-gray border-[1px] py-2 px-4 hover:bg-gray-100 rounded'\n      : 'rounded border-0 bg-gray-500 py-2 px-4 text-white hover:bg-gray-600';\n\n  return (\n    <div className={`-mx-1 flex flex-row flex-wrap ${className}`}>\n      <a href=\"//google.com\" className={`m-1 block focus:outline-none ${buttonClass}`}>\n        Merch Store\n      </a>\n      <a href=\"//google.com\" className={`m-1 block focus:outline-none ${buttonClass}`}>\n        Buy me a coffee\n      </a>\n      <a href=\"//google.com\" className={`m-1 block focus:outline-none ${buttonClass}`}>\n        My company\n      </a>\n    </div>\n  );\n};\n\nexport default Links;\n","import { BuiltInProfiles, HomePageConfig, ProfileConfig } from '@youfoundation/transit-lib';\nimport useImage from '../../../../../hooks/image/useImage';\nimport useSiteData from '../../../../../hooks/siteData/useSiteData';\nimport Image from '../../../../Image/Image';\nimport Links from '../../../../Layout/Links/Links';\nimport Socials from '../../../../Layout/Socials/Socials';\n\nconst ProfileHero = () => {\n  const { owner, home, social } = useSiteData().data ?? {};\n  const { data: imageUrl } = useImage(home?.headerImageFileId, HomePageConfig.HomepageTargetDrive); // Image is downloaded/decrypted directly as ProfileHero is always above the fold\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  const showProfileImage = owner?.profileImageId && targetDrive;\n\n  return (\n    <section className=\"bg-slate-100 dark:bg-slate-800\">\n      <div\n        style={{\n          backgroundImage: `url(${imageUrl})`,\n        }}\n        className=\"relative min-h-[25vh] bg-center bg-no-repeat\"\n      >\n        <div className=\"container absolute top-0 left-0 right-0 bottom-0 mx-auto flex justify-center px-5 md:block\">\n          {showProfileImage ? (\n            <div className=\"absolute bottom-[-4.5rem] h-60 w-60 overflow-hidden rounded-full border-8 border-neutral-200 md:bottom-[-7.5rem] \">\n              <Image\n                fileId={owner?.profileImageId}\n                targetDrive={targetDrive}\n                className=\"h-full w-full object-cover\"\n              />\n            </div>\n          ) : null}\n        </div>\n      </div>\n      {/* min height of 7.5 rem to ensure sufficient spacing after the hero picture to support the offset of the profile picture*/}\n      <div className=\"container mx-auto flex min-h-[8.5rem] px-5 dark:text-white\">\n        <div className={`my-auto w-full ${showProfileImage ? 'pt-[6rem] md:py-4 md:pl-60' : ''}`}>\n          <div className={`flex flex-col ${showProfileImage ? 'md:pl-10' : ''} lg:flex-row`}>\n            <h1 className=\"text-center text-2xl md:text-left\">\n              {`${owner?.firstName ?? ''} ${owner?.surName ?? ''}`}\n              <br />\n              <small>{home?.tagLine}</small>\n            </h1>\n            <div className=\"mt-10 mb-5 flex flex-col justify-center md:my-auto md:ml-auto\">\n              <Socials\n                socialHandles={social}\n                className=\"mt-4 justify-center sm:mt-0 md:ml-auto md:justify-start\"\n              />\n              <Links className=\"mt-3 justify-center md:justify-end\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileHero;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Eye: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n};\n\nexport default Eye;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../../../helpers/i18n/dictionary';\nimport { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\n\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Bubble from '../../../../Icons/Bubble/Bubble';\nimport Eye from '../../../../Icons/Eye/Eye';\n\ninterface ChannelTeaserProps {\n  className?: string;\n  channel: ChannelDefinitionVm;\n}\n\nconst ChannelTeaser: FC<ChannelTeaserProps> = ({ className, channel }) => {\n  return (\n    <div className={className}>\n      <div className=\"relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 pt-16 pb-24 dark:bg-gray-800 dark:bg-opacity-40\">\n        {/* <h2 className=\"title-font mb-1 text-xs font-medium tracking-widest text-gray-400 dark:text-gray-500\">\n          {channel.category}\n        </h2> */}\n        <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n          {channel.name}\n        </h1>\n        {channel.description && <p className=\"mb-3 leading-relaxed\">{channel.description}</p>}\n        <Link\n          className=\"inline-flex items-center text-indigo-500\"\n          to={`/home/blog/${channel.slug ?? '#'}`}\n        >\n          {t('learn more')}\n          <Arrow className=\"ml-2 h-4 w-4\" />\n        </Link>\n        <div className=\"absolute bottom-0 left-0 mt-2 flex w-full justify-end py-4 px-8 text-center leading-none text-gray-400 dark:text-gray-600 \">\n          <span className=\"mr-3 inline-flex items-center border-r-2 border-gray-200 py-1 pr-3 text-sm leading-none dark:border-gray-700\">\n            <Eye className=\"mr-1 h-4 w-4\" />\n            1.2K\n          </span>\n          <span className=\"inline-flex items-center text-sm leading-none\">\n            <Bubble className=\"mr-1 h-4 w-4\" />6\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ChannelTeaser;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinitions,\n  BuiltInProfiles,\n  DeliveryClient,\n  MinimalProfileFields,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useBiography = () => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchData: () => Promise<\n    { title: string; body: string; id: string }[] | undefined\n  > = async () => {\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    const biographyAttributes = await client.profileDataProvider.getAttributeVersions(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.FullBio.type.toString()\n    );\n\n    return biographyAttributes?.versions.map((attribute) => {\n      return {\n        title: attribute.data[MinimalProfileFields.ShortBioId] as string,\n        body: attribute.data[MinimalProfileFields.FullBioId] as string,\n        id: attribute.id,\n      };\n    });\n  };\n\n  return useQuery(['biography'], fetchData, {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBiography;\n","import { ReactNode } from 'react';\nimport useBiography from '../../../../../hooks/biography/useBiography';\n\nconst Biography = ({ className }: { className: string }) => {\n  const { data } = useBiography();\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <div className={className}>\n      {data.map((bio) => {\n        return (\n          <BiographyBlock title={bio.title} children={bio.body} key={bio.id} className=\"my-5\" />\n        );\n      })}\n    </div>\n  );\n};\n\nconst BiographyBlock = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: string | ReactNode;\n  className: string;\n}) => {\n  return (\n    <div\n      className={`relative h-full overflow-hidden rounded-lg bg-gray-100 bg-opacity-75 px-8 py-12 dark:bg-gray-800 dark:bg-opacity-40 ${className}`}\n    >\n      <h1 className=\"title-font mb-3 text-xl font-medium text-gray-900 dark:text-white sm:text-2xl\">\n        {title}\n      </h1>\n      <p className=\"leading-relaxed\" style={{ whiteSpace: 'pre-line' }}>\n        {children}\n      </p>\n    </div>\n  );\n};\n\nexport default Biography;\n","import ProfileHero from '../Common/ProfileHero/ProfileHero';\nimport ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Biography from '../Common/Biography/Biography';\nimport { t } from '../../../../helpers/i18n/dictionary';\n\nconst HomeClassic = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n\n  return (\n    <>\n      <ProfileHero />\n      <section className=\"body-font text-gray-600 dark:text-gray-400\">\n        {props?.leadText && (\n          <div className=\"container mx-auto px-5 pt-12\">\n            <div className=\"lg:w-2/3\">{props.leadText}</div>\n          </div>\n        )}\n        <div className=\"container mx-auto px-5\">\n          <Biography className=\"my-20 lg:w-2/3\" />\n\n          <div className=\"my-4\">\n            <h2 className=\"mb-5 text-3xl\">{t('blog')}</h2>\n            <div className=\"-mx-4 flex flex-wrap\">\n              {channels?.map((channel) => {\n                return (\n                  <ChannelTeaser\n                    key={channel.channelId}\n                    channel={channel}\n                    className={'w-full p-4 lg:w-1/2'}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeClassic;\n","import { BlogConfig, BlogContent, TargetDrive } from '@youfoundation/transit-lib';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useBlogPosts from '../../../../../hooks/blog/useBlogPosts';\nimport useChannels, { ChannelDefinitionVm } from '../../../../../hooks/blog/useChannels';\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Image from '../../../../Image/Image';\n\nrequire('./BlogChannelTeaser.css');\n\ninterface BlogChannelTeaserProps {\n  className?: string;\n  title: string;\n  channel: ChannelDefinitionVm;\n}\n\nexport const BlogChannelTeaser: FC<BlogChannelTeaserProps> = ({ className, title, channel }) => {\n  const [index, setIndex] = useState(0);\n  const [disableAutomaticIndexCalculcation, setDisableAutomaticIndexCalculation] = useState(false);\n  const [maxIndex, setMaxIndex] = useState(1);\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const { activeChannel } = useChannels({ channelSlug: channel.slug }).data ?? {};\n  const { blogPosts } = useBlogPosts({ channelId: activeChannel?.channelId, page: 1 }).data ?? {};\n\n  const doScroll = (direction: number) => {\n    if (scrollContainer?.current) {\n      const newIndex = index + direction;\n      setIndex(newIndex);\n      setDisableAutomaticIndexCalculation(true);\n\n      scrollContainer.current.scrollTo({\n        left: newIndex * scrollContainer.current.clientWidth,\n        behavior: 'smooth',\n      });\n      setMaxIndex(scrollContainer.current.scrollWidth / scrollContainer.current.clientWidth - 1);\n    }\n  };\n\n  const calculateIndex = () => {\n    if (scrollContainer?.current && !disableAutomaticIndexCalculcation) {\n      const calculcatedIndex =\n        scrollContainer.current.scrollLeft / scrollContainer.current.clientWidth;\n      setIndex(calculcatedIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (disableAutomaticIndexCalculcation) {\n      setTimeout(() => {\n        setDisableAutomaticIndexCalculation(false);\n      }, 1000);\n    }\n  }, [disableAutomaticIndexCalculcation]);\n\n  useEffect(() => {\n    // calculate index on load to ensure that there was no scroll state enforced by the browser\n    calculateIndex();\n  }, []);\n\n  return (\n    <section className={`body-font overflow-hidden ${className ?? ''}`}>\n      <div className=\"container mx-auto px-5 py-6\">\n        <h2 className=\"mb-5 text-2xl text-gray-600 dark:text-gray-300\">{title}</h2>\n        <div className=\"relative\">\n          <div\n            className=\"overflow-vertical-hidden overflow-horizontal-scroll -m-1 flex flex-nowrap\"\n            ref={scrollContainer}\n            onScroll={calculateIndex}\n          >\n            {blogPosts?.map((blog) => {\n              return (\n                <BlogTeaser\n                  className=\"w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/6\"\n                  blog={blog}\n                  linkRoot={`/home/blog/${channel.slug ? channel.slug + '/' : ''}`}\n                  key={`${blog.channelId}_${blog.id}`}\n                />\n              );\n            })}\n          </div>\n          {index !== 0 ? (\n            <div className=\"absolute top-0 bottom-20 left-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\" rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(-1)}\n              >\n                <Arrow className=\"rotate-180\" />\n              </button>\n            </div>\n          ) : null}\n          {index < maxIndex ? (\n            <div className=\"absolute bottom-20 top-0 right-[-1.6rem] flex w-14 flex-col justify-center bg-opacity-25 px-2\">\n              <button\n                className=\"rounded-full bg-gray-100 p-2 dark:bg-gray-900\"\n                onClick={() => doScroll(+1)}\n              >\n                <Arrow />\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\ninterface BlogTeaserProps {\n  className: string;\n  blog: BlogContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  const imageTargetDrive: TargetDrive | undefined = blog.channelId\n    ? {\n        alias: blog.channelId,\n        type: BlogConfig.ChannelDriveType.toString(),\n      }\n    : undefined;\n\n  return (\n    <div className={`mb-0 flex-shrink-0 p-1  ${className}`}>\n      <Link to={linkRoot + (blog.slug ?? '#')} className=\"contents\">\n        <div className=\"aspect-video overflow-hidden transition-transform duration-300 hover:scale-110\">\n          {imageTargetDrive && blog.primaryImageFileId ? (\n            <Image\n              className=\"h-full w-full object-cover object-center\"\n              fileId={blog.primaryImageFileId}\n              targetDrive={imageTargetDrive}\n              title={blog.primaryImageFileId}\n              alt=\"blog\"\n            />\n          ) : (\n            <div className=\"flex h-full items-center bg-slate-200 p-2  text-center dark:bg-slate-700\">\n              {blog.caption}\n            </div>\n          )}\n        </div>\n        <div>\n          <h2 className=\"title-font text-md fade-overflow max-h-14 pt-2 font-medium text-gray-900 dark:text-gray-200\">\n            {blog.caption}\n          </h2>\n          <span className=\"text-gray-500 md:pt-1 md:text-sm\">\n            {new Date(blog.dateUnixTime).toLocaleDateString()}\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import useChannels from '../../../../hooks/blog/useChannels';\n\nimport { BlogChannelTeaser } from '../Common/BlogChannelTeaser/BlogChannelTeaser';\nimport ProfileHero from '../Common/ProfileHero/ProfileHero';\n\nconst HomeContent = (props: { leadText?: string }) => {\n  const { channels } = useChannels().data ?? {};\n\n  return (\n    <>\n      <ProfileHero />\n      <div className=\"container mx-auto px-5 pt-12\">{props.leadText}</div>\n      <div className=\"py-12\">\n        {channels?.map((channel) => {\n          return (\n            <BlogChannelTeaser key={channel.channelId} title={channel.name} channel={channel} />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default HomeContent;\n","import ChannelTeaser from '../Common/ChannelTeaser/ChannelTeaser';\nimport useSiteData from '../../../../hooks/siteData/useSiteData';\nimport { BuiltInProfiles, ProfileConfig } from '@youfoundation/transit-lib';\nimport Image from '../../../Image/Image';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport Links from '../../../Layout/Links/Links';\n\nconst HomeCover = (props: { leadText?: string }) => {\n  const { owner, home } = useSiteData().data ?? {};\n  const { channels } = useChannels().data ?? {};\n\n  if (!owner) {\n    return <></>;\n  }\n\n  const targetDrive = {\n    alias: BuiltInProfiles.StandardProfileId.toString(),\n    type: ProfileConfig.ProfileDriveType.toString(),\n  };\n\n  return (\n    <>\n      <section className=\"body-font my-auto\">\n        <div className=\"container mx-auto\">\n          <div className=\"lg:flex\">\n            <div className=\"mb-12 lg:w-1/2\">\n              {owner?.profileImageId && targetDrive ? (\n                <Image\n                  fileId={owner?.profileImageId}\n                  targetDrive={targetDrive}\n                  className=\"w-full max-w-[none] sm:mx-auto md:max-w-[30rem] lg:max-w-[none]\"\n                />\n              ) : null}\n            </div>\n\n            <div className=\"flex h-full flex-col px-5 lg:w-1/2\">\n              <div className=\"px-5\">\n                <h1 className=\"mb-4 text-2xl dark:text-white\">\n                  {owner?.firstName ?? ''} {owner?.surName ?? ''}\n                  <br />\n                  <small>{home?.tagLine ?? ''}</small>\n                </h1>\n                {props?.leadText ?? ''}\n              </div>\n              <div className=\"mt-auto -mb-4 py-12\">\n                {channels?.map((channel) => {\n                  return (\n                    <ChannelTeaser\n                      key={channel.channelId}\n                      channel={channel}\n                      className={'w-full py-4'}\n                    />\n                  );\n                })}\n                <Links className=\"justify-center\" style=\"secondary\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomeCover;\n","import { Helmet } from 'react-helmet-async';\nimport { HomePageTheme } from '@youfoundation/transit-lib';\nimport useSiteData from '../../../hooks/siteData/useSiteData';\nimport HomeClassic from './Classic/HomeClassic';\nimport HomeContent from './Content/HomeContent';\nimport HomeCover from './Cover/HomeCover';\n\nconst Home = () => {\n  const { home, owner } = useSiteData().data ?? {};\n\n  if (!home) {\n    return <></>;\n  }\n\n  const renderBody = () => {\n    if (home?.template === HomePageTheme.SocialClassic.toString()) {\n      return <HomeClassic leadText={home.leadText} />;\n    } else if (home?.template === HomePageTheme.ContentProducer.toString()) {\n      return <HomeContent leadText={home.leadText} />;\n    } else {\n      return <HomeCover leadText={home?.leadText} />;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{owner?.firstName ?? 'Home'} | Youniverse</title>\n      </Helmet>\n      {renderBody()}\n    </>\n  );\n};\n\nexport default Home;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, DeliveryClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  page: number;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogPosts = ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n  const { getSharedSecret } = useAuth();\n  const pageSize = 10;\n\n  const fetchBlogData = async ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Blog posts\n    const loadBlogs = async (nextPage: number, channelId: string | undefined) => {\n      let foundBlogPosts: BlogContentVm[];\n\n      // If located in a specific channel, only fetch those, otherwise fallback to recents;\n      if (channelId) {\n        foundBlogPosts = await client.blogPostReadonlyProvider.getPosts(\n          channelId,\n          'Article',\n          nextPage,\n          pageSize\n        );\n      } else {\n        foundBlogPosts = await client.blogPostReadonlyProvider.getRecentPosts(\n          'Article',\n          nextPage,\n          pageSize\n        );\n      }\n\n      // Process blog posts (Only until fixed in data upload)\n      foundBlogPosts = clearDuplicateBlogs(foundBlogPosts).map((item) => {\n        return {\n          ...item,\n          slug: convertTextToSlug(item.caption),\n          itemKey: `${item.channelId}_${item.id}_page-${nextPage}`,\n        };\n      });\n\n      return foundBlogPosts;\n    };\n    let blogPosts = await loadBlogs(page, channelId);\n\n    // Process blog posts (Only until fixed in data upload)\n    blogPosts = clearDuplicateBlogs(blogPosts).map((item) => {\n      return { ...item, slug: convertTextToSlug(item.caption) };\n    });\n\n    return { blogPosts };\n  };\n\n  return useQuery(['blogs', channelId, page], () => fetchBlogData({ channelId, page }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    // staleTime: Infinity,\n  });\n};\n\n//// TODO Remove these temporary helpers:\nconst clearDuplicateBlogs = (blogs: BlogContent[]) => {\n  return blogs.reduce(\n    (returnVal, currBlog) =>\n      returnVal.some((blog) => blog.id === currBlog.id && blog.channelId === currBlog.channelId)\n        ? returnVal\n        : [...returnVal, currBlog],\n    <BlogContent[]>[]\n  );\n};\n\nconst convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport default useBlogPosts;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  ChannelDefinition,\n  ChannelTemplate,\n  DeliveryClient,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\ntype useChannelsProps = {\n  channelSlug: string;\n};\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n  template: ChannelTemplate;\n}\n\nconst useChannels = ({ channelSlug }: useChannelsProps = { channelSlug: '' }) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchChannelData = async (channelSlug: string | undefined) => {\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Channels\n    const channels = (await client.blogPostReadonlyProvider.getChannels()).map((item) => {\n      return {\n        ...item,\n        slug: convertTextToSlug(item.name),\n        template:\n          parseInt(item?.templateId + '') === ChannelTemplate.LargeCards\n            ? ChannelTemplate.LargeCards\n            : parseInt(item?.templateId + '') === ChannelTemplate.ClassicBlog\n            ? ChannelTemplate.ClassicBlog\n            : ChannelTemplate.MasonryLayout,\n      } as ChannelDefinitionVm;\n    });\n\n    // Active Channel\n    const activeChannel = channelSlug\n      ? channels?.find((channel) => convertTextToSlug(channel.name) === channelSlug) ?? undefined\n      : undefined;\n\n    return { channels, activeChannel };\n  };\n\n  return useQuery(['channels', channelSlug], () => fetchChannelData(channelSlug), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n\nconst convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  DeliveryClient,\n  HomePageConfig,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    // Doesn't work as only allowed for owner:\n    // const thumbUrl = await client.mediaProvider.getDecryptedThumbnailUrl(imageDrive ?? defaultDrive, imageFileId);\n    // console.log(thumbUrl);\n\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  return useQuery(\n    ['image', imageFileId, imageDrive],\n    () => fetchImageData(imageFileId, imageDrive),\n    { refetchOnMount: false, refetchOnWindowFocus: false, staleTime: Infinity }\n  );\n};\n\nexport default useImage;\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","observer","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","target","callback","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","undefined","IntersectionObserver","rootMargin","threshold","elem","targetDrive","fileId","alt","title","useState","isInView","setIsInView","imgRef","useRef","imageUrl","useImage","data","useEffect","current","set","observe","src","ref","buttonClass","style","href","useSiteData","owner","home","social","headerImageFileId","HomePageConfig","alias","BuiltInProfiles","type","ProfileConfig","showProfileImage","profileImageId","backgroundImage","Image","firstName","surName","tagLine","Socials","socialHandles","cx","cy","r","channel","name","description","to","slug","t","Arrow","getSharedSecret","useAuth","fetchData","client","DeliveryClient","api","ApiType","sharedSecret","profileDataProvider","getAttributeVersions","AttributeDefinitions","biographyAttributes","versions","map","attribute","MinimalProfileFields","body","id","useQuery","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","BiographyBlock","children","whiteSpace","useBiography","bio","props","channels","useChannels","leadText","channelId","require","BlogChannelTeaser","index","setIndex","disableAutomaticIndexCalculcation","setDisableAutomaticIndexCalculation","maxIndex","setMaxIndex","scrollContainer","activeChannel","channelSlug","blogPosts","useBlogPosts","page","doScroll","direction","newIndex","scrollTo","left","clientWidth","behavior","scrollWidth","calculateIndex","calculcatedIndex","scrollLeft","setTimeout","onScroll","blog","BlogTeaser","linkRoot","onClick","imageTargetDrive","BlogConfig","primaryImageFileId","caption","Date","dateUnixTime","toLocaleDateString","template","HomePageTheme","clearDuplicateBlogs","blogs","reduce","returnVal","currBlog","some","convertTextToSlug","text","split","join","toLowerCase","pageSize","fetchBlogData","loadBlogs","nextPage","blogPostReadonlyProvider","getPosts","foundBlogPosts","getRecentPosts","item","itemKey","fetchChannelData","getChannels","parseInt","templateId","ChannelTemplate","find","defaultDrive","imageFileId","imageDrive","fetchImageData","mediaProvider","getDecryptedImageUrl","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}