{"version":3,"file":"static/js/399.766f5df6.chunk.js","mappings":"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","sources":["components/Blog/Common/Card/BlogTeaserCard.tsx","components/ui/Icons/Arrow/Arrow.tsx","components/ui/Icons/Bubble/Bubble.tsx","components/ui/Icons/Triangle/Triangle.tsx","components/ui/LoadingParagraph/LoadingParagraph.tsx","hooks/blog/useBlogPosts.ts","hooks/blog/useChannel.ts","hooks/blog/useChannels.ts","hooks/blog/useBlog.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/ui/Buttons/ActionLink.tsx","components/RichTextRendere/RichTextRenderer.tsx","components/Blog/Common/RelatedBlogs/RelatedBlogs.tsx","templates/Blog/Detail/BlogDetail.tsx"],"sourcesContent":["import { Article, PostContent, getChannelDrive } from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Image from '../../../Image/Image';\nimport Arrow from '../../../ui/Icons/Arrow/Arrow';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport Triangle from '../../../ui/Icons/Triangle/Triangle';\nimport Bubble from '../../../ui/Icons/Bubble/Bubble';\nimport useChannel from '../../../../hooks/blog/useChannel';\n\ninterface BlogTeaserProps {\n  className?: string;\n  blog: PostContent;\n  isSingleCol?: boolean;\n  hideImageWhenNone?: boolean;\n  showChannel?: boolean;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({\n  className,\n  blog,\n\n  isSingleCol,\n  hideImageWhenNone,\n  showChannel,\n}) => {\n  const { data: channel } = useChannel({ channelId: blog.channelId });\n\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <Link to={`/home/posts/${channel?.slug}/${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"relative h-full overflow-hidden rounded-lg border border-gray-200 border-opacity-60 transition-colors hover:shadow-md dark:border-gray-800 hover:dark:shadow-slate-600 \">\n          {(!hideImageWhenNone || blog.primaryImageFileId) && (\n            <div className={`relative ${isSingleCol ? 'sm:p-6 sm:pb-2' : ''}`}>\n              {blog.primaryImageFileId ? (\n                <>\n                  <Image\n                    className={`${isSingleCol && 'sm:rounded-lg'} ${\n                      blog.type === 'Image' || blog.type === 'Video'\n                        ? 'h-full max-h-[30rem] w-auto'\n                        : 'h-64 w-full md:h-36 lg:h-48'\n                    } ${blog.type === 'Image' && ''} ${blog.type === 'Video' && 'aspect-video'}`}\n                    fileId={blog.primaryImageFileId}\n                    targetDrive={getChannelDrive(blog.channelId)}\n                    alt=\"blog\"\n                    cover={true}\n                  />\n                  {blog.type === 'Video' && (\n                    <>\n                      <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                    </>\n                  )}\n                </>\n              ) : !hideImageWhenNone ? (\n                <div\n                  className={`max-w-full overflow-hidden text-ellipsis whitespace-nowrap bg-slate-50 text-slate-200 dark:bg-slate-700 dark:text-slate-600 ${\n                    isSingleCol && 'sm:rounded-lg'\n                  } ${\n                    blog.type === 'Image' || blog.type === 'Video'\n                      ? 'h-full max-h-[30rem] w-auto'\n                      : 'h-64 w-full md:h-36 lg:h-48'\n                  } ${blog.type === 'Video' && 'aspect-video'}`}\n                >\n                  <p className=\"p-2 text-9xl \">{blog.caption}</p>\n                </div>\n              ) : null}\n            </div>\n          )}\n          <div className=\"px-6 py-4\">\n            <div className=\"flex flex-row text-foreground text-opacity-40\">\n              <span className=\"my-auto text-xs\">\n                {new Date(blog.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"my-auto ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {blog.type}\n                {showChannel && channel?.name ? ` - ${channel?.name}` : ''}\n              </h2>\n            </div>\n\n            <h1 className=\"text-lg font-medium text-foreground text-opacity-90\">{blog.caption}</h1>\n            {blog.type === 'Article' ? (\n              <>\n                <p className=\"my-3 leading-relaxed\">{(blog as Article).abstract}</p>\n                <div className=\"flex flex-wrap items-center \">\n                  <span className=\"inline-flex items-center text-button md:mb-2 lg:mb-0\">\n                    {t('Read more')}\n                    <Arrow className=\"ml-2 h-4 w-4\" />\n                  </span>\n                </div>\n              </>\n            ) : null}\n          </div>\n          <div className=\"absolute bottom-0 right-0 flex items-center p-5 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","const LoadingParagraph = ({ className = 'w-full h-2 m-0' }: { className?: string }) => {\n  return (\n    <div className={`${className} animate-pulse rounded bg-slate-100 dark:bg-slate-700`}></div>\n  );\n};\n\nexport default LoadingParagraph;\n","import { useQuery } from '@tanstack/react-query';\nimport { PostContent, PostType, PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  postType?: PostType;\n  pageSize?: number;\n};\n\nconst useBlogPosts = ({ channelId, postType, pageSize = 10 }: useBlogPostsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchBlogData = async ({ channelId }: { channelId?: string }) => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n\n    let foundBlogPosts: PostContent[];\n    // If located in a specific channel, only fetch those, otherwise fallback to recents;\n    if (channelId) {\n      if (fileData.has(channelId)) {\n        foundBlogPosts =\n          fileData\n            .get(channelId)\n            ?.map((entry) => entry.payload as PostContent)\n            .filter((post) => (postType ? post.type === postType : true)) ?? [];\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getPosts(channelId, postType, undefined, pageSize)\n        ).results.map((postFile) => postFile.content);\n      }\n    } else {\n      if (fileData.size >= 1) {\n        foundBlogPosts = [];\n\n        for (const channelId of fileData.keys()) {\n          foundBlogPosts = [\n            ...foundBlogPosts,\n            ...(fileData\n              .get(channelId)\n              ?.map((entry) => entry.payload as PostContent)\n              .filter((post) => (postType ? post.type === postType : true)) ?? []),\n          ];\n\n          // Sorted descending\n          foundBlogPosts.sort((a, b) => b.dateUnixTime - a.dateUnixTime);\n        }\n      } else {\n        foundBlogPosts = (\n          await client.blogPostReadonlyProvider.getRecentPosts(postType, pageSize)\n        ).results.map((postFile) => postFile.content);\n      }\n    }\n\n    return foundBlogPosts\n      .filter((post) => post !== undefined && post.id !== undefined)\n      .slice(0, pageSize);\n  };\n\n  return useQuery(['blog-recents', channelId], () => fetchBlogData({ channelId }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    onError: (er) => {\n      console.log(er);\n    },\n  });\n};\n\nexport default useBlogPosts;\n","import { useQuery } from '@tanstack/react-query';\nimport { BlogConfig, ChannelDefinition, PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nimport { ChannelDefinitionVm, parseChannelTemplate } from './useChannels';\n\ntype useChannelsProps = {\n  channelSlug?: string;\n  channelId?: string;\n};\n\nconst useChannel = ({ channelSlug, channelId }: useChannelsProps) => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async ({ channelSlug, channelId }: useChannelsProps) => {\n    if (!channelSlug && !channelId) {\n      return;\n    }\n\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channel: ChannelDefinition | undefined = undefined;\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const foundEntry = entry.find(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n              BlogConfig.ChannelDefinitionFileType &&\n            (channelSlug\n              ? possibleChannel.payload.slug === channelSlug\n              : possibleChannel.payload.channelId === channelId)\n        );\n        if (foundEntry) {\n          channel = foundEntry.payload as ChannelDefinition;\n        }\n      });\n    }\n\n    if (!channel) {\n      channel = channelSlug\n        ? await client.blogPostReadonlyProvider.getChannelDefinitionBySlug(channelSlug)\n        : channelId\n        ? await client.blogPostReadonlyProvider.getChannelDefinition(channelId)\n        : undefined;\n    }\n\n    if (channel) {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    }\n    return;\n  };\n\n  return useQuery(\n    ['channel', channelSlug || channelId],\n    () => fetchChannelData({ channelSlug, channelId }),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    }\n  );\n};\n\nexport default useChannel;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  BlogConfig,\n  ChannelDefinition,\n  ChannelTemplate,\n  PublicClient,\n} from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  template: ChannelTemplate;\n}\n\nexport const parseChannelTemplate = (templateId: number | undefined) => {\n  return parseInt(templateId + '') === ChannelTemplate.LargeCards\n    ? ChannelTemplate.LargeCards\n    : parseInt(templateId + '') === ChannelTemplate.MasonryLayout\n    ? ChannelTemplate.MasonryLayout\n    : ChannelTemplate.ClassicBlog;\n};\n\nconst useChannels = () => {\n  const { getSharedSecret, getApiType } = useAuth();\n\n  const fetchChannelData = async () => {\n    const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n    let channels: ChannelDefinition[] = [];\n\n    const fileData = await client.fileReadOnlyProvider.GetFile('blogs.json');\n    if (fileData) {\n      fileData.forEach((entry) => {\n        const entries = entry.filter(\n          (possibleChannel) =>\n            possibleChannel.header.fileMetadata.appData.fileType ===\n            BlogConfig.ChannelDefinitionFileType\n        );\n        channels = [\n          ...channels,\n          ...entries.map((entry) => {\n            return { ...entry.payload } as ChannelDefinition;\n          }),\n        ];\n      });\n    }\n\n    if (!channels?.length) {\n      channels = await client.blogPostReadonlyProvider.getChannels();\n    }\n\n    return channels.map((channel) => {\n      return {\n        ...channel,\n        template: parseChannelTemplate(channel?.templateId),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return useQuery(['channels'], () => fetchChannelData(), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n","import { useQuery } from '@tanstack/react-query';\nimport { PublicClient } from '@youfoundation/dotyoucore-js';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogProps = {\n  channelSlug?: string;\n  blogSlug?: string;\n};\n\nconst useBlog = ({ channelSlug, blogSlug }: useBlogProps = {}) => {\n  const { getSharedSecret, getApiType } = useAuth();\n  const client = new PublicClient({ api: getApiType(), sharedSecret: getSharedSecret() });\n\n  const fetchBlog = async ({ channelSlug, blogSlug }: useBlogProps) => {\n    if (!channelSlug || !blogSlug) {\n      return;\n    }\n\n    const data = await client.blogPostReadonlyProvider.getPostBySlug(channelSlug, blogSlug);\n    if (!data) {\n      return;\n    }\n\n    return { activeBlog: data.postFile.content, activeChannel: data.channel };\n  };\n\n  return useQuery(['blog', blogSlug], () => fetchBlog({ channelSlug, blogSlug }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useBlog;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport { FC, ReactNode } from 'react';\n\nexport type ActionLinkState = 'loading' | 'success' | 'error' | 'idle';\n\ntype ActionLinkProps = {\n  children?: ReactNode;\n  className?: string;\n  type?: 'primary' | 'secondary' | 'remove' | 'mute';\n  title?: string;\n  size?: 'large' | 'small';\n  onClick?: (e: unknown) => void;\n\n  download?: string;\n  href?: string;\n};\n\nconst ActionLink: FC<ActionLinkProps> = ({\n  children,\n  className,\n  type,\n  title,\n  size,\n  onClick,\n\n  download,\n  href,\n}) => {\n  const colorClasses =\n    type === 'secondary'\n      ? 'bg-button text-button-text hover:bg-button-hover'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : type === 'mute'\n      ? ''\n      : 'bg-button hover:bg-button-hover text-button-texte';\n\n  const widthClasses =\n    children && type !== 'mute'\n      ? `min-w-[6rem] ${className?.indexOf('w-') !== -1 ? '' : 'w-full sm:w-auto'}`\n      : '';\n\n  const sizeClasses =\n    size === 'large' ? 'px-5 py-3' : size === 'small' ? 'px-3 py-1 text-sm' : 'px-3 py-2';\n\n  return (\n    <a\n      className={`relative flex flex-row rounded-md text-left ${widthClasses} ${sizeClasses} ${colorClasses} ${className}`}\n      download={download}\n      href={href}\n      title={title}\n      onClick={onClick}\n    >\n      {children && <span className=\"mr-1\">{children}</span>}\n    </a>\n  );\n};\n\nexport default ActionLink;\n","import { TargetDrive } from '@youfoundation/dotyoucore-js';\nimport React, { ReactNode } from 'react';\nimport Image from '../Image/Image';\nimport ActionLink from '../ui/Buttons/ActionLink';\n\nconst RichTextRenderer = ({\n  body,\n  imageDrive,\n}: {\n  body: string | Record<string, unknown>[] | undefined;\n  imageDrive?: TargetDrive;\n}) => {\n  if (!body || typeof body === 'string') {\n    return <>{body}</>;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const render = (node: any): ReactNode => {\n    if ('text' in node) {\n      return renderLeaf(node, node.text, {});\n    } else {\n      const { type, ...attributes } = node;\n\n      return renderElement(\n        { type, attributes },\n        <>\n          {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            node.children?.map((childNode: any, index: number) => (\n              <React.Fragment key={index}>{render(childNode)}</React.Fragment>\n            ))\n          }\n        </>\n      );\n    }\n  };\n\n  const renderLeaf = (\n    leaf: { text?: string; bold?: boolean; italic?: boolean; underline?: boolean; code?: boolean },\n    children: ReactNode,\n    attributes: Record<string, unknown>\n  ) => {\n    if (leaf.bold) {\n      children = <strong className=\"font-bold\">{children}</strong>;\n    }\n\n    if (leaf.code) {\n      children = <code>{children}</code>;\n    }\n\n    if (leaf.italic) {\n      children = <em>{children}</em>;\n    }\n\n    if (leaf.underline) {\n      children = <u>{children}</u>;\n    }\n\n    return <span {...attributes}>{children}</span>;\n  };\n\n  const renderElement = (\n    node: {\n      type?: string;\n      attributes?: Record<string, unknown>;\n    },\n    children: ReactNode\n  ) => {\n    const { type, attributes } = node;\n\n    switch (type) {\n      case 'block-quote':\n        return (\n          <blockquote {...attributes} className=\"border-l-4 pl-2\">\n            {children}\n          </blockquote>\n        );\n      case 'bulleted-list':\n        return (\n          <ul {...attributes} className=\"list-disc pl-5\">\n            {children}\n          </ul>\n        );\n      case 'heading-one':\n        return (\n          <h1 {...attributes} className={'text-2xl'}>\n            {children}\n          </h1>\n        );\n      case 'heading-two':\n        return (\n          <h2 {...attributes} className={'text-xl'}>\n            {children}\n          </h2>\n        );\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n      case 'numbered-list':\n        return (\n          <ol {...attributes} className=\"list-decimal pl-5\">\n            {children}\n          </ol>\n        );\n      case 'image':\n        if (attributes && 'imageFileId' in attributes && imageDrive) {\n          return (\n            <Image\n              targetDrive={imageDrive}\n              fileId={attributes.imageFileId as string}\n              className=\"my-4 max-w-md\"\n            />\n          );\n        }\n        return <></>;\n      case 'link-button':\n        if (attributes && 'linkText' in attributes && attributes && 'uri' in attributes) {\n          return (\n            <div className=\"flex \">\n              <ActionLink\n                className=\"my-2 w-auto rounded-md bg-gray-500 px-3 py-2 text-left\"\n                href={attributes.uri as string}\n                type=\"secondary\"\n              >\n                {attributes.linkText as string}\n              </ActionLink>\n            </div>\n          );\n        }\n        return <></>;\n      default:\n        return (\n          <p {...attributes} className=\"mb-3\">\n            {children}\n          </p>\n        );\n    }\n  };\n\n  return (\n    <div>\n      {body.map((element, index) => {\n        return <React.Fragment key={index}>{render(element)}</React.Fragment>;\n      })}\n    </div>\n  );\n};\n\nexport default RichTextRenderer;\n","import { ChannelDefinition, PostContent } from '@youfoundation/dotyoucore-js';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport useBlogPosts from '../../../../hooks/blog/useBlogPosts';\nimport { ChannelDefinitionVm } from '../../../../hooks/blog/useChannels';\nimport BlogTeaser from '../Card/BlogTeaserCard';\n\nconst relatedBlogs = ({\n  blog,\n  channel,\n}: {\n  blog: PostContent;\n  channel: ChannelDefinitionVm | ChannelDefinition | undefined;\n}) => {\n  const { data: blogPosts } = useBlogPosts(\n    channel ? { channelId: channel.channelId, postType: 'Article' } : {}\n  );\n\n  if (!blogPosts) {\n    return <></>;\n  }\n\n  const filteredBlogPosts = blogPosts\n    .slice(0, 4)\n    .filter((relatedBlog) => relatedBlog.id !== blog.id)\n    .slice(0, 3);\n\n  return (\n    <section className=\"mt-10 bg-slate-50 pt-16 pb-10 dark:bg-slate-800 dark:bg-opacity-50\">\n      <div className=\"container mx-auto px-5\">\n        <h2 className=\"mb-10 text-2xl \">\n          {t('Latest posts')} {channel && <small>| {channel.name}</small>}\n        </h2>\n        <div className=\"-m-1 flex flex-row flex-wrap\">\n          {filteredBlogPosts.map((blog) => {\n            return <BlogTeaser blog={blog} key={blog.id} className={`p-1 sm:w-1/2 md:w-1/3`} />;\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default relatedBlogs;\n","import { Article, getChannelDrive } from '@youfoundation/dotyoucore-js';\nimport { useParams } from 'react-router-dom';\nimport useBlog from '../../../hooks/blog/useBlog';\nimport Image from '../../../components/Image/Image';\nimport RichTextRenderer from '../../../components/RichTextRendere/RichTextRenderer';\nimport RelatedBlogs from '../../../components/Blog/Common/RelatedBlogs/RelatedBlogs';\nimport { Helmet } from 'react-helmet-async';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport Triangle from '../../../components/ui/Icons/Triangle/Triangle';\nimport LoadingParagraph from '../../../components/ui/LoadingParagraph/LoadingParagraph';\n\nconst BlogDetail = () => {\n  const { channelKey, postKey } = useParams();\n  const { data: blogData, isLoading: blogDatLoading } = useBlog(\n    channelKey && postKey\n      ? {\n          channelSlug: channelKey,\n          blogSlug: postKey,\n        }\n      : undefined\n  );\n\n  if (!blogData && !blogDatLoading) {\n    return (\n      <section className=\"py-5\">\n        <div className=\"container mx-auto mb-10 px-5\">{t('No post found')}</div>\n      </section>\n    );\n  }\n\n  const post = blogData?.activeBlog;\n  const channel = blogData?.activeChannel;\n\n  return (\n    <>\n      <Helmet>\n        <title>{post?.caption ?? ''} | Youniverse</title>\n      </Helmet>\n\n      <section className=\"py-5\">\n        <div className=\"container mx-auto mb-10 px-5\">\n          <div className=\"max-w-3xl lg:w-2/3\">\n            <div className=\"mb-5 flex w-full flex-col\">\n              <div className=\"flex flex-row flex-wrap pb-2 text-gray-500\">\n                {!post ? (\n                  <LoadingParagraph className=\"mb-2 h-8 w-full max-w-xs\" />\n                ) : (\n                  <>\n                    <p className=\"title-font text-sm font-medium\">\n                      {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                        month: 'short',\n                        day: 'numeric',\n                        year: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                      })}\n                    </p>\n\n                    {post.type === 'Article' && (post as Article)?.readingTimeStats && (\n                      <>\n                        <span className=\"px-2 leading-4\">·</span>\n                        <p className=\"title-font text-sm font-medium\">\n                          {Math.ceil((post as Article)?.readingTimeStats?.minutes ?? 0)}\n                          {t('min read')}\n                        </p>\n                      </>\n                    )}\n                    <span className=\"px-2 leading-4\">·</span>\n                    <p className=\"title-font text-sm font-medium tracking-widest text-button\">\n                      {channel?.name} | {post.type}\n                    </p>\n                  </>\n                )}\n              </div>\n              {!post ? (\n                <LoadingParagraph className=\"h-8 w-full max-w-xs\" />\n              ) : (\n                <h1 className=\"title-font mb-4 text-2xl font-medium sm:text-3xl\">{post.caption}</h1>\n              )}\n            </div>\n\n            {post?.primaryImageFileId ? (\n              <div className=\"relative mb-5 sm:w-full\">\n                <Image\n                  className=\"rounded object-cover object-center\"\n                  fileId={post.primaryImageFileId}\n                  targetDrive={getChannelDrive(post.channelId)}\n                  alt=\"blog\"\n                />\n                {post.type === 'Video' && (\n                  <>\n                    <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                  </>\n                )}\n              </div>\n            ) : null}\n\n            {post?.type === 'Article' ? (\n              <p className=\"mb-5 text-base leading-relaxed text-gray-500\">\n                {(post as Article)?.abstract}\n              </p>\n            ) : null}\n\n            {!post ? (\n              <>\n                <LoadingParagraph className=\"mb-2 h-4 w-full\" />\n                <LoadingParagraph className=\"mb-2 h-4 w-full\" />\n                <LoadingParagraph className=\"mb-2 h-4 w-full\" />\n                <LoadingParagraph className=\"mb-2 h-4 w-full\" />\n                <LoadingParagraph className=\"mb-2 h-4 w-full\" />\n              </>\n            ) : (\n              <>\n                {post.type === 'Article' && (\n                  <div className=\"rich-text-content mb-5 leading-relaxed\">\n                    <RichTextRenderer\n                      body={(post as Article)?.body}\n                      imageDrive={getChannelDrive(post.channelId)}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      {post?.type === 'Article' && <RelatedBlogs blog={post} channel={channel} />}\n    </>\n  );\n};\n\nexport default BlogDetail;\n"],"names":["className","blog","isSingleCol","hideImageWhenNone","showChannel","channel","useChannel","channelId","data","to","slug","primaryImageFileId","type","fileId","targetDrive","getChannelDrive","alt","cover","caption","Date","dateUnixTime","toLocaleDateString","undefined","month","day","year","name","abstract","t","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","xmlns","postType","pageSize","useAuth","getSharedSecret","getApiType","fetchBlogData","client","PublicClient","api","sharedSecret","fileReadOnlyProvider","GetFile","fileData","has","foundBlogPosts","get","map","entry","payload","filter","post","blogPostReadonlyProvider","getPosts","results","postFile","content","size","keys","sort","a","b","getRecentPosts","id","slice","useQuery","refetchOnMount","refetchOnWindowFocus","onError","er","console","log","channelSlug","fetchChannelData","forEach","foundEntry","find","possibleChannel","header","fileMetadata","appData","fileType","BlogConfig","getChannelDefinitionBySlug","getChannelDefinition","template","parseChannelTemplate","templateId","staleTime","Infinity","parseInt","ChannelTemplate","channels","entries","length","getChannels","blogSlug","fetchBlog","getPostBySlug","activeBlog","activeChannel","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","children","title","onClick","download","href","colorClasses","widthClasses","sizeClasses","body","imageDrive","render","node","renderLeaf","text","attributes","renderElement","childNode","index","leaf","bold","code","italic","underline","Image","imageFileId","uri","linkText","element","blogPosts","useBlogPosts","filteredBlogPosts","relatedBlog","useParams","channelKey","postKey","useBlog","blogData","blogDatLoading","isLoading","hour","minute","readingTimeStats","Math","ceil","minutes","LoadingParagraph","Triangle","RelatedBlogs"],"sourceRoot":""}