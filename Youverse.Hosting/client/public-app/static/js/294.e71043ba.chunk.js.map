{"version":3,"file":"static/js/294.e71043ba.chunk.js","mappings":"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","sources":["components/Icons/Arrow/Arrow.tsx","hooks/intersection/useIntersection.ts","components/Image/Image.tsx","components/Templates/Blog/Common/Card/BlogTeaserCard.tsx","components/Templates/Blog/Overview/BlogOverview.tsx","components/Submenu/Submenu.tsx","components/Templates/Blog/Common/List/BlogTeaserList.tsx","hooks/blog/useBlogPosts.ts","hooks/blog/useChannels.ts","hooks/image/useImage.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Arrow: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 12h14\"></path>\n      <path d=\"M12 5l7 7-7 7\"></path>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (elem: React.RefObject<HTMLElement>, callback: () => void) => {\n  useEffect(() => {\n    const target = elem.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, []);\n};\n","import { TargetDrive } from '@youfoundation/dotyoucore-transit-lib';\nimport { useRef, useState } from 'react';\nimport useImage from '../../hooks/image/useImage';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: imageUrl } = useImage(isInView ? fileId : undefined, targetDrive);\n\n  useIntersection(imgRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <img\n      src={imageUrl}\n      alt={isInView && imageUrl ? alt : ' '}\n      className={`${className} ${\n        (!isInView || !imageUrl) && 'h-full w-full animate-pulse bg-slate-100'\n      }`}\n      title={title}\n      ref={imgRef}\n    />\n  );\n};\n\nexport default Image;\n","import {\n  BlogArticle,\n  BlogConfig,\n  BlogContent,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-transit-lib';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Image from '../../../../Image/Image';\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport { t } from '../../../../../helpers/i18n/dictionary';\n\ninterface BlogTeaserProps {\n  className?: string;\n  blog: BlogContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  const imageTargetDrive: TargetDrive | undefined = blog.channelId\n    ? {\n        alias: blog.channelId,\n        type: BlogConfig.ChannelDriveType.toString(),\n      }\n    : undefined;\n\n  return (\n    <div className={`${className ?? ''}`}>\n      <Link to={`${linkRoot}${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"h-full overflow-hidden rounded-lg border-2 border-gray-200 border-opacity-60 bg-white transition-colors duration-300 hover:bg-slate-50 dark:border-gray-800 dark:bg-gray-800 hover:dark:bg-slate-700\">\n          {blog.primaryImageFileId && imageTargetDrive ? (\n            <Image\n              className=\"h-64 w-full object-cover object-center md:h-36 lg:h-48\"\n              title={blog.primaryImageFileId}\n              fileId={blog.primaryImageFileId}\n              targetDrive={imageTargetDrive}\n              alt=\"blog\"\n            />\n          ) : null}\n          <div className=\"p-6\">\n            <h2 className=\"title-font mb-1 text-xs font-medium tracking-widest text-gray-400 dark:text-gray-600\">\n              {blog.type.toUpperCase()}\n            </h2>\n            <span className=\"text-gray-500 md:mt-1 md:text-sm\">\n              {new Date(blog.dateUnixTime).toLocaleDateString()}\n            </span>\n            <h1 className=\"title-font mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n              {blog.caption}\n            </h1>\n            {'abstract' in blog ? (\n              <p className=\"mb-3 leading-relaxed\">{(blog as BlogArticle).abstract}</p>\n            ) : null}\n            <div className=\"flex flex-wrap items-center \">\n              <span className=\"inline-flex items-center text-indigo-500 dark:text-indigo-400 md:mb-2 lg:mb-0\">\n                {t('learn more')}\n                <Arrow className=\"ml-2 h-4 w-4\" />\n              </span>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { Helmet } from 'react-helmet-async';\n\nimport Submenu from '../../../Submenu/Submenu';\nimport BlogTeaserList from '../Common/List/BlogTeaserList';\nimport BlogTeaserCard from '../Common/Card/BlogTeaserCard';\nimport { useParams } from 'react-router-dom';\nimport useBlogPosts, { BlogContentVm } from '../../../../hooks/blog/useBlogPosts';\nimport { ChannelTemplate } from '@youfoundation/dotyoucore-transit-lib';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport useChannels from '../../../../hooks/blog/useChannels';\nimport { t } from '../../../../helpers/i18n/dictionary';\n\nlet observer: IntersectionObserver | null;\n\nconst Overview = () => {\n  const { channelKey } = useParams();\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const { channels, activeChannel } =\n    useChannels(channelKey ? { channelSlug: channelKey } : undefined).data ?? {};\n\n  const {\n    data: nextPageData,\n    isFetched,\n    isLoading,\n  } = useBlogPosts({\n    channelId: activeChannel?.channelId,\n    page: pageIndex,\n  });\n\n  const [blogPostPages, setBlogPostPages] = useState<BlogContentVm[][]>([]);\n\n  const loadMoreRef = useRef<HTMLAnchorElement>(null);\n  const [shouldLoad, setShouldLoad] = useState(false);\n\n  const ListComponent = activeChannel\n    ? activeChannel.template === ChannelTemplate.LargeCards\n      ? CardBlogOverview\n      : activeChannel.template === ChannelTemplate.MasonryLayout\n      ? MasonryBlogOverview\n      : ListBlogOverview\n    : ListBlogOverview;\n  const linkRoot = `/home/blog/${activeChannel?.slug ? activeChannel.slug + '/' : 'all/'}`;\n\n  useEffect(() => {\n    if (!observer) {\n      observer = new IntersectionObserver(\n        (entries) => {\n          const first = entries[0];\n          if (first.isIntersecting) {\n            setShouldLoad(true);\n          }\n        },\n        { rootMargin: '0px 0px 200px 0px' } // Load the next when the \"Load more\" button comes in at 200px below the viewport\n      );\n    }\n\n    if (loadMoreRef.current) {\n      observer.observe(loadMoreRef.current);\n    }\n\n    return () => {\n      observer?.disconnect();\n      observer = null;\n    };\n  }, [loadMoreRef, loadMoreRef.current]);\n\n  useEffect(() => {\n    if (nextPageData?.blogPosts && blogPostPages.length < pageIndex) {\n      const newBlogPostPages = [...blogPostPages];\n      newBlogPostPages.push(nextPageData.blogPosts);\n\n      setBlogPostPages(newBlogPostPages);\n    }\n  }, [nextPageData?.blogPosts]);\n\n  useEffect(() => {\n    (async () => {\n      if (shouldLoad && isFetched) {\n        setPageIndex(pageIndex + 1);\n      }\n      setShouldLoad(false);\n    })();\n  }, [shouldLoad]);\n\n  const blogPosts = blogPostPages.flat(1);\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('blog')} | Youniverse</title>\n      </Helmet>\n\n      <section className=\"py-5\">\n        <div className=\"container mx-auto px-5\">\n          <section className=\"body-font text-gray-600 dark:text-gray-400\">\n            {channels?.length ? (\n              <Submenu\n                className=\"mb-8\"\n                items={[\n                  { key: '', title: t('all'), path: '/home/blog' },\n                  ...channels.map((channel) => {\n                    return {\n                      key: channel.channelId,\n                      title: channel.name,\n                      path: `/home/blog/${channel.slug}`,\n                    };\n                  }),\n                ]}\n              />\n            ) : null}\n            {blogPosts ? <ListComponent blogPosts={blogPosts} linkRoot={linkRoot} /> : null}\n\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                if (!isLoading) {\n                  setPageIndex(pageIndex + 1);\n                }\n                return false;\n              }}\n              className={`my-10 block w-full cursor-pointer rounded border-0 bg-indigo-500 py-2 px-4 text-center text-white hover:bg-indigo-600 focus:outline-none ${\n                !blogPosts?.length ? 'hidden' : ''\n              }`}\n              ref={loadMoreRef}\n            >\n              {isLoading ? t('loading') + '...' : t('load more')}\n            </a>\n          </section>\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst ListBlogOverview = ({\n  blogPosts,\n  linkRoot,\n}: {\n  blogPosts: BlogContentVm[];\n  linkRoot: string;\n}) => {\n  return (\n    <div className=\"-m-5 divide-y-2 divide-gray-100 dark:divide-gray-800\">\n      {blogPosts?.map((blog) => {\n        return <BlogTeaserList key={blog.itemKey} blog={blog} linkRoot={linkRoot} />;\n      })}\n    </div>\n  );\n};\n\nconst CardBlogOverview = ({\n  blogPosts,\n  linkRoot,\n}: {\n  blogPosts: BlogContentVm[];\n  linkRoot: string;\n}) => {\n  return (\n    <div className=\"-m-4 flex flex-wrap\">\n      {blogPosts?.map((blog) => {\n        return (\n          <BlogTeaserCard\n            key={blog.itemKey}\n            blog={blog}\n            className=\"p-4 md:w-1/2 lg:w-1/3 \"\n            linkRoot={linkRoot}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst MasonryBlogOverview = ({\n  blogPosts,\n  linkRoot,\n}: {\n  blogPosts: BlogContentVm[];\n  linkRoot: string;\n}) => {\n  const [cols, setCols] = useState(1);\n\n  /// Function to reorder the array to make it fit in the masonry layout which by\n  ///  default is ordered from top to bottom, instead of left to right\n  ///  credit: https://github.com/jessekorzan/masonry-css-js/blob/master/src/App.js\n  const reorder = (arr: BlogContentVm[], columns: number) => {\n    const cols = columns;\n    const out = [];\n    let col = 0;\n    while (col < cols) {\n      for (let i = 0; i < arr.length; i += cols) {\n        const _val = arr[i + col];\n        if (_val !== undefined) out.push(_val);\n      }\n      col++;\n    }\n    return out;\n  };\n\n  const calculateCols = useCallback(() => {\n    const windowWidth = document.documentElement.clientWidth;\n    const cols = windowWidth >= 1280 ? 4 : windowWidth >= 1024 ? 3 : windowWidth >= 640 ? 2 : 1;\n    setCols(cols);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', calculateCols);\n\n    calculateCols();\n\n    return () => {\n      window.removeEventListener('resize', calculateCols);\n    };\n  }, [calculateCols]);\n\n  return (\n    <div className=\"-my-4 gap-4 sm:columns-2 lg:columns-3 xl:columns-4\">\n      {reorder(blogPosts, cols).map((blog) => {\n        return (\n          <BlogTeaserCard className=\"py-2\" key={blog.itemKey} blog={blog} linkRoot={linkRoot} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Overview;\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: string; key: string; path: string }[];\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items }) => {\n  return (\n    <div className={`flex ${className}`}>\n      {items.map((item) => {\n        return (\n          // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n          <NavLink\n            className={({ isActive }) =>\n              `flex-grow cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                isActive\n                  ? 'border-indigo-500 text-indigo-500 dark:text-indigo-400'\n                  : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n              }`\n            }\n            to={item.path}\n            key={item.key}\n            end\n          >\n            {item.title}\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Submenu;\n","import {\n  BlogArticle,\n  BlogConfig,\n  BlogContent,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-transit-lib';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../../../helpers/i18n/dictionary';\nimport Arrow from '../../../../Icons/Arrow/Arrow';\nimport Image from '../../../../Image/Image';\n\ninterface BlogTeaserProps {\n  className?: string;\n  blog: BlogContent;\n  linkRoot: string;\n}\n\nconst BlogTeaser: FC<BlogTeaserProps> = ({ className, blog, linkRoot }) => {\n  const imageTargetDrive: TargetDrive | undefined = blog.channelId\n    ? {\n        alias: blog.channelId,\n        type: BlogConfig.ChannelDriveType.toString(),\n      }\n    : undefined;\n\n  return (\n    <div\n      className={`flex flex-nowrap px-5 py-8 transition-colors duration-200 hover:bg-slate-50 hover:dark:bg-slate-800 ${\n        className ?? ''\n      }`}\n    >\n      <Link to={`${linkRoot}${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"w-32 flex-shrink-0 pr-4 md:w-64 md:pr-8\">\n          {imageTargetDrive && blog.primaryImageFileId ? (\n            <Image\n              className=\"aspect-square w-full object-cover\"\n              title={blog.primaryImageFileId}\n              fileId={blog.primaryImageFileId}\n              targetDrive={imageTargetDrive}\n              alt=\"blog\"\n            />\n          ) : null}\n        </div>\n        <div className=\"flex flex-col md:flex-grow md:flex-row\">\n          <div className=\"flex flex-shrink-0 md:order-3 md:mb-0 md:mt-3 md:w-32 md:flex-col md:text-right lg:w-64\">\n            <span className=\"title-font font-semibold text-gray-700 dark:text-white\">\n              {blog.type.toUpperCase()}\n            </span>\n            <span className=\"pl-2 text-gray-500 md:mt-1 md:pl-0 md:text-sm\">\n              {new Date(blog.dateUnixTime).toLocaleDateString()}\n            </span>\n          </div>\n          <div className=\"md:order-2 md:flex-grow\">\n            <h2 className=\"title-font mb-2 text-2xl font-medium text-gray-900 dark:text-white\">\n              {blog.caption}\n            </h2>\n            {'abstract' in blog ? (\n              <p className=\"leading-relaxed\">{(blog as BlogArticle).abstract}</p>\n            ) : null}\n            <span className=\"mt-4 inline-flex items-center text-indigo-500\">\n              {t('learn more')}\n              <Arrow className=\"ml-2 h-4 w-4\" />\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, DeliveryClient } from '@youfoundation/dotyoucore-transit-lib';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  page: number;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogPosts = ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n  const { getSharedSecret } = useAuth();\n  const pageSize = 10;\n\n  const fetchBlogData = async ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Blog posts\n    const loadBlogs = async (nextPage: number, channelId: string | undefined) => {\n      let foundBlogPosts: BlogContentVm[];\n\n      // If located in a specific channel, only fetch those, otherwise fallback to recents;\n      if (channelId) {\n        foundBlogPosts = await client.blogPostReadonlyProvider.getPosts(\n          channelId,\n          'Article',\n          nextPage,\n          pageSize\n        );\n      } else {\n        foundBlogPosts = await client.blogPostReadonlyProvider.getRecentPosts(\n          'Article',\n          nextPage,\n          pageSize\n        );\n      }\n\n      // Process blog posts (Only until fixed in data upload)\n      foundBlogPosts = clearDuplicateBlogs(foundBlogPosts).map((item) => {\n        return {\n          ...item,\n          slug: convertTextToSlug(item.caption),\n          itemKey: `${item.channelId}_${item.id}_page-${nextPage}`,\n        };\n      });\n\n      return foundBlogPosts;\n    };\n    let blogPosts = await loadBlogs(page, channelId);\n\n    // Process blog posts (Only until fixed in data upload)\n    blogPosts = clearDuplicateBlogs(blogPosts).map((item) => {\n      return { ...item, slug: convertTextToSlug(item.caption) };\n    });\n\n    return { blogPosts };\n  };\n\n  return useQuery(['blogs', channelId, page], () => fetchBlogData({ channelId, page }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    // staleTime: Infinity,\n  });\n};\n\n//// TODO Remove these temporary helpers:\nconst clearDuplicateBlogs = (blogs: BlogContent[]) => {\n  return blogs.reduce(\n    (returnVal, currBlog) =>\n      returnVal.some((blog) => blog.id === currBlog.id && blog.channelId === currBlog.channelId)\n        ? returnVal\n        : [...returnVal, currBlog],\n    <BlogContent[]>[]\n  );\n};\n\nconst convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport default useBlogPosts;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  ChannelDefinition,\n  ChannelTemplate,\n  DeliveryClient,\n} from '@youfoundation/dotyoucore-transit-lib';\nimport useAuth from '../auth/useAuth';\n\ntype useChannelsProps = {\n  channelSlug: string;\n};\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n  template: ChannelTemplate;\n}\n\nconst useChannels = ({ channelSlug }: useChannelsProps = { channelSlug: '' }) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchChannelData = async (channelSlug: string | undefined) => {\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    // Channels\n    const channels = (await client.blogPostReadonlyProvider.getChannels()).map((item) => {\n      return {\n        ...item,\n        slug: convertTextToSlug(item.name),\n        template:\n          parseInt(item?.templateId + '') === ChannelTemplate.LargeCards\n            ? ChannelTemplate.LargeCards\n            : parseInt(item?.templateId + '') === ChannelTemplate.ClassicBlog\n            ? ChannelTemplate.ClassicBlog\n            : ChannelTemplate.MasonryLayout,\n      } as ChannelDefinitionVm;\n    });\n\n    // Active Channel\n    const activeChannel = channelSlug\n      ? channels?.find((channel) => convertTextToSlug(channel.name) === channelSlug) ?? undefined\n      : undefined;\n\n    return { channels, activeChannel };\n  };\n\n  return useQuery(['channels', channelSlug], () => fetchChannelData(channelSlug), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    staleTime: Infinity,\n  });\n};\n\nexport default useChannels;\n\nconst convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  BlogConfig,\n  DeliveryClient,\n  HomePageConfig,\n  TargetDrive,\n} from '@youfoundation/dotyoucore-transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (imageFileId: string | undefined, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    // Doesn't work as only allowed for owner:\n    // const thumbUrl = await client.mediaProvider.getDecryptedThumbnailUrl(imageDrive ?? defaultDrive, imageFileId);\n    // console.log(thumbUrl);\n\n    const client = new DeliveryClient({ api: ApiType.YouAuth, sharedSecret: getSharedSecret() });\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  return useQuery(\n    ['image', imageFileId, imageDrive],\n    () => fetchImageData(imageFileId, imageDrive),\n    { refetchOnMount: false, refetchOnWindowFocus: false, staleTime: Infinity }\n  );\n};\n\nexport default useImage;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","observer","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","target","callback","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","undefined","IntersectionObserver","rootMargin","threshold","elem","targetDrive","fileId","alt","title","useState","isInView","setIsInView","imgRef","useRef","imageUrl","useImage","data","useEffect","current","set","observe","src","ref","blog","linkRoot","imageTargetDrive","channelId","alias","type","BlogConfig","to","slug","primaryImageFileId","toUpperCase","Date","dateUnixTime","toLocaleDateString","caption","abstract","t","items","map","item","isActive","path","end","key","Image","Arrow","ListBlogOverview","blogPosts","BlogTeaserList","itemKey","CardBlogOverview","BlogTeaserCard","MasonryBlogOverview","cols","setCols","calculateCols","useCallback","windowWidth","document","documentElement","clientWidth","window","addEventListener","removeEventListener","arr","columns","out","col","i","length","_val","push","reorder","channelKey","useParams","pageIndex","setPageIndex","useChannels","channelSlug","channels","activeChannel","useBlogPosts","page","nextPageData","isFetched","isLoading","blogPostPages","setBlogPostPages","loadMoreRef","shouldLoad","setShouldLoad","ListComponent","template","ChannelTemplate","disconnect","newBlogPostPages","flat","channel","name","onClick","e","preventDefault","clearDuplicateBlogs","blogs","reduce","returnVal","currBlog","some","id","convertTextToSlug","text","split","join","toLowerCase","useAuth","getSharedSecret","pageSize","fetchBlogData","client","DeliveryClient","api","ApiType","sharedSecret","loadBlogs","nextPage","blogPostReadonlyProvider","getPosts","foundBlogPosts","getRecentPosts","useQuery","refetchOnMount","refetchOnWindowFocus","fetchChannelData","getChannels","parseInt","templateId","find","staleTime","Infinity","defaultDrive","HomePageConfig","imageFileId","imageDrive","fetchImageData","mediaProvider","getDecryptedImageUrl","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}