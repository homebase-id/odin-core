{"version":3,"file":"static/js/603.d392dcd9.chunk.js","mappings":"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","sources":["components/Form/PermissionLevelEditor.tsx","components/Icons/Triangle/Triangle.tsx","components/Sections/Section.tsx","components/Dialog/DriveAccessDialog/DriveAccessDialog.tsx","components/PermissionViews/AppPermissionView/AppPermissionView.tsx","components/Templates/Drives/DrivePermissionOverview/DrivePermissionOverview.tsx","components/Templates/DriveDetails/DriveDetails.tsx","hooks/apps/useApps.ts","hooks/circles/useCircles.ts","provider/app/AppManagementProvider.ts","provider/connections/CircleMembershipProvider.ts","provider/connections/CircleProvider.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../Icons/Check/Check';\nimport Triangle from '../Icons/Triangle/Triangle';\n\nconst PermissionLevelEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number) => void;\n  defaultValue: number;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue = permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= defaultValue) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n\n  const setValue = (value: number) => {\n    setInnerValue(value);\n    onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue.name}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={level.value === 0 ? value === level.value : value >= level.value}\n              onChange={() => (value !== level.value ? setValue(level.value) : setValue(0))}\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[6rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionLevelEditor;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { DriveDefinition } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport { CircleDefinition } from '../../../provider/connections/CirlceDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport ActionButton, { ActionButtonState } from '../../Buttons/ActionButton';\nimport PermissionLevelEditor from '../../Form/PermissionLevelEditor';\nimport Circles from '../../Icons/Circles/Circles';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst DriveAccessDialog = ({\n  title,\n  confirmText,\n\n  isOpen,\n  driveDefinition,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  driveDefinition: DriveDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  const targetDriveInfo = driveDefinition.targetDriveInfo;\n\n  const [saveState, setSaveState] = useState<ActionButtonState>('idle');\n\n  const {\n    fetch: { data: circles },\n    createOrUpdate: { mutateAsync: updateCircle },\n  } = useCircles();\n\n  // TODO: Add apps as well\n  // const { data: apps } = useApps().fetchRegistered;\n\n  const [newCircles, setNewCircles] = useState<CircleDefinition[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            setSaveState('loading');\n\n            try {\n              await Promise.all(\n                newCircles.map(async (circle) => await updateCircle({ circleDefinition: circle }))\n              );\n            } catch (ex) {\n              setSaveState('error');\n            }\n            setSaveState('success');\n\n            onConfirm();\n            return false;\n          }}\n        >\n          {circles?.length ? (\n            <>\n              <h2 className=\"mb-2 flex flex-row text-xl\">\n                <Circles className=\"my-auto mr-2 h-4 w-4\" /> {t('Circles')}:\n              </h2>\n              {circles.map((circle) => {\n                const matchingNewCircle = newCircles?.find(\n                  (newCircle) => newCircle.id === circle.id\n                );\n\n                const driveGrant = (matchingNewCircle ?? circle).drivesGrants?.find(\n                  (driveGrant) =>\n                    driveGrant.drive.alias === targetDriveInfo.alias &&\n                    driveGrant.drive.type === targetDriveInfo.type\n                );\n\n                return (\n                  <div className=\"mb-5 flex flex-row\" key={circle.id}>\n                    <label htmlFor=\"name\" className=\"my-auto mr-2\">\n                      {circle.name}\n                    </label>\n                    <PermissionLevelEditor\n                      className=\"ml-auto\"\n                      permissionLevels={drivePermissionLevels}\n                      defaultValue={driveGrant?.permission}\n                      onChange={(newValue) => {\n                        setNewCircles([\n                          ...newCircles.filter((circleToUpdate) => circleToUpdate.id !== circle.id),\n                          {\n                            ...circle,\n                            drivesGrants: [\n                              ...circle.drivesGrants.filter(\n                                (driveGrant) =>\n                                  driveGrant.drive.alias !== targetDriveInfo.alias &&\n                                  driveGrant.drive.type !== targetDriveInfo.type\n                              ),\n                              { drive: { ...targetDriveInfo }, permission: newValue },\n                            ],\n                          },\n                        ]);\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </>\n          ) : null}\n          <div className=\"-mx-2 py-3 sm:flex sm:flex-row-reverse\">\n            <ActionButton className=\"mx-2\" icon={'send'} state={saveState}>\n              {confirmText || t('Save')}\n            </ActionButton>\n            <ActionButton className=\"mx-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default DriveAccessDialog;\n","import { Link } from 'react-router-dom';\nimport { RedactedAppRegistration } from '../../../provider/app/AppManagementProviderTypes';\nimport Circles from '../../Icons/Circles/Circles';\n\nconst AppMembershipView = ({\n  appDef,\n  permissionLevel,\n}: {\n  appDef: RedactedAppRegistration;\n  permissionLevel?: string;\n}) => {\n  if (!appDef) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <Link to={`/owner/apps/${appDef.appId}`}>\n        <h2 className=\"mb-2 flex flex-row text-xl\">\n          <Circles className=\"my-auto mr-2 h-4 w-4\" />{' '}\n          <span className=\"my-auto\">{appDef.name}</span>\n          {permissionLevel && <span className=\"my-auto\">: {permissionLevel}</span>}\n        </h2>\n      </Link>\n    </div>\n  );\n};\n\nexport default AppMembershipView;\n","import { DriveDefinition } from '@youfoundation/transit-lib';\nimport { t } from '../../../../helpers/i18n/dictionary';\nimport useApps from '../../../../hooks/apps/useApps';\nimport useCircles from '../../../../hooks/circles/useCircles';\nimport { drivePermissionLevels } from '../../../../provider/permission/permissionLevels';\nimport AppMembershipView from '../../../PermissionViews/AppPermissionView/AppPermissionView';\nimport CircleMembershipView from '../../../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport Section from '../../../Sections/Section';\nimport { getAccessFromPermissionNumber } from '../../DemoData/helpers';\n\nconst DrivePermissionOverview = ({ driveDefinition }: { driveDefinition: DriveDefinition }) => {\n  const { data: circles } = useCircles().fetch;\n  const { data: apps } = useApps().fetchRegistered;\n\n  const targetDriveInfo = driveDefinition.targetDriveInfo;\n\n  const circlesWithAGrantOnThis = circles?.filter((circle) =>\n    circle.drivesGrants?.some(\n      (grant) =>\n        grant.drive.alias === targetDriveInfo.alias && grant.drive.type === targetDriveInfo.type\n    )\n  );\n\n  const appsWithAGrantOnThis = apps?.filter((app) =>\n    app.grant.driveGrants.some(\n      (grant) =>\n        grant.drive.alias === targetDriveInfo.alias && grant.drive.type === targetDriveInfo.type\n    )\n  );\n\n  return (\n    <>\n      {circlesWithAGrantOnThis?.length ? (\n        <Section title={t('Circles with access:')} isOpaqueBg={true}>\n          <ul>\n            {circlesWithAGrantOnThis.map((circle) => {\n              const matchingGrant = circle.drivesGrants.find(\n                (grant) =>\n                  grant.drive.alias === targetDriveInfo.alias &&\n                  grant.drive.type === targetDriveInfo.type\n              );\n              return (\n                <CircleMembershipView\n                  circleDef={circle}\n                  key={circle.id}\n                  permissionLevel={\n                    getAccessFromPermissionNumber(matchingGrant?.permission, drivePermissionLevels)\n                      .name\n                  }\n                />\n              );\n            })}\n          </ul>\n        </Section>\n      ) : null}\n\n      {appsWithAGrantOnThis?.length ? (\n        <Section title={t('Apps with access:')} isOpaqueBg={true}>\n          <ul>\n            {appsWithAGrantOnThis.map((app) => {\n              const matchingGrant = app.grant.driveGrants.find(\n                (grant) =>\n                  grant.drive.alias === targetDriveInfo.alias &&\n                  grant.drive.type === targetDriveInfo.type\n              );\n              return (\n                <AppMembershipView\n                  appDef={app}\n                  key={app.appId}\n                  permissionLevel={\n                    getAccessFromPermissionNumber(matchingGrant?.permission, drivePermissionLevels)\n                      .name\n                  }\n                />\n              );\n            })}\n          </ul>\n        </Section>\n      ) : null}\n    </>\n  );\n};\n\nexport default DrivePermissionOverview;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport ActionButton from '../../Buttons/ActionButton';\nimport DriveAccessDialog from '../../Dialog/DriveAccessDialog/DriveAccessDialog';\nimport DrivePermissionOverview from '../Drives/DrivePermissionOverview/DrivePermissionOverview';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport Section from '../../Sections/Section';\n\nconst DriveDetails = () => {\n  const { driveKey } = useParams();\n  const splittedDriveKey = driveKey.split('_');\n  const {\n    fetch: { data: driveDef, isLoading: driveDefLoading },\n  } = useDrive({ targetDrive: { alias: splittedDriveKey[0], type: splittedDriveKey[1] } });\n\n  const [isEditAccess, setIsEditAccess] = useState(false);\n\n  if (driveDefLoading) {\n    <>Loading</>;\n  }\n\n  if (!driveDef) {\n    return <>No matching drive found</>;\n  }\n\n  return (\n    <>\n      <PageMeta\n        icon={HardDrive}\n        title={`${driveDef.name}`}\n        actions={\n          <>\n            <ActionButton onClick={() => setIsEditAccess(true)}>Edit Access</ActionButton>\n          </>\n        }\n        breadCrumbs={[\n          { href: '/owner/drives', title: 'My Drives' },\n          { title: driveDef.name ?? '' },\n        ]}\n      />\n      <Section title={t('Metadata')} isOpaqueBg={true}>\n        <p>{driveDef.metadata}</p>\n        <ul>\n          {driveDef.allowAnonymousReads ? <li>Allow Anonymous Reads</li> : null}\n          {driveDef.isReadonly ? <li>Read Only</li> : null}\n        </ul>\n      </Section>\n\n      <DrivePermissionOverview driveDefinition={driveDef} />\n\n      <DriveAccessDialog\n        driveDefinition={driveDef}\n        isOpen={isEditAccess}\n        onCancel={() => {\n          setIsEditAccess(false);\n        }}\n        onConfirm={() => {\n          setIsEditAccess(false);\n        }}\n        title={`${t('Edit access on')} ${driveDef.name}`}\n      />\n    </>\n  );\n};\n\nexport default DriveDetails;\n","import { useQuery } from '@tanstack/react-query';\nimport AppManagementProvider from '../../provider/app/AppManagementProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useApps = () => {\n  const { getSharedSecret } = useAuth();\n\n  const appManagementProvider = AppManagementProvider.getInstance(getSharedSecret());\n\n  const fetchRegistered = async () => {\n    const apps = await appManagementProvider.GetAppRegistrations();\n    return apps?.sort((a, b) => (a.isRevoked ? 1 : 0) - (b.isRevoked ? 1 : 0));\n  };\n\n  return {\n    fetchRegistered: useQuery(['registeredApps'], () => fetchRegistered(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useApps;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { CircleMembershipProvider } from '../../provider/connections/CircleMembershipProvider';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport { CircleDefinition } from '../../provider/connections/CirlceDataTypes';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n  const circleMembershipProvider = CircleMembershipProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    return await circleProvider.getCircles();\n  };\n\n  const createOrUpdate = async ({ circleDefinition }: { circleDefinition: CircleDefinition }) => {\n    if (circleDefinition.id) {\n      return await circleProvider.updateDefinition(circleDefinition);\n    } else {\n      return await circleProvider.createDefinition(circleDefinition);\n    }\n  };\n\n  const provideGrant = async ({ circleId, dotYouId }: { circleId: string; dotYouId: string }) => {\n    return await circleMembershipProvider.add({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  const revokeGrant = async ({ circleId, dotYouId }: { circleId: string; dotYouId: string }) => {\n    return await circleMembershipProvider.remove({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n\n    createOrUpdate: useMutation(createOrUpdate, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    provideGrant: useMutation(provideGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    revokeGrant: useMutation(revokeGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useCircles;\n","import {\n  AppClientRegistrationRequest,\n  AppClientRegistrationResponse,\n  AppRegistrationRequest,\n  RedactedAppRegistration,\n  GetAppRequest,\n} from './AppManagementProviderTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nexport default class AppManagementProvider extends OwnerProviderBase {\n  private static instance: AppManagementProvider;\n  constructor(sharedSecret: Uint8Array | undefined) {\n    super(sharedSecret);\n  }\n\n  //adds the specified client to the list of allowed clients for a given app; returns a CAT\n  async RegisterAppClient(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/client',\n      request\n    );\n    return response.data;\n  }\n\n  async RegisterChatAppClient_temp(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/chatclient_temp',\n      request\n    );\n    console.log('RegisterChatAppClient_temp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async RegisterApp(request: AppRegistrationRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>(\n      'appmanagement/register/app',\n      request\n    );\n\n    console.log('RegisterApp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async GetAppRegistration(request: GetAppRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>('appmanagement/app', request);\n    return response.data;\n  }\n\n  async GetAppRegistrations(): Promise<RedactedAppRegistration[]> {\n    const client = this.createAxiosClient();\n    const response = await client.get<RedactedAppRegistration[]>('appmanagement/list');\n    return response.data;\n  }\n\n  async RevokeApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    await client.post('appmanagement/revoke', request);\n  }\n\n  async AllowApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    const response = await client.post('appmanagement/allow', request);\n    console.log(response);\n  }\n\n  public static getInstance(sharedSecret): AppManagementProvider {\n    if (!AppManagementProvider.instance) {\n      AppManagementProvider.instance = new AppManagementProvider(sharedSecret);\n    }\n\n    return AppManagementProvider.instance;\n  }\n}\n","import { OwnerProviderBase } from '../OwnerProviderBase';\n\n//Handles management of Circles\nexport class CircleMembershipProvider extends OwnerProviderBase {\n  private static instance: CircleMembershipProvider;\n  private root = '/circles/connections/circles';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async add(membershipGrant: { dotYouId: string; circleId: string }) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/add';\n\n    return client\n      .post(url, membershipGrant)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async remove(membershipGrant: { dotYouId: string; circleId: string }) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/revoke';\n\n    return client\n      .post(url, membershipGrant)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async fetchMembers(circleId: string): Promise<string[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .post(url, { circleId: circleId })\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleMembershipProvider {\n    if (!CircleMembershipProvider.instance) {\n      CircleMembershipProvider.instance = new CircleMembershipProvider(sharedSecret);\n    }\n\n    return CircleMembershipProvider.instance;\n  }\n}\n","import { CircleDefinition } from './CirlceDataTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\n//Handles management of Circles\nexport class CircleProvider extends OwnerProviderBase {\n  private static instance: CircleProvider;\n  private root = '/circles/definitions';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async updateDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/update';\n\n    const data = { ...circleDefinition };\n    data.drivesGrants = data.drivesGrants || data.drives;\n    data.drives = undefined;\n    console.log('actual update data:', data);\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async createDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/create';\n\n    return client\n      .post(url, circleDefinition)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getCircles(): Promise<CircleDefinition[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data.map((circleDef) => {\n          circleDef.drivesGrants = circleDef.drivesGrants?.map((grant) => {\n            return {\n              ...grant,\n              permission:\n                grant.permission === 'Read'\n                  ? 2\n                  : grant.permission === 'Write'\n                  ? 4\n                  : grant.permission === 'ReadWrite'\n                  ? 5\n                  : grant.permission,\n            };\n          });\n\n          return circleDef;\n        });\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getCircle(circleId: string): Promise<CircleDefinition> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/circle';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .then((circleDef) => {\n        // Parse string permissionflags to number representations\n        circleDef.drivesGrants = circleDef.drivesGrants?.map((grant) => {\n          return {\n            ...grant,\n            permission:\n              grant.permission === 'Read'\n                ? 2\n                : grant.permission === 'Write'\n                ? 4\n                : grant.permission === 'ReadWrite'\n                ? 5\n                : grant.permission,\n          };\n        });\n\n        // const globalPermission = circleDef.permissions.permissions;\n        // circleDef.permissions.permissions =\n        //   globalPermission === 'ApproveConnection'\n        //     ? 1\n        //     : globalPermission === 'ReadConnections'\n        //     ? 2\n        //     : globalPermission === 'ApproveConnection, ReadConnections'\n        //     ? 3\n        //     : globalPermission === 'ApproveConnection, ReadConnections, UpdateConnections'\n        //     ? 7\n        //     : globalPermission ===\n        //       'ApproveConnection, ReadConnections, UpdateConnections, DeleteConnections'\n        //     ? 15\n        //     : globalPermission;\n        return circleDef;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async removeCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/delete';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleProvider {\n    if (!CircleProvider.instance) {\n      CircleProvider.instance = new CircleProvider(sharedSecret);\n    }\n\n    return CircleProvider.instance;\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Option","className","isChecked","children","onChange","onClick","permissionLevels","defaultValue","useState","isOpen","setIsOpen","value","setInnerValue","wrapperRef","useRef","useOutsideTrigger","currentValue","reduce","prevValue","currValue","setValue","ref","name","map","level","xmlns","viewBox","fill","d","title","isOpaqueBg","isBorderLess","confirmText","driveDefinition","onConfirm","onCancel","target","usePortal","targetDriveInfo","saveState","setSaveState","useCircles","circles","fetch","data","updateCircle","createOrUpdate","mutateAsync","newCircles","setNewCircles","dialog","DialogWrapper","onClose","onSubmit","e","preventDefault","Promise","all","circle","circleDefinition","length","Circles","t","matchingNewCircle","find","newCircle","id","driveGrant","drivesGrants","drive","alias","type","htmlFor","PermissionLevelEditor","drivePermissionLevels","permission","newValue","filter","circleToUpdate","ActionButton","icon","state","createPortal","appDef","permissionLevel","to","appId","apps","useApps","fetchRegistered","circlesWithAGrantOnThis","some","grant","appsWithAGrantOnThis","app","driveGrants","Section","matchingGrant","circleDef","getAccessFromPermissionNumber","splittedDriveKey","useParams","driveKey","split","useDrive","targetDrive","driveDef","driveDefLoading","isLoading","isEditAccess","setIsEditAccess","PageMeta","HardDrive","actions","breadCrumbs","href","metadata","allowAnonymousReads","isReadonly","getSharedSecret","useAuth","appManagementProvider","AppManagementProvider","GetAppRegistrations","sort","a","b","isRevoked","useQuery","refetchOnWindowFocus","queryClient","useQueryClient","circleProvider","CircleProvider","circleMembershipProvider","CircleMembershipProvider","fetchAll","getCircles","updateDefinition","createDefinition","provideGrant","circleId","dotYouId","add","revokeGrant","remove","useMutation","onSuccess","param","invalidateQueries","onError","ex","console","error","sharedSecret","request","client","this","createAxiosClient","post","response","log","get","instance","OwnerProviderBase","root","membershipGrant","url","then","catch","drives","undefined","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}