{"version":3,"file":"static/js/117.cd9ee753.chunk.js","mappings":"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","sources":["components/Alerts/Alert/Alert.tsx","components/Icons/Question/Question.tsx","components/PermissionViews/DrivePermissionView/DrivePermissionView.tsx","components/Dialog/CircleMembershipDialog/CircleMembershipDialog.tsx","components/Templates/ConnectionDetails/ConnectionDetails.tsx","hooks/drive/useDrive.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport Exclamation from '../../Icons/Exclamation/Exclamation';\nimport Question from '../../Icons/Question/Question';\n\ninterface AlertProps {\n  type: 'success' | 'warning' | 'critical' | 'info';\n  title?: ReactNode;\n  children?: ReactNode;\n  className?: string;\n  isCompact?: boolean;\n}\n\nconst Alert = ({ type, title, children, className, isCompact }: AlertProps) => {\n  const bgClass =\n    type === 'critical'\n      ? 'bg-red-50 dark:bg-red-900 border-red-100 dark:border-red-800 dark:text-white'\n      : type === 'warning'\n      ? 'bg-orange-50 border-orange-100'\n      : 'bg-slate-100 dark:bg-slate-700 dark:border-slate-900';\n\n  return (\n    <section className={`bg-red rounded-lg border p-5 ${bgClass} ${className ?? ''}`}>\n      <div className={`flex flex-row ${isCompact ? 'flex-wrap' : 'flex-wrap sm:flex-nowrap'} `}>\n        {type === 'critical' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-red-400 dark:text-red-300 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : type === 'warning' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-orange-400 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-blue-400 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Question />\n          </div>\n        )}\n        <div className={`ml-5 ${isCompact ? 'contents' : 'contents sm:block'}`}>\n          <p className=\"ml-3 mb-2 text-2xl sm:ml-0\">{title}</p>\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Alert;\n","import { FC } from 'react';\n\nconst Question: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z\" />\n    </svg>\n  );\n};\n\nexport default Question;\n","import { DriveDefinition } from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport { DriveGrant } from '../../../provider/connections/CircleDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\nimport { getAccessFromPermissionNumber } from '../../Templates/DemoData/helpers';\n\nconst DrivePermissionView = ({\n  driveGrant,\n  permissionTree,\n  className,\n}: {\n  driveGrant: DriveGrant;\n  permissionTree?: string;\n  className?: string;\n}) => {\n  const { data: drive, isLoading } = useDrive({\n    targetDrive: driveGrant.permissionedDrive.drive,\n  }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`h-4 max-w-xs ${className}`} />;\n  }\n\n  return (\n    <div\n      key={`${driveGrant?.permissionedDrive?.drive?.alias}-${driveGrant?.permissionedDrive.drive?.type}`}\n      className={`flex flex-row ${className}`}\n      title={permissionTree}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`leading-none ${!permissionTree ? 'my-auto' : ''}`}>\n            {drive?.name}:{' '}\n            {\n              getAccessFromPermissionNumber(\n                driveGrant?.permissionedDrive.permission,\n                drivePermissionLevels\n              ).name\n            }\n          </p>\n          {permissionTree && (\n            <small className=\"\">\n              {t('Via')} {permissionTree}\n            </small>\n          )}\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport const DriveView = ({ drive, className }: { drive: DriveDefinition; className?: string }) => {\n  return (\n    <div\n      key={`${drive.targetDriveInfo?.alias}-${drive.targetDriveInfo?.type}`}\n      className={`flex flex-row ${className}`}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6 flex-shrink-0\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`my-auto`}>{drive?.name}</p>\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default DrivePermissionView;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circle/useCircle';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport { CircleGrant } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport CirclePermissionView from '../../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst CircleMembershipDialog = ({\n  title,\n  isOpen,\n\n  currentCircleGrants,\n  dotYouId,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  isOpen: boolean;\n\n  currentCircleGrants: CircleGrant[];\n  dotYouId: string;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  const { data: circles } = useCircles().fetch;\n  const {\n    provideGrant: { mutateAsync: provideGrant },\n    revokeGrant: { mutateAsync: revokeGrant },\n  } = useCircle({});\n  const currentCircleGrantIds = currentCircleGrants.map((grant) => grant.circleId);\n\n  const [toRevokeGrants, setToRevokeGrants] = useState<string[]>([]);\n  const [toProvideGrants, setToProvideGrants] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            await Promise.all(\n              toProvideGrants.map(async (circleToProvide) => {\n                return provideGrant({ circleId: circleToProvide, dotYouId: dotYouId });\n              })\n            );\n\n            await Promise.all(\n              toRevokeGrants.map(async (circleToRevoke) => {\n                return revokeGrant({ circleId: circleToRevoke, dotYouId: dotYouId });\n              })\n            );\n\n            setToProvideGrants([]);\n            setToRevokeGrants([]);\n\n            onConfirm();\n          }}\n        >\n          {circles.length ? (\n            <>\n              <h2 className=\"mb-2 text-lg\">{t('Member of')}:</h2>\n\n              {circles.map((circle, index) => {\n                const isRevoked = toRevokeGrants.some((grant) => grant === circle.id);\n                const isProvided = toProvideGrants.some((grant) => grant === circle.id);\n\n                const isChecked =\n                  isProvided || (currentCircleGrantIds.indexOf(circle.id) !== -1 && !isRevoked);\n\n                return (\n                  <CirclePermissionView\n                    circleDef={circle}\n                    key={circle.id ?? index}\n                    className={`my-4 w-full rounded-lg border p-4`}\n                    isChecked={isChecked}\n                    onClick={() => {\n                      if (!isChecked) {\n                        // If grant wasn't there, add to provide\n                        if (!currentCircleGrantIds.some((grant) => grant === circle.id)) {\n                          setToProvideGrants([...toProvideGrants, circle.id]);\n                        }\n                        setToRevokeGrants(\n                          toRevokeGrants.filter((circleId) => circleId !== circle.id)\n                        );\n                      } else {\n                        // If grant was there, add to revoke\n                        if (currentCircleGrantIds.some((grant) => grant === circle.id)) {\n                          setToRevokeGrants([...toRevokeGrants, circle.id]);\n                        }\n                        setToProvideGrants(\n                          toProvideGrants.filter((circleId) => circleId !== circle.id)\n                        );\n                      }\n                    }}\n                  />\n                );\n              })}\n            </>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" icon={'send'}>\n              {t('Save')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default CircleMembershipDialog;\n","import { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useContact from '../../../hooks/contact/useContact';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport {\n  AccessGrant,\n  ConnectionInfo,\n  DriveGrant,\n} from '../../../provider/connections/CircleDataTypes';\nimport Alert from '../../Alerts/Alert/Alert';\nimport ActionButton from '../../Buttons/ActionButton';\nimport CircleMembershipDialog from '../../Dialog/CircleMembershipDialog/CircleMembershipDialog';\nimport IncomingConnectionDialog from '../../Dialog/ConnectionDialogs/IncomingConnectionDialog';\nimport Persons from '../../Icons/Persons/Persons';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport LoadingDetailPage from '../../Loaders/LoadingDetailPage/LoadingDetailPage';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\nimport CirclePermissionView from '../../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport DrivePermissionView from '../../PermissionViews/DrivePermissionView/DrivePermissionView';\nimport Section from '../../Sections/Section';\n\nconst ConnectionDetails = () => {\n  const { connectionKey } = useParams();\n  const navigate = useNavigate();\n  const {\n    fetch: { data: connectionInfo, isLoading: connectionInfoLoading },\n    disconnect: { mutate: disconnect, status: disconnectStatus },\n    ignoreRequest: { mutateAsync: ignoreRequest, status: ignoreRequestStatus },\n    revokeConnectionRequest: { mutate: revokeRequest, status: revokeRequestStatus },\n    block: { mutate: block, status: blockStatus },\n    unblock: { mutate: unblock, status: unblockStatus },\n  } = useConnection({ dotYouId: connectionKey });\n  const { data: contactData } = useContact({ dotYouId: connectionKey }).fetch;\n  const checkReturnTo = useFocusedEditing();\n\n  const [isAcceptDialogOpen, setIsAcceptDialogOpen] = useState(false);\n\n  const [isEditPermissionActive, setIsEditPermissionActive] = useState(false);\n\n  if (connectionInfoLoading) {\n    return <LoadingDetailPage />;\n  }\n\n  if (!connectionInfo) {\n    return <>No matching connection found</>;\n  }\n\n  const actions =\n    connectionInfo.status === 'connected' ? (\n      <>\n        <ActionButton\n          type=\"primary\"\n          className=\"m-2\"\n          onClick={() => {\n            setIsEditPermissionActive(true);\n          }}\n          state={disconnectStatus}\n        >\n          {t('Edit Access')}\n        </ActionButton>\n        <ActionButton\n          type=\"remove\"\n          className=\"m-2\"\n          onClick={() => disconnect({})}\n          icon={'trash'}\n          state={disconnectStatus}\n          confirmOptions={{\n            title: `${t('Remove')} ${connectionKey}`,\n            buttonText: t('Remove'),\n            body: `${t('Are you sure you want to remove')} ${connectionKey} ${t(\n              'from your connections. They will lose all existing access.'\n            )}`,\n          }}\n        >\n          {t('Remove')}\n        </ActionButton>\n      </>\n    ) : connectionInfo.status === 'pending' ? (\n      <>\n        <ActionButton\n          type=\"primary\"\n          className=\"m-2\"\n          onClick={() => {\n            setIsAcceptDialogOpen(true);\n          }}\n        >\n          {t('Accept Request')}...\n        </ActionButton>\n        <ActionButton\n          type=\"secondary\"\n          className=\"m-2\"\n          onClick={async () => {\n            await ignoreRequest(\n              { senderDotYouId: connectionInfo.senderDotYouId },\n              { onSuccess: () => navigate('/owner/connections') }\n            );\n            checkReturnTo();\n          }}\n          state={ignoreRequestStatus}\n        >\n          {t('Ignore')}\n        </ActionButton>\n        <IncomingConnectionDialog\n          isOpen={isAcceptDialogOpen}\n          senderDotYouId={connectionInfo.senderDotYouId}\n          title={t('Accept connection request')}\n          confirmText={t('Accept and give access')}\n          onConfirm={() => {\n            setIsAcceptDialogOpen(false);\n          }}\n          onCancel={() => {\n            setIsAcceptDialogOpen(false);\n          }}\n        />\n      </>\n    ) : connectionInfo.status === 'sent' ? (\n      <>\n        <ActionButton\n          type=\"secondary\"\n          className=\"m-2\"\n          onClick={() => {\n            revokeRequest(\n              { targetDotYouId: connectionInfo.senderDotYouId },\n              { onSuccess: () => navigate('/owner/connections') }\n            );\n          }}\n          state={revokeRequestStatus}\n        >\n          {t('Revoke')}\n        </ActionButton>\n      </>\n    ) : (\n      <></>\n    );\n\n  const activeConnection = connectionInfo as ConnectionInfo;\n\n  return (\n    <>\n      <PageMeta\n        icon={Persons}\n        title={\n          <>\n            <span className=\"flex flex-col\">\n              <span className=\"block\">\n                {`${\n                  contactData?.name\n                    ? `${contactData.name.givenName} ${contactData.name.surname}`\n                    : connectionKey\n                }`}\n              </span>\n              <small className=\"block text-sm\">{`(${connectionInfo.status})`}</small>\n            </span>\n          </>\n        }\n        actions={\n          <>\n            {connectionInfo.status === 'blocked' ? (\n              <ActionButton\n                type=\"remove\"\n                className=\"m-2\"\n                onClick={() => unblock(connectionKey)}\n                state={unblockStatus}\n                confirmOptions={{\n                  title: `${t('Unblock')} ${connectionKey}`,\n                  buttonText: t('Unblock'),\n                  body: `${t('Are you sure you want to unblock')} ${connectionKey}`,\n                }}\n              >\n                {t('Unblock')}\n              </ActionButton>\n            ) : (\n              <ActionButton\n                type=\"remove\"\n                className=\"m-2\"\n                onClick={() => block(connectionKey)}\n                state={blockStatus}\n                confirmOptions={{\n                  title: `${t('Block')} ${connectionKey}`,\n                  buttonText: t('Block'),\n                  body: `${t('Are you sure you want to block')} ${connectionKey}`,\n                }}\n              >\n                {t('Block')}\n              </ActionButton>\n            )}\n            {actions}\n          </>\n        }\n        breadCrumbs={[\n          { href: '/owner/connections', title: 'Connections' },\n          { title: connectionKey },\n        ]}\n      />\n      {connectionInfo.status === 'connected' ? (\n        <>\n          <ConnectionPermissionViewer accessGrant={activeConnection.accessGrant} />\n          <CircleMembershipDialog\n            title={`${t('Edit Circle Membership for')} ${connectionKey}`}\n            isOpen={isEditPermissionActive}\n            dotYouId={connectionKey}\n            currentCircleGrants={activeConnection.accessGrant.circleGrants}\n            onCancel={() => {\n              setIsEditPermissionActive(false);\n            }}\n            onConfirm={() => {\n              setIsEditPermissionActive(false);\n            }}\n          />\n          <section>\n            <p className=\"text-sm\">\n              {t('Connected since')}: {new Date(activeConnection.created).toLocaleDateString()}\n            </p>\n          </section>\n        </>\n      ) : connectionInfo.status === 'pending' || connectionInfo.status === 'sent' ? (\n        <>\n          <p className=\"mb-3 text-sm\">{connectionInfo.message}</p>\n        </>\n      ) : connectionInfo.status === 'blocked' ? (\n        <>\n          <Alert type=\"critical\">{t('This person is currently blocked')}</Alert>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport const ConnectionPermissionViewer = ({\n  accessGrant,\n  className,\n}: {\n  accessGrant: AccessGrant;\n  className?: string;\n}) => {\n  const { data: circles, isLoading: circlesLoading } = useCircles().fetch;\n\n  const grantedCircles = circles?.filter((circle) =>\n    accessGrant.circleGrants.some((circleGrant) => circleGrant.circleId === circle.id)\n  );\n\n  const grantedDrives = grantedCircles?.flatMap((circle) => circle.driveGrants ?? []);\n  const uniqueDrivesWithHighestPermission = grantedDrives?.reduce((prevValue, grantedDrive) => {\n    const existingGrantIndex = prevValue.findIndex(\n      (driveGrant) =>\n        driveGrant.permissionedDrive.drive.alias === grantedDrive.permissionedDrive.drive.alias &&\n        driveGrant.permissionedDrive.drive.type === grantedDrive.permissionedDrive.drive.type\n    );\n\n    if (existingGrantIndex !== -1) {\n      prevValue[existingGrantIndex].permissionedDrive.permission = Math.max(\n        prevValue[existingGrantIndex].permissionedDrive.permission,\n        grantedDrive.permissionedDrive.permission\n      );\n      return prevValue;\n    } else {\n      return [...prevValue, grantedDrive];\n    }\n  }, [] as DriveGrant[]);\n\n  const driveGrantsWithPermissionTree = uniqueDrivesWithHighestPermission?.map((drive) => {\n    const viaCircles = grantedCircles.filter((circle) =>\n      circle.driveGrants?.some(\n        (driveGrant) =>\n          driveGrant.permissionedDrive.drive.alias === drive.permissionedDrive.drive.alias &&\n          driveGrant.permissionedDrive.drive.type === drive.permissionedDrive.drive.type\n      )\n    );\n\n    const circleNames = viaCircles.map((circle) => circle.name);\n\n    return { driveGrant: drive, permissionTree: circleNames.join(', ') };\n  });\n  return (\n    <div className={className}>\n      <Section title={t('Member of the following circles')} isOpaqueBg={true}>\n        {circlesLoading ? (\n          <>\n            <LoadingParagraph className=\"mb-4 h-4 max-w-xs\" />\n            <LoadingParagraph className=\"mb-4 h-4 max-w-xs\" />\n            <LoadingParagraph className=\"mb-4 h-4 max-w-xs\" />\n          </>\n        ) : (\n          <>\n            {!accessGrant.isRevoked ? (\n              <div className=\"-my-4\">\n                {grantedCircles?.map((grantedCircle) => (\n                  <CirclePermissionView\n                    circleDef={grantedCircle}\n                    key={grantedCircle.id}\n                    className=\"my-4\"\n                  />\n                ))}\n              </div>\n            ) : null}\n          </>\n        )}\n      </Section>\n\n      {driveGrantsWithPermissionTree?.length ? (\n        <Section title={t('Access on the following drives')} isOpaqueBg={true}>\n          <div className=\"-my-6\">\n            {driveGrantsWithPermissionTree.map((grantsWithCircle) => {\n              return (\n                <DrivePermissionView\n                  key={`${grantsWithCircle.driveGrant.permissionedDrive.drive.alias}-${grantsWithCircle.driveGrant.permissionedDrive.drive.type}`}\n                  driveGrant={grantsWithCircle.driveGrant}\n                  permissionTree={grantsWithCircle.permissionTree}\n                  className=\"my-6\"\n                />\n              );\n            })}\n          </div>\n        </Section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ConnectionDetails;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient, TargetDrive } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrive = ({ targetDrive }: { targetDrive: TargetDrive }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetch = async (targetDrive: TargetDrive) => {\n    const allDrives = await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n\n    return allDrives.find(\n      (drive) =>\n        drive.targetDriveInfo.alias === targetDrive.alias &&\n        drive.targetDriveInfo.type === targetDrive.type\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['drive', `${targetDrive.alias}_${targetDrive.type}`],\n      () => fetch(targetDrive),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useDrive;\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n\nexport const appPermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Manage Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["type","title","children","className","isCompact","bgClass","xmlns","viewBox","fill","d","DriveView","drive","to","targetDriveInfo","alias","name","driveGrant","permissionTree","useDrive","targetDrive","permissionedDrive","fetch","data","isLoading","getAccessFromPermissionNumber","permission","drivePermissionLevels","t","isOpen","currentCircleGrants","dotYouId","onConfirm","onCancel","target","usePortal","circles","useCircles","useCircle","provideGrant","mutateAsync","revokeGrant","currentCircleGrantIds","map","grant","circleId","useState","toRevokeGrants","setToRevokeGrants","toProvideGrants","setToProvideGrants","dialog","DialogWrapper","onClose","onSubmit","e","preventDefault","Promise","all","circleToProvide","circleToRevoke","length","circle","index","isRevoked","some","id","isChecked","indexOf","CirclePermissionView","circleDef","onClick","filter","ActionButton","icon","createPortal","ConnectionPermissionViewer","accessGrant","circlesLoading","grantedCircles","circleGrants","circleGrant","grantedDrives","flatMap","driveGrants","uniqueDrivesWithHighestPermission","reduce","prevValue","grantedDrive","existingGrantIndex","findIndex","Math","max","driveGrantsWithPermissionTree","circleNames","join","Section","isOpaqueBg","LoadingParagraph","grantedCircle","grantsWithCircle","DrivePermissionView","connectionKey","useParams","navigate","useNavigate","useConnection","connectionInfo","connectionInfoLoading","disconnect","mutate","disconnectStatus","status","ignoreRequest","ignoreRequestStatus","revokeConnectionRequest","revokeRequest","revokeRequestStatus","block","blockStatus","unblock","unblockStatus","contactData","useContact","checkReturnTo","useFocusedEditing","isAcceptDialogOpen","setIsAcceptDialogOpen","isEditPermissionActive","setIsEditPermissionActive","LoadingDetailPage","actions","state","confirmOptions","buttonText","body","senderDotYouId","onSuccess","IncomingConnectionDialog","confirmText","targetDotYouId","activeConnection","PageMeta","Persons","givenName","surname","breadCrumbs","href","Date","created","toLocaleDateString","message","Alert","getSharedSecret","useAuth","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","pageNumber","pageSize","results","allDrives","find","useQuery","refetchOnWindowFocus","value","circlePermissionLevels","appPermissionLevels"],"sourceRoot":""}