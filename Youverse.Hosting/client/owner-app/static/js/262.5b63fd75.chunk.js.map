{"version":3,"file":"static/js/262.5b63fd75.chunk.js","mappings":"uNAEAA,EAAQ,MAER,IAWA,EAX8B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC/B,OACE,iBAAKA,UAAS,iBAAYA,GAA1B,WACE,oBACA,oBACA,oBACA,qBAGL,E,UCED,EAb4B,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAC7B,OACE,gBACEC,MAAM,6BACNC,QAAQ,cACRC,KAAK,eACLH,UAAWA,EAJb,UAME,iBAAMI,EAAE,uYAGb,E,UCSYC,EAAc,SACzBC,EACAC,GAEA,MAAe,UAAXD,GAAiC,UAAXC,EACjB,QAGM,YAAXD,GAAmC,YAAXC,EACnB,UAGM,SAAXD,GAAgC,SAAXC,EAChB,OAGM,YAAXD,GAAmC,YAAXC,GAIZ,YAAXD,GAAmC,SAAXC,GAAkC,SAAXD,GAAgC,YAAXC,EAHhE,eAGT,CAGD,EAiED,EA/D4C,SAAC,GAStC,IARLC,EAQI,EARJA,SACAC,EAOI,EAPJA,QACAT,EAMI,EANJA,UACAU,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KAEMC,EAAO,SAACC,GACZ,MAAc,YAAVJ,GACK,SAAC,GAAD,UAAYI,IAEP,YAAVJ,GACK,SAACK,EAAA,GAAD,UAAWD,IAEN,UAAVJ,GACK,SAACM,EAAA,GAAD,UAAiBF,IAGV,SAATN,GACL,SAAC,GAAD,UAAUM,IACC,SAATN,GACF,SAACS,EAAA,GAAD,UAAWH,IACA,SAATN,GACF,SAACU,EAAA,GAAD,UAAUJ,IACC,UAATN,GACF,SAACW,EAAA,GAAD,UAAWL,KAEX,uBAEH,EAEKM,EACM,UAAVV,EACI,yCACS,cAATD,EACA,4FACS,WAATA,EACA,oFACA,6CAEAY,EACK,UAATT,EAAmB,YAAuB,UAATA,EAAmB,oBAAsB,YAE5E,OACE,oBACEd,UAAS,eACPQ,EAAW,eAAiB,GADrB,gCAEee,EAFf,sBAEwCD,EAFxC,aAGG,YAAVV,EAAsB,gBAAkB,GAHjC,YAILZ,GACJwB,SAAoB,YAAVZ,EACVH,QAASA,EACTI,MAAOA,EART,WAUE,iBAAMb,UAAU,OAAhB,SAAwBQ,KACxB,SAACO,EAAD,CAAMf,UAAW,8BAGtB,C,uDC7DD,IA1CmB,SAAC,GAMb,IALLA,EAKI,EALJA,UACAY,EAII,EAJJA,MAKA,GAAgCa,EAAAA,EAAAA,UAAe,MAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsBF,EAAAA,EAAAA,UAAe,IAAIG,MAAzC,eAAOC,EAAP,KAAYC,EAAZ,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACM,YAAVnB,GACFe,EAAY,IAAIC,KAEnB,GAAE,CAAChB,KAEJmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAO,IAAIF,KACZ,GAAE,KAEH,OAAO,WACLM,aAAaF,EACd,CACF,GAAE,CAACH,KAECH,EACH,OAAO,KAGT,IAAMS,EAAON,EAAIO,UAAYV,EAASU,UAChCC,EAAOX,EACTS,GAnCU,IAoCR,oBACAA,GApCQ,IAqCR,oBACAT,EAASY,iBACX,GAEJ,OAAOD,GAAO,eAAGrC,UAAS,UAAKA,EAAL,YAAZ,wBAAkDqC,KAAY,IAC7E,C,oEC9BD,EAb6B,SAAC,GAAmB,IAAjBrC,EAAgB,EAAhBA,UAC9B,OACE,gBACEC,MAAM,6BACNC,QAAQ,cACRC,KAAK,eACLH,UAAWA,EAJb,UAME,iBAAMI,EAAE,4RAGb,ECuCD,EAhDsB,SAAC,GAUhB,IATLI,EASI,EATJA,SACAK,EAQI,EARJA,MACA0B,EAOI,EAPJA,QAOI,IANJzB,KAAAA,OAMI,MANG,QAMH,EACJ,OACE,iBAAKd,UAAU,gBAAgB,kBAAgB,cAAcwC,KAAK,SAAS,aAAW,OAAtF,WACE,gBAAKxC,UAAU,gEACf,gBAAKA,UAAU,qCAAf,UACE,gBAAKA,UAAU,kFAAf,UACE,gBACEA,UAAS,oHACE,WAATc,EAAoB,cAAyB,UAATA,EAAmB,cAAgB,gBAF3E,UAKE,iBAAKd,UAAU,sDAAf,UACGa,GAAS0B,GACR,iBAAKvC,UAAU,0EAAf,UACGa,GACC,eACEb,UAAU,uEACVyC,GAAG,cAFL,SAIG5B,IAED,KACH0B,GACC,mBAAQ9B,QAAS8B,EAASvC,UAAU,cAApC,UACE,SAAC,EAAD,CAAOA,UAAU,cAEjB,QAEJ,KACHQ,aAOd,C,iJC4CD,IAnFsB,SAAC,GAgBhB,IAfLK,EAeI,EAfJA,MACA6B,EAcI,EAdJA,YACAC,EAaI,EAbJA,OACAC,EAYI,EAZJA,aACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,SAWMC,GAASC,EAAAA,EAAAA,GAAU,mBACzB,GACEC,EAAAA,EAAAA,KAAcC,YADAC,EAAhB,EAAQC,OAAuCC,EAA/C,EAAuCC,OAGvC,GAA0C7B,EAAAA,EAAAA,WAAQ,UAC7CmB,IADL,eAAOW,EAAP,KAAsBC,EAAtB,KAIA,IAAKb,EACH,OAAO,KAGT,IAAMc,GACJ,SAAC,IAAD,CAAe5C,MAAOA,EAAO0B,QAASO,EAAtC,UACE,+BACE,kBACEY,SAAU,SAACC,GAMT,OALAA,EAAEC,iBAEFC,QAAQC,IAAI,oBAAqBP,GACjCJ,EAAsB,CAAEY,WAAYR,GAAiB,CAAES,UAAW,kBAAMnB,GAAN,KAE3D,CACR,EARH,WAUE,iBAAK7C,UAAU,OAAf,WACE,kBAAOiE,QAAQ,OAAf,UAAuBC,EAAAA,EAAAA,GAAE,WACzB,SAAC,IAAD,CACEzB,GAAG,OACH0B,KAAK,cACLvB,aAAcW,EAAcY,KAC5BC,SAAU,SAACT,GACTH,GAAiB,kBAAKD,GAAN,IAAqBY,KAAMR,EAAEZ,OAAOsB,QACrD,EACDC,UAAQ,QAGZ,iBAAKtE,UAAU,OAAf,WACE,kBAAOiE,QAAQ,OAAf,UAAuBC,EAAAA,EAAAA,GAAE,kBACzB,SAAC,IAAD,CACEzB,GAAG,cACH0B,KAAK,qBACLvB,aAAcW,EAAcgB,YAC5BH,SAAU,SAACT,GACTH,GAAiB,kBAAKD,GAAN,IAAqBgB,YAAaZ,EAAEZ,OAAOsB,QAC5D,EACDC,UAAQ,QAIZ,iBAAKtE,UAAU,yCAAf,WACE,SAAC,IAAD,CAAcA,UAAU,OAAOY,MAAOyC,EAA6B3C,KAAM,OAAzE,SACGgC,IAAewB,EAAAA,EAAAA,GAAE,kBAEpB,SAAC,IAAD,CAAclE,UAAU,OAAOW,KAAK,YAAYF,QAASqC,EAAzD,UACGoB,EAAAA,EAAAA,GAAE,sBAQf,OAAOM,EAAAA,EAAAA,cAAaf,EAAQV,EAC7B,C,8CChFD,IAZc,SACZ/B,GACI,IAAD,EACH,OACE,oCACMA,GADN,IAEEL,KAAI,UAAEK,EAAML,YAAR,QAAgB,QACpBX,UAAS,iRAA4QgB,EAAMhB,aAGhS,C,8CCID,IAdiB,SACfgB,GAKA,OACE,uCACMA,GADN,IAEEhB,UAAS,iRAA4QgB,EAAMhB,aAGhS,C,oCCOD,IAjB6B,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAC9B,OACE,iBACEG,KAAK,OACLsE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZ5E,UAAWA,EACXE,QAAQ,YAPV,WASE,iBAAME,EAAE,uCACR,iBAAMA,EAAE,0BAGb,C,oCCFD,IAbmC,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UACpC,OACE,gBACEC,MAAM,6BACNC,QAAQ,cACRC,KAAK,eACLH,UAAWA,EAJb,UAME,iBAAMI,EAAE,0TAGb,C,oCCED,IAb4B,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAC7B,OACE,gBACEC,MAAM,6BACND,UAAWA,EACXG,KAAK,eACLD,QAAQ,cAJV,UAME,iBAAME,EAAE,uPAGb,C,oCCED,IAb6B,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAC9B,OACE,gBACEC,MAAM,6BACNC,QAAQ,cACRC,KAAK,eACLH,UAAWA,EAJb,UAME,iBAAMI,EAAE,0sBAGb,C,wDC4CD,IArDiB,SAAC,GAYX,IAXLS,EAWI,EAXJA,MACAgE,EAUI,EAVJA,QACAC,EASI,EATJA,WACAC,EAQI,EARJA,YACArE,EAOI,EAPJA,KAQA,OACE,oBACEV,UAAU,8GADZ,UAIE,iBAAKA,UAAU,gBAAf,WACE,iBAAKA,UAAU,WAAf,UACG+E,IACC,eAAI/E,UAAU,+BAAd,SACG+E,EAAYC,KAAI,SAACC,EAAOC,GACvB,OACE,eAAgBlF,UAAU,OAA1B,SACGiF,EAAME,MACL,UAAC,KAAD,CAAMC,GAAIH,EAAME,KAAMnF,UAAU,GAAhC,UACGiF,EAAMpE,OACP,iBAAMb,UAAU,OAAhB,SAAwB,UAG1B,iBAAMA,UAAU,iBAAhB,SAAkCiF,EAAMpE,SAPnCqE,EAWZ,MAGJrE,IACC,gBAAIb,UAAU,8CAAd,UACGU,GAAQA,EAAK,CAAEV,UAAW,yBAD7B,IACyDa,SAI7D,iBAAKb,UAAU,WAAf,WACE,gBAAKA,UAAU,gBAAf,SAAgC6E,IAC/BC,IAAc,SAAC,IAAD,CAAY9E,UAAU,OAAOY,MAAOkE,WAK5D,C,oICAKO,EAAwB,SAAC,GAAyD,IAAvDtB,EAAsD,EAAtDA,WAC/B,OACE,SAAC,KAAD,CAAMqB,GAAIrB,EAAWuB,KAAMtF,UAAU,WAArC,UACE,iBAAKA,UAAU,+KAAf,WACE,eAAIA,UAAU,iEAAd,SACG+D,EAAWI,QAEd,gBAAKnE,UAAU,MAAf,UACE,uBAAI+D,EAAWQ,oBAKxB,EAED,UA7DgB,WACd,OAA4BtB,EAAAA,EAAAA,KAAcsC,cAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACd,GAAwChE,EAAAA,EAAAA,WAAS,GAAjD,eAAOiE,EAAP,KAAqBC,EAArB,KAEA,OAAIF,GACK,2CAIP,iCACE,gCACE,SAAC,IAAD,CACE/E,KAAMkF,EAAAA,EACN/E,OAAOqD,EAAAA,EAAAA,GAAE,eACTW,SACE,+BACE,SAAC,IAAD,CAAcnE,KAAK,OAAOD,QAAS,kBAAMkF,GAAgB,EAAtB,EAAnC,UACGzB,EAAAA,EAAAA,GAAE,sBAKX,gBAAKlE,UAAU,mCAAf,gBACGwF,QADH,IACGA,OADH,EACGA,EAAMK,YAAYb,KAAI,SAACc,GACtB,OACE,gBAAK9F,UAAU,YAAf,UACE,SAACqF,EAAD,CAAuBtB,WAAY+B,KADLA,EAAW3B,KAI9C,UAGL,SAAC,IAAD,CACExB,OAAQ+C,EACR7E,OAAOqD,EAAAA,EAAAA,GAAE,eACTpB,SAAU,WACR6C,GAAgB,EACjB,EACD9C,UAAW,WACT8C,GAAgB,EACjB,MAIR,C,8ECrDM,IAAMI,EAAoB,SAAC1D,GAChC,OAAOA,EAAK2D,MAAM,KAAKC,KAAK,KAAKC,aAClC,EAEYC,EAAY,SAACC,GACxB,OAAOC,OAAOC,KAAKF,GAChBpB,KAAI,SAACuB,GAAD,OAASA,EAAM,IAAMH,EAAIG,EAAzB,IACJN,KAAK,IACT,C,qCCuED,IAhDA,SAAmBxD,GACjB,IAAM+D,GAAcC,EAAAA,EAAAA,QAAO,MA4C3B,OA1CA1E,EAAAA,EAAAA,YACE,WAEE,IArBkB2E,EAqBZC,EAAiBC,SAASC,cAAT,WAA2BpE,IAE5CqE,EAAaH,GAjCzB,SAA2BlE,GACzB,IAAMsE,EAAgBH,SAASI,cAAc,OAE7C,OADAD,EAAcE,aAAa,KAAMxE,GAC1BsE,CACR,CA6B0CG,CAAkBzE,GAUvD,OAPKkE,IA1BaD,EA2BDI,EA1BrBF,SAASO,KAAKC,aAAaV,EAAUE,SAASO,KAAKE,iBAAiBC,qBA8BhER,EAAWS,YAAYf,EAAYgB,SAE5B,WACLhB,EAAYgB,QAAQC,SACfX,EAAWY,mBACdZ,EAAWW,QAEd,CACF,GACD,CAAChF,IAcI+D,EAAYgB,UACfhB,EAAYgB,QAAUZ,SAASI,cAAc,QAExCR,EAAYgB,OAItB,C,iGC9BD,IAtCoB,WAClB,IAAMG,GAAcC,EAAAA,EAAAA,kBACZC,GAAoBC,EAAAA,EAAAA,KAApBD,gBACFE,EAAS,IAAIC,EAAAA,GAAO,CAAEC,IAAKC,EAAAA,GAAAA,MAAeC,aAAcN,MAExDtC,EAAa,yCAAG,yGAEZwC,EAAOK,0BAA0BC,wBAFrB,8BAGlBrD,KAAI,SAACsD,GACL,OAAO,kBACFA,GADL,IAEEhD,MAAMS,EAAAA,EAAAA,GAAkBuC,EAAInE,OAE/B,IARmB,cACd0B,EADc,yBAUb,CAAEA,YAAAA,IAVW,2CAAH,qDAab3C,EAAW,yCAAG,iGAASa,EAAT,EAASA,WAAT,SACLgE,EAAOK,0BAA0BjF,sBAAsBY,GADlD,mFAAH,sDAIjB,MAAO,CACLwB,eAAegD,EAAAA,EAAAA,UAAS,CAAC,aAAa,kBAAMhD,GAAN,GAAuB,CAC3DiD,gBAAgB,EAChBC,sBAAsB,IAExBvF,aAAawF,EAAAA,EAAAA,aAAYxF,EAAa,CACpCc,UAAW,WACT2D,EAAYgB,kBAAkB,CAAC,YAChC,EACDC,QAAS,SAACC,GACRhF,QAAQiF,MAAMD,EACf,IAGN,C,8BC5CD,WAAiB,C,uBCDF,SAASE,EAAgB3C,EAAKG,EAAKlC,GAYhD,OAXIkC,KAAOH,EACTC,OAAO2C,eAAe5C,EAAKG,EAAK,CAC9BlC,MAAOA,EACP4E,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZ/C,EAAIG,GAAOlC,EAGN+B,CACT,C,oGCXA,SAASgD,EAAQC,EAAQC,GACvB,IAAIhD,EAAOD,OAAOC,KAAK+C,GAEvB,GAAIhD,OAAOkD,sBAAuB,CAChC,IAAIC,EAAUnD,OAAOkD,sBAAsBF,GAC3CC,IAAmBE,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOrD,OAAOsD,yBAAyBN,EAAQK,GAAKT,UACtD,KAAK3C,EAAKsD,KAAKC,MAAMvD,EAAMkD,EAC7B,CAEA,OAAOlD,CACT,CAEe,SAASwD,EAAe/G,GACrC,IAAK,IAAIgH,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIX,EAAQ/C,OAAO6D,IAAS,GAAIC,SAAQ,SAAU5D,IACpD,OAAexD,EAAQwD,EAAK2D,EAAO3D,GACrC,IAAKF,OAAO+D,0BAA4B/D,OAAOgE,iBAAiBtH,EAAQsD,OAAO+D,0BAA0BF,IAAWd,EAAQ/C,OAAO6D,IAASC,SAAQ,SAAU5D,GAC5JF,OAAO2C,eAAejG,EAAQwD,EAAKF,OAAOsD,yBAAyBO,EAAQ3D,GAC7E,GACF,CAEA,OAAOxD,CACT,C","sources":["components/Icons/Loader/Loader.tsx","components/Icons/Save/Save.tsx","components/Buttons/ActionButton.tsx","components/Buttons/SaveStatus.tsx","components/Icons/Times/Times.tsx","components/Dialog/Common/DialogWrapper.tsx","components/Dialog/ProfileDialog/ProfileDialog.tsx","components/Form/Input.tsx","components/Form/Textarea.tsx","components/Icons/Check/Check.tsx","components/Icons/Exclamation/Exclamation.tsx","components/Icons/Plus/Plus.tsx","components/Icons/Trash/Trash.tsx","components/Layout/PageMeta/PageMeta.tsx","components/Templates/Profile/Profile.tsx","helpers/common.ts","hooks/portal/usePortal.ts","hooks/profiles/useProfiles.ts","webpack://owner-app/./src/components/Icons/Loader/Loader.css?58b5","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Trash from '../Icons/Trash/Trash';\n\nexport type ActionButtonState = 'loading' | 'success' | 'error' | 'idle';\n\ntype ActionButtonProps = {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash';\n  type?: 'primary' | 'secondary' | 'remove';\n  state?: ActionButtonState;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n  size?: 'large' | 'small';\n};\n\nexport const mergeStates = (\n  stateA: ActionButtonState,\n  stateB: ActionButtonState\n): ActionButtonState => {\n  if (stateA === 'error' || stateB === 'error') {\n    return 'error';\n  }\n\n  if (stateA === 'loading' || stateB === 'loading') {\n    return 'loading';\n  }\n\n  if (stateA === 'idle' && stateB === 'idle') {\n    return 'idle';\n  }\n\n  if (stateA === 'success' && stateB === 'success') {\n    return 'success';\n  }\n\n  if ((stateA === 'success' && stateB === 'idle') || (stateA === 'idle' && stateB === 'success')) {\n    return 'success';\n  }\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n  size,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-800 dark:text-white'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : 'bg-green-500 hover:bg-green-600 text-white';\n\n  const sizeClasses =\n    size === 'large' ? 'px-5 py-3' : size === 'small' ? 'px-3 py-1 text-sm' : 'px-3 py-2';\n\n  return (\n    <button\n      className={`flex ${\n        children ? 'min-w-[6rem]' : ''\n      } flex-row rounded-md ${sizeClasses} text-left ${colorClasses}  ${\n        state === 'loading' ? 'animate-pulse' : ''\n      } ${className}`}\n      disabled={state === 'loading'}\n      onClick={onClick}\n      title={title}\n    >\n      <span className=\"mr-1\">{children}</span>\n      <Icon className={'my-auto ml-auto h-4 w-4'} />\n    </button>\n  );\n};\n\nexport default ActionButton;\n","import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC } from 'react';\n\nconst Times: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 320 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z\" />\n    </svg>\n  );\n};\n\nexport default Times;\n","import { ReactNode } from 'react';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Times from '../../Icons/Times/Times';\n\nconst DialogWrapper = ({\n  children,\n  title,\n  onClose,\n  size = 'large',\n}: {\n  children: ReactNode;\n  title?: string;\n  onClose?: () => void;\n  size?: 'large' | 'normal' | '4xlarge';\n}) => {\n  return (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n          <div\n            className={`relative transform rounded-lg bg-white text-left shadow-xl transition-all dark:bg-black sm:my-8 sm:w-full ${\n              size === 'normal' ? 'sm:max-w-lg' : size === 'large' ? 'sm:max-w-xl' : 'sm:max-w-4xl'\n            }`}\n          >\n            <div className=\"bg-white px-8 py-8 dark:bg-black dark:text-slate-50\">\n              {title || onClose ? (\n                <div className=\"-mx-8 -mt-8 mb-8 flex flex-row bg-slate-100 px-8 py-4 dark:bg-slate-700\">\n                  {title ? (\n                    <h3\n                      className=\"my-3 text-2xl font-medium leading-6 text-gray-900 dark:text-slate-50\"\n                      id=\"modal-title\"\n                    >\n                      {title}\n                    </h3>\n                  ) : null}\n                  {onClose ? (\n                    <button onClick={onClose} className=\"ml-auto p-2\">\n                      <Times className=\"h-5 w-5\" />\n                    </button>\n                  ) : null}\n                </div>\n              ) : null}\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogWrapper;\n","import { ProfileDefinition } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport useProfiles from '../../../hooks/profiles/useProfiles';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst ProfileDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: ProfileDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutate: saveProfileDefinition, status: saveProfileDefinitionStatus } =\n    useProfiles().saveProfile;\n\n  const [newProfileDef, setNewProfileDef] = useState<ProfileDefinition>({\n    ...defaultValue,\n  });\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            console.log('shall edit/create', newProfileDef);\n            saveProfileDefinition({ profileDef: newProfileDef }, { onSuccess: () => onConfirm() });\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Name')}</label>\n            <Input\n              id=\"name\"\n              name=\"profileName\"\n              defaultValue={newProfileDef.name}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Description')}</label>\n            <Textarea\n              id=\"description\"\n              name=\"profileDescription\"\n              defaultValue={newProfileDef.description}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, description: e.target.value });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"-mx-2 py-3 sm:flex sm:flex-row-reverse\">\n            <ActionButton className=\"mx-2\" state={saveProfileDefinitionStatus} icon={'send'}>\n              {confirmText || t('Add Profile')}\n            </ActionButton>\n            <ActionButton className=\"mx-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default ProfileDialog;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { FC, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n              {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n            </h1>\n          )}\n        </div>\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useProfiles, { ProfileDefinitionVm } from '../../../hooks/profiles/useProfiles';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ProfileDialog from '../../Dialog/ProfileDialog/ProfileDialog';\nimport Heart from '../../Icons/Heart/Heart';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\n\nconst Profile = () => {\n  const { data, isLoading } = useProfiles().fetchProfiles;\n  const [isOpenCreate, setIsOpenCreate] = useState(false);\n\n  if (isLoading) {\n    return <>Loading</>;\n  }\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          icon={Heart}\n          title={t('My Profiles')}\n          actions={\n            <>\n              <ActionButton icon=\"plus\" onClick={() => setIsOpenCreate(true)}>\n                {t('Add Profile')}\n              </ActionButton>\n            </>\n          }\n        />\n        <div className=\"-m-2 flex flex-row items-stretch\">\n          {data?.definitions.map((definition) => {\n            return (\n              <div className=\"w-1/4 p-2\" key={definition.name}>\n                <ProfileDefinitionCard profileDef={definition} />\n              </div>\n            );\n          })}\n        </div>\n      </section>\n      <ProfileDialog\n        isOpen={isOpenCreate}\n        title={t('New Profile')}\n        onCancel={() => {\n          setIsOpenCreate(false);\n        }}\n        onConfirm={() => {\n          setIsOpenCreate(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst ProfileDefinitionCard = ({ profileDef }: { profileDef: ProfileDefinitionVm }) => {\n  return (\n    <Link to={profileDef.slug} className=\"contents\">\n      <div className=\"h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors hover:bg-slate-100 dark:border-gray-800 dark:bg-gray-800 dark:hover:bg-slate-700\">\n        <h2 className=\"bg-slate-100 p-4 text-xl dark:bg-slate-700 dark:text-slate-200\">\n          {profileDef.name}\n        </h2>\n        <div className=\"p-4\">\n          <p>{profileDef.description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Profile;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport const stringify = (obj: unknown) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem) {\n  document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id) {\n  const rootElemRef = useRef(null);\n\n  useEffect(\n    function setupElement() {\n      // Look for existing target dom element to append to\n      const existingParent = document.querySelector(`#${id}`);\n      // Parent is either a new root or the existing dom element\n      const parentElem = existingParent || createRootElement(id);\n\n      // If there is no existing DOM element, add a new one.\n      if (!existingParent) {\n        addRootElement(parentElem);\n      }\n\n      // Add the detached element to the parent\n      parentElem.appendChild(rootElemRef.current);\n\n      return function removeElement() {\n        rootElemRef.current.remove();\n        if (!parentElem.childElementCount) {\n          parentElem.remove();\n        }\n      };\n    },\n    [id]\n  );\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ApiType, Client, ProfileDefinition } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ProfileDefinitionVm extends ProfileDefinition {\n  slug: string;\n}\n\nconst useProfiles = () => {\n  const queryClient = useQueryClient();\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchProfiles = async () => {\n    const definitions = await (\n      await client.profileDefinitionProvider.getProfileDefinitions()\n    ).map((def) => {\n      return {\n        ...def,\n        slug: convertTextToSlug(def.name),\n      } as ProfileDefinitionVm;\n    });\n\n    return { definitions };\n  };\n\n  const saveProfile = async ({ profileDef }: { profileDef: ProfileDefinition }) => {\n    return await client.profileDefinitionProvider.saveProfileDefinition(profileDef);\n  };\n\n  return {\n    fetchProfiles: useQuery(['profiles'], () => fetchProfiles(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n    saveProfile: useMutation(saveProfile, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['profiles']);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useProfiles;\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["require","className","xmlns","viewBox","fill","d","mergeStates","stateA","stateB","children","onClick","icon","type","state","title","size","Icon","props","Check","Exclamation","Arrow","Plus","Trash","colorClasses","sizeClasses","disabled","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","onClose","role","id","confirmText","isOpen","defaultValue","onConfirm","onCancel","target","usePortal","useProfiles","saveProfile","saveProfileDefinition","mutate","saveProfileDefinitionStatus","status","newProfileDef","setNewProfileDef","dialog","onSubmit","e","preventDefault","console","log","profileDef","onSuccess","htmlFor","t","name","onChange","value","required","description","createPortal","stroke","strokeLinecap","strokeLinejoin","strokeWidth","actions","saveStatus","breadCrumbs","map","crumb","index","href","to","ProfileDefinitionCard","slug","fetchProfiles","data","isLoading","isOpenCreate","setIsOpenCreate","Heart","definitions","definition","convertTextToSlug","split","join","toLowerCase","stringify","obj","Object","keys","key","rootElemRef","useRef","rootElem","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childElementCount","queryClient","useQueryClient","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","profileDefinitionProvider","getProfileDefinitions","def","useQuery","refetchOnMount","refetchOnWindowFocus","useMutation","invalidateQueries","onError","ex","error","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}