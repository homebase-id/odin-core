{"version":3,"file":"static/js/20.47fcb3cc.chunk.js","mappings":"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","sources":["components/Buttons/SaveStatus.tsx","components/Layout/PageMeta/PageMeta.tsx","components/PermissionViews/DrivePermissionView/DrivePermissionView.tsx","components/Sections/Section.tsx","hooks/app/useApp.ts","components/Templates/AppDetails/AppDetails.tsx","components/Templates/DemoData/helpers.ts","hooks/drive/useDrive.ts","provider/app/AppManagementProvider.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n              {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n            </h1>\n          )}\n        </div>\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { Link } from 'react-router-dom';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport { DriveGrant } from '../../../provider/connections/CirlceDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport { getAccessFromPermissionNumber } from '../../Templates/DemoData/helpers';\n\nconst DrivePermissionView = ({\n  driveGrant,\n  permissionTree,\n  className,\n}: {\n  driveGrant: DriveGrant;\n  permissionTree?: string;\n  className?: string;\n}) => {\n  const { data: drive } = useDrive({ targetDrive: driveGrant.drive }).fetch;\n\n  return (\n    <div\n      key={`${driveGrant.drive.alias}-${driveGrant.drive.type}`}\n      className={`flex flex-row ${className}`}\n      title={permissionTree}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"contents\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"flex flex-col\">\n          <p className={`leading-none ${!permissionTree ? 'my-auto' : ''}`}>\n            {drive?.name}:{' '}\n            {getAccessFromPermissionNumber(driveGrant.permission, drivePermissionLevels).name}\n          </p>\n          {permissionTree && <small className=\"ml-1\">{permissionTree}</small>}\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default DrivePermissionView;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport AppManagementProvider from '../../provider/app/AppManagementProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useApp = ({ appId }: { appId: string }) => {\n  const { getSharedSecret } = useAuth();\n  const appManagementProvider = AppManagementProvider.getInstance(getSharedSecret());\n\n  const fetch = async ({ appId }: { appId: string }) => {\n    return await appManagementProvider.GetAppRegistration({ appId: appId });\n  };\n\n  return {\n    fetch: useQuery(['app', appId], () => fetch({ appId }), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useApp;\n","import { useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useApp from '../../../hooks/app/useApp';\nimport Flag from '../../Icons/Flag/Flag';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport DrivePermissionView from '../../PermissionViews/DrivePermissionView/DrivePermissionView';\nimport Section from '../../Sections/Section';\n\nconst AppDetails = () => {\n  const { appKey } = useParams();\n  const decodedAppKey = decodeURIComponent(appKey);\n  const {\n    fetch: { data: app, isLoading: appLoading },\n  } = useApp({ appId: decodedAppKey });\n\n  //   const [isOpenEdit, setIsOpenEdit] = useState(false);\n\n  if (appLoading) {\n    <>Loading</>;\n  }\n\n  if (!app) {\n    return <>No matching app found</>;\n  }\n\n  return (\n    <>\n      <PageMeta\n        icon={Flag}\n        title={`${app.name}`}\n        breadCrumbs={[{ href: '/owner/apps', title: 'My apps' }, { title: app.name ?? '' }]}\n        // actions={\n        //   <>\n        //     <ActionButton\n        //       type=\"primary\"\n        //       className=\"my-auto ml-auto\"\n        //       onClick={() => {\n        //         setIsOpenMemberLookup(true);\n        //       }}\n        //     >\n        //       Edit Members\n        //     </ActionButton>\n        //     <ActionButton\n        //       type=\"primary\"\n        //       className=\"my-auto ml-2\"\n        //       onClick={() => {\n        //         setIsOpenEdit(true);\n        //       }}\n        //     >\n        //       Edit app\n        //     </ActionButton>\n        //   </>\n        // }\n      />\n      <section>\n        <p>Permissions: {app.grant.permissionSet.permissions}</p>\n      </section>\n\n      <Section title={t('Access on the following drives')} isOpaqueBg={true}>\n        {app.grant?.driveGrants?.length ? (\n          <>\n            {app.grant.driveGrants.map((grant) => {\n              return (\n                <DrivePermissionView\n                  key={`${grant.drive.alias}-${grant.drive.type}`}\n                  driveGrant={grant}\n                  className=\"mb-6\"\n                />\n              );\n            })}\n          </>\n        ) : (\n          <div className=\"flex flex-row\">\n            <p className=\"my-auto\">{t(\"This app doesn't have any access\")}</p>\n          </div>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default AppDetails;\n","export const rando = (arr: string[]) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const getRandomAbstract = () => {\n  const sentences = [\n    'Ut bibendum, neque ac lacinia aliquam, justo ipsum aliquam urna, id vestibulum augue mauris sit amet lacus.',\n    'Proin ante sapien, interdum sit amet eros sit amet, eleifend pharetra metus.',\n    'Sed elit mi, euismod eget neque at, suscipit aliquam nisi.',\n    'Nunc diam arcu, tincidunt quis dignissim ac, volutpat non odio.',\n  ];\n\n  return rando(sentences);\n};\n\nexport const getFunName = () => {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)} ${rando(adjectives)} ${rando(nouns)}`;\n};\n\nexport const base64ToArrayBuffer = (base64: string) => {\n  const binary_string = window.atob(base64);\n  const len = binary_string.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nexport const arrayBufferToBase64 = (buffer: Iterable<number>) => {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n};\n\nexport const getAccessFromPermissionNumber = (\n  value: number,\n  permissionLevels: { name: string; value: number }[]\n) => {\n  return permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= value) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient, TargetDrive } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrive = ({ targetDrive }: { targetDrive: TargetDrive }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetch = async (targetDrive: TargetDrive) => {\n    const allDrives = await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n\n    return allDrives.find(\n      (drive) =>\n        drive.targetDriveInfo.alias === targetDrive.alias &&\n        drive.targetDriveInfo.type === targetDrive.type\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['drive', `${targetDrive.alias}_${targetDrive.type}`],\n      () => fetch(targetDrive),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useDrive;\n","import {\n  AppClientRegistrationRequest,\n  AppClientRegistrationResponse,\n  AppRegistrationRequest,\n  RedactedAppRegistration,\n  GetAppRequest,\n} from './AppManagementProviderTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nexport default class AppManagementProvider extends OwnerProviderBase {\n  private static instance: AppManagementProvider;\n  constructor(sharedSecret: Uint8Array | undefined) {\n    super(sharedSecret);\n  }\n\n  //adds the specified client to the list of allowed clients for a given app; returns a CAT\n  async RegisterAppClient(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/client',\n      request\n    );\n    return response.data;\n  }\n\n  async RegisterChatAppClient_temp(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/chatclient_temp',\n      request\n    );\n    console.log('RegisterChatAppClient_temp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async RegisterApp(request: AppRegistrationRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>(\n      'appmanagement/register/app',\n      request\n    );\n\n    console.log('RegisterApp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async GetAppRegistration(request: GetAppRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>('appmanagement/app', request);\n    return response.data;\n  }\n\n  async GetAppRegistrations(): Promise<RedactedAppRegistration[]> {\n    const client = this.createAxiosClient();\n    const response = await client.get<RedactedAppRegistration[]>('appmanagement/list');\n    return response.data;\n  }\n\n  public static getInstance(sharedSecret): AppManagementProvider {\n    if (!AppManagementProvider.instance) {\n      AppManagementProvider.instance = new AppManagementProvider(sharedSecret);\n    }\n\n    return AppManagementProvider.instance;\n  }\n}\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["className","state","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","title","actions","saveStatus","breadCrumbs","icon","map","crumb","index","href","to","driveGrant","permissionTree","drive","useDrive","targetDrive","fetch","data","targetDriveInfo","alias","type","name","getAccessFromPermissionNumber","permission","drivePermissionLevels","children","isOpaqueBg","isBorderLess","appId","getSharedSecret","useAuth","appManagementProvider","AppManagementProvider","GetAppRegistration","useQuery","refetchOnMount","refetchOnWindowFocus","appKey","useParams","decodedAppKey","decodeURIComponent","useApp","app","isLoading","PageMeta","Flag","grant","permissionSet","permissions","Section","t","driveGrants","length","DrivePermissionView","rando","arr","Math","floor","random","getRandomAbstract","getFunName","adjectives","base64ToArrayBuffer","base64","binary_string","window","atob","len","bytes","Uint8Array","i","charCodeAt","buffer","value","permissionLevels","reduce","prevValue","currValue","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","pageNumber","pageSize","results","allDrives","find","request","this","createAxiosClient","post","response","console","log","get","instance","OwnerProviderBase","circlePermissionLevels"],"sourceRoot":""}