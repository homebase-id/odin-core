{"version":3,"file":"static/js/462.d7ae9b4d.chunk.js","mappings":"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","sources":["components/Dialog/ProfileDialog/ProfileDialog.tsx","components/Form/Input.tsx","components/Form/Textarea.tsx","components/Templates/Profile/Profile.tsx","helpers/common.ts","hooks/profiles/useProfiles.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { ProfileDefinition } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport useProfiles from '../../../hooks/profiles/useProfiles';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst ProfileDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: ProfileDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutateAsync: saveProfileDefinition, status: saveProfileDefinitionStatus } =\n    useProfiles().saveProfile;\n\n  const [newProfileDef, setNewProfileDef] = useState<ProfileDefinition>({\n    ...defaultValue,\n  });\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            await saveProfileDefinition(newProfileDef);\n            onConfirm();\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Name')}</label>\n            <Input\n              id=\"name\"\n              name=\"profileName\"\n              defaultValue={newProfileDef.name}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Description')}</label>\n            <Textarea\n              id=\"description\"\n              name=\"profileDescription\"\n              defaultValue={newProfileDef.description}\n              onChange={(e) => {\n                setNewProfileDef({ ...newProfileDef, description: e.target.value });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={saveProfileDefinitionStatus} icon={'send'}>\n              {confirmText || t('Add Profile')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default ProfileDialog;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-300 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useProfiles, { ProfileDefinitionVm } from '../../../hooks/profiles/useProfiles';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ProfileDialog from '../../Dialog/ProfileDialog/ProfileDialog';\nimport Heart from '../../Icons/Heart/Heart';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst Profile = () => {\n  const { data: profiles, isLoading } = useProfiles().fetchProfiles;\n  const [isOpenCreate, setIsOpenCreate] = useState(false);\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          icon={Heart}\n          title={t('My Profiles')}\n          actions={\n            <>\n              <ActionButton icon=\"plus\" onClick={() => setIsOpenCreate(true)} className=\"m-2\">\n                {t('Add Profile')}\n              </ActionButton>\n            </>\n          }\n        />\n        {isLoading ? (\n          <div className=\"-m-2 flex\">\n            <LoadingParagraph className=\"m-2 h-10 w-1/4\" />\n            <LoadingParagraph className=\"m-2 h-10 w-1/4\" />\n          </div>\n        ) : (\n          <div className=\"-m-2 flex flex-row items-stretch\">\n            {profiles?.map((definition) => {\n              return (\n                <div className=\"w-1/4 p-2\" key={definition.name}>\n                  <ProfileDefinitionCard profileDef={definition} />\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </section>\n      <ProfileDialog\n        isOpen={isOpenCreate}\n        title={t('New Profile')}\n        onCancel={() => {\n          setIsOpenCreate(false);\n        }}\n        onConfirm={() => {\n          setIsOpenCreate(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst ProfileDefinitionCard = ({ profileDef }: { profileDef: ProfileDefinitionVm }) => {\n  return (\n    <Link to={profileDef.slug} className=\"contents\">\n      <div className=\"h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors hover:bg-slate-100 dark:border-gray-800 dark:bg-gray-800 dark:hover:bg-slate-700\">\n        <h2 className=\"bg-slate-100 p-4 text-xl dark:bg-slate-700 dark:text-slate-200\">\n          {profileDef.name}\n        </h2>\n        <div className=\"p-4\">\n          <p>{profileDef.description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Profile;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport const stringify = (obj: unknown) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ApiType, Client, ProfileDefinition } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ProfileDefinitionVm extends ProfileDefinition {\n  slug: string;\n}\n\nconst useProfiles = () => {\n  const queryClient = useQueryClient();\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    const definitions = await (\n      await client.profileDefinitionProvider.getProfileDefinitions()\n    ).map((def) => {\n      return {\n        ...def,\n        slug: convertTextToSlug(def.name),\n      } as ProfileDefinitionVm;\n    });\n\n    return definitions;\n  };\n\n  const saveProfile = async (profileDef: ProfileDefinition) => {\n    return await client.profileDefinitionProvider.saveProfileDefinition(profileDef);\n  };\n\n  return {\n    fetchProfiles: useQuery(['profiles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n    saveProfile: useMutation(saveProfile, {\n      onMutate: async (newProfile) => {\n        await queryClient.cancelQueries(['profiles']);\n\n        const previousProfiles: ProfileDefinitionVm[] = queryClient.getQueryData(['profiles']);\n        const newProfiles = previousProfiles?.map((profile) =>\n          profile.profileId === newProfile.profileId\n            ? ({ ...newProfile, slug: convertTextToSlug(newProfile.name) } as ProfileDefinitionVm)\n            : profile\n        );\n\n        queryClient.setQueryData(['profiles'], newProfiles);\n\n        return { previousProfiles, newProfile };\n      },\n      onError: (err, newProfile, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['profiles'], context.previousProfiles);\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries(['profiles']);\n      },\n    }),\n  };\n};\n\nexport default useProfiles;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["title","confirmText","isOpen","defaultValue","onConfirm","onCancel","target","usePortal","useProfiles","saveProfile","saveProfileDefinition","mutateAsync","saveProfileDefinitionStatus","status","useState","newProfileDef","setNewProfileDef","dialog","onClose","onSubmit","e","preventDefault","className","htmlFor","t","id","name","onChange","value","required","description","state","icon","type","onClick","createPortal","props","ProfileDefinitionCard","profileDef","to","slug","fetchProfiles","profiles","data","isLoading","isOpenCreate","setIsOpenCreate","Heart","actions","map","definition","convertTextToSlug","text","split","join","toLowerCase","stringify","obj","Object","keys","key","queryClient","useQueryClient","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchAll","profileDefinitionProvider","getProfileDefinitions","def","definitions","useQuery","refetchOnWindowFocus","useMutation","onMutate","newProfile","cancelQueries","previousProfiles","getQueryData","newProfiles","profile","profileId","setQueryData","onError","err","context","console","error","onSettled","invalidateQueries","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}