{"version":3,"file":"static/js/634.48698a91.chunk.js","mappings":"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","sources":["components/Dialog/ImageDialog/ImageDialog.tsx","components/Form/ImageSelector.tsx","components/Form/Input.tsx","components/Form/Textarea.tsx","hooks/intersection/useIntersection.ts","components/RichTextEditor/RichTextEditorComponents.tsx","components/Icons/RichTextEditorIcons/Bold/Bold.tsx","components/Icons/RichTextEditorIcons/Italic/Italic.tsx","components/Icons/RichTextEditorIcons/Underline/Underline.tsx","components/Icons/RichTextEditorIcons/Quote/Quote.tsx","components/Icons/RichTextEditorIcons/Code/Code.tsx","components/Icons/RichTextEditorIcons/Heading/Heading.tsx","components/Icons/RichTextEditorIcons/OrderedList/OrderedList.tsx","components/Icons/RichTextEditorIcons/UnorderedList/UnorderedList.tsx","components/Icons/RichTextEditorIcons/Image/Image.tsx","components/RichTextEditor/InsertImageButton.tsx","components/Image/Image.tsx","components/RichTextEditor/RichTextEditor.tsx","components/Blog/BlogFieldsEditor/BlogFieldsEditor.tsx","components/Blog/BlogArticleCreator/BlogArticleCreator.tsx","components/Blog/BlogEditor/BlogEditor.tsx","components/Form/Checkbox.tsx","components/Dialog/PublishDialog/PublishDialog.tsx","components/Templates/Blog/BlogDetail.tsx","hooks/blogs/useChannels.ts","hooks/media/useImage.ts"],"sourcesContent":["import { AccessControlList, TargetDrive } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useImage from '../../../hooks/media/useImage';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\n\nconst ImageDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  targetDrive,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n  targetDrive: TargetDrive;\n\n  onConfirm: (imageFileId: string) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutate: saveImage, status } = useImage().save;\n  const [file, setFile] = useState<File>();\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const uploadImage = async () => {\n    const bytes = new Uint8Array(await file.arrayBuffer());\n    saveImage(\n      {\n        acl: acl,\n        bytes: bytes,\n        fileId: undefined,\n        targetDrive: targetDrive,\n      },\n      {\n        onSuccess: onConfirm,\n      }\n    );\n  };\n\n  const dialog = (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n          <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all dark:bg-black sm:my-8 sm:w-full sm:max-w-lg\">\n            <div className=\"bg-white px-4 pt-5 pb-4 dark:bg-black sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <h3\n                    className=\"mb-3 text-lg font-medium leading-6 text-gray-900 dark:text-slate-50\"\n                    id=\"modal-title\"\n                  >\n                    {title}\n                  </h3>\n\n                  <input\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      if (file) {\n                        setFile(file);\n                      }\n                    }}\n                    type=\"file\"\n                    accept=\"image/png, image/jpeg, image/tiff, image/webp\"\n                    className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100`}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"-m-2 flex flex-row-reverse px-4 py-3\">\n              <ActionButton className=\"m-2\" onClick={uploadImage} state={status}>\n                {confirmText ?? 'Add'}\n              </ActionButton>\n              <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n                {t('Cancel')}\n              </ActionButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default ImageDialog;\n","import { AccessControlList, TargetDrive } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useImage from '../../hooks/media/useImage';\nimport ConfirmDialog from '../Dialog/ConfirmDialog/ConfirmDialog';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Pencil from '../Icons/Pencil/Pencil';\nimport Trash from '../Icons/Trash/Trash';\nimport ImageDialog from '../Dialog/ImageDialog/ImageDialog';\n\ninterface ImageSelectorProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n  targetDrive?: TargetDrive;\n  acl: AccessControlList;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n}\n\nconst ImageSelector = ({ targetDrive, acl, onChange, defaultValue, name }: ImageSelectorProps) => {\n  const {\n    fetch: { data: imageUrl, isLoading },\n    remove: { mutate: removeImage },\n  } = useImage(typeof defaultValue === 'string' ? defaultValue : undefined, targetDrive);\n  const [isEdit, setIsEdit] = useState(false);\n  const [needsConfirmation, setNeedsConfirmation] = useState(false);\n\n  const removeData = () => {\n    removeImage(\n      {\n        fileId: typeof defaultValue === 'string' ? defaultValue : undefined,\n        targetDrive: targetDrive,\n      },\n      {\n        onSuccess: () => {\n          onChange({ target: { name: name, value: '' } });\n        },\n      }\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"aspect-square max-w-[20rem] animate-pulse bg-slate-100 dark:bg-slate-700\"></div>\n    );\n  }\n\n  return (\n    <>\n      {imageUrl ? (\n        <div className=\"flex\">\n          <div className=\"relative mr-auto\">\n            <button\n              className=\"absolute top-2 right-2 rounded-full bg-white p-2\"\n              onClick={(e) => {\n                e.preventDefault();\n                setIsEdit(true);\n                return false;\n              }}\n            >\n              <Pencil className=\"h-4 w-4 text-black\" />\n            </button>\n            <button\n              className=\"absolute bottom-2 right-2 rounded-full bg-red-200 p-2\"\n              onClick={() => {\n                setNeedsConfirmation(true);\n                return false;\n              }}\n            >\n              <Trash className=\"h-4 w-4 text-black\" />\n            </button>\n            <img\n              src={imageUrl}\n              alt={imageUrl}\n              className=\"max-h-[20rem]\"\n              onClick={() => {\n                setIsEdit(true);\n              }}\n            />\n          </div>\n        </div>\n      ) : (\n        <div\n          className=\"relative flex aspect-video max-w-[20rem] cursor-pointer bg-slate-100 dark:bg-slate-700\"\n          onClick={(e) => {\n            e.preventDefault();\n            setIsEdit(true);\n          }}\n        >\n          <Exclamation className=\"m-auto h-8 w-8\" />\n          <p className=\"absolute inset-0 top-auto pb-5 text-center text-slate-400\">\n            {t('No image selected')}\n          </p>\n        </div>\n      )}\n\n      <ImageDialog\n        acl={acl}\n        isOpen={isEdit}\n        targetDrive={targetDrive}\n        title={t('Insert image')}\n        confirmText={t('Add')}\n        onCancel={() => setIsEdit(false)}\n        onConfirm={(imageFileId) => {\n          onChange({ target: { name: name, value: imageFileId } });\n          setIsEdit(false);\n        }}\n      />\n      <ConfirmDialog\n        title=\"Remove Current Image\"\n        confirmText=\"Permanently remove\"\n        needConfirmation={needsConfirmation}\n        onConfirm={removeData}\n        onCancel={() => {\n          setNeedsConfirmation(false);\n        }}\n      >\n        <p className=\"text-sm text-gray-500\">\n          {t('Are you sure you want to remove the current file? This action cannot be undone.')}\n        </p>\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default ImageSelector;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-300 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (elem: React.RefObject<HTMLElement>, callback: () => void) => {\n  useEffect(() => {\n    const target = elem.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, []);\n};\n","import { PropsWithChildren } from 'react';\n\ninterface BaseProps {\n  className?: string;\n  [key: string]: unknown;\n}\n\nexport const Button = ({\n  className,\n  active,\n  reversed,\n  ...props\n}: PropsWithChildren<\n  {\n    active?: boolean;\n    reversed?: boolean;\n  } & BaseProps\n>) => (\n  <button\n    {...props}\n    className={`${className ?? ''} cursor-pointer px-1 py-2 ${\n      reversed\n        ? active\n          ? 'text-white'\n          : 'text-slate-400'\n        : active\n        ? 'text-black dark:text-white'\n        : 'text-slate-200 dark:text-slate-700'\n    }`}\n  />\n);\n\nexport const Toolbar = ({ className, ...props }: PropsWithChildren<BaseProps>) => (\n  <div\n    {...props}\n    className={`${\n      className ?? ''\n    } relative -mx-1 mb-3 flex flex-row flex-wrap border-b border-slate-200 border-opacity-50`}\n  />\n);\n","import { FC } from 'react';\n\nconst Bold: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M321.1 242.4C340.1 220.1 352 191.6 352 160c0-70.59-57.42-128-128-128L32 32.01c-17.67 0-32 14.31-32 32s14.33 32 32 32h16v320H32c-17.67 0-32 14.31-32 32s14.33 32 32 32h224c70.58 0 128-57.41 128-128C384 305.3 358.6 264.8 321.1 242.4zM112 96.01H224c35.3 0 64 28.72 64 64s-28.7 64-64 64H112V96.01zM256 416H112v-128H256c35.3 0 64 28.71 64 63.1S291.3 416 256 416z\" />\n    </svg>\n  );\n};\n\nexport default Bold;\n","import { FC } from 'react';\n\nconst Italic: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M384 64.01c0 17.69-14.31 32-32 32h-58.67l-133.3 320H224c17.69 0 32 14.31 32 32s-14.31 32-32 32H32c-17.69 0-32-14.31-32-32s14.31-32 32-32h58.67l133.3-320H160c-17.69 0-32-14.31-32-32s14.31-32 32-32h192C369.7 32.01 384 46.33 384 64.01z\" />\n    </svg>\n  );\n};\n\nexport default Italic;\n","import { FC } from 'react';\n\nconst Underline: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M416 448H32c-17.69 0-32 14.31-32 32s14.31 32 32 32h384c17.69 0 32-14.31 32-32S433.7 448 416 448zM48 64.01H64v160c0 88.22 71.78 159.1 160 159.1s160-71.78 160-159.1v-160h16c17.69 0 32-14.32 32-32s-14.31-31.1-32-31.1l-96-.0049c-17.69 0-32 14.32-32 32s14.31 32 32 32H320v160c0 52.94-43.06 95.1-96 95.1S128 276.1 128 224v-160h16c17.69 0 32-14.31 32-32s-14.31-32-32-32l-96 .0049c-17.69 0-32 14.31-32 31.1S30.31 64.01 48 64.01z\" />\n    </svg>\n  );\n};\n\nexport default Underline;\n","import { FC } from 'react';\n\nconst Quote: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M96 224C84.72 224 74.05 226.3 64 229.9V224c0-35.3 28.7-64 64-64c17.67 0 32-14.33 32-32S145.7 96 128 96C57.42 96 0 153.4 0 224v96c0 53.02 42.98 96 96 96s96-42.98 96-96S149 224 96 224zM352 224c-11.28 0-21.95 2.305-32 5.879V224c0-35.3 28.7-64 64-64c17.67 0 32-14.33 32-32s-14.33-32-32-32c-70.58 0-128 57.42-128 128v96c0 53.02 42.98 96 96 96s96-42.98 96-96S405 224 352 224z\" />\n    </svg>\n  );\n};\n\nexport default Quote;\n","import { FC } from 'react';\n\nconst Code: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 640 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M414.8 40.79L286.8 488.8C281.9 505.8 264.2 515.6 247.2 510.8C230.2 505.9 220.4 488.2 225.2 471.2L353.2 23.21C358.1 6.216 375.8-3.624 392.8 1.232C409.8 6.087 419.6 23.8 414.8 40.79H414.8zM518.6 121.4L630.6 233.4C643.1 245.9 643.1 266.1 630.6 278.6L518.6 390.6C506.1 403.1 485.9 403.1 473.4 390.6C460.9 378.1 460.9 357.9 473.4 345.4L562.7 256L473.4 166.6C460.9 154.1 460.9 133.9 473.4 121.4C485.9 108.9 506.1 108.9 518.6 121.4V121.4zM166.6 166.6L77.25 256L166.6 345.4C179.1 357.9 179.1 378.1 166.6 390.6C154.1 403.1 133.9 403.1 121.4 390.6L9.372 278.6C-3.124 266.1-3.124 245.9 9.372 233.4L121.4 121.4C133.9 108.9 154.1 108.9 166.6 121.4C179.1 133.9 179.1 154.1 166.6 166.6V166.6z\" />\n    </svg>\n  );\n};\n\nexport default Code;\n","import { FC } from 'react';\n\nconst Heading: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M448 448c0 17.69-14.33 32-32 32h-96c-17.67 0-32-14.31-32-32s14.33-32 32-32h16v-144h-224v144H128c17.67 0 32 14.31 32 32s-14.33 32-32 32H32c-17.67 0-32-14.31-32-32s14.33-32 32-32h16v-320H32c-17.67 0-32-14.31-32-32s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32H112v112h224v-112H320c-17.67 0-32-14.31-32-32s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32h-16v320H416C433.7 416 448 430.3 448 448z\" />\n    </svg>\n  );\n};\n\nexport default Heading;\n","import { FC } from 'react';\n\nconst OrderedList: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M55.1 56.04C55.1 42.78 66.74 32.04 79.1 32.04H111.1C125.3 32.04 135.1 42.78 135.1 56.04V176H151.1C165.3 176 175.1 186.8 175.1 200C175.1 213.3 165.3 224 151.1 224H71.1C58.74 224 47.1 213.3 47.1 200C47.1 186.8 58.74 176 71.1 176H87.1V80.04H79.1C66.74 80.04 55.1 69.29 55.1 56.04V56.04zM118.7 341.2C112.1 333.8 100.4 334.3 94.65 342.4L83.53 357.9C75.83 368.7 60.84 371.2 50.05 363.5C39.26 355.8 36.77 340.8 44.47 330.1L55.59 314.5C79.33 281.2 127.9 278.8 154.8 309.6C176.1 333.1 175.6 370.5 153.7 394.3L118.8 432H152C165.3 432 176 442.7 176 456C176 469.3 165.3 480 152 480H64C54.47 480 45.84 474.4 42.02 465.6C38.19 456.9 39.9 446.7 46.36 439.7L118.4 361.7C123.7 355.9 123.8 347.1 118.7 341.2L118.7 341.2zM512 64C529.7 64 544 78.33 544 96C544 113.7 529.7 128 512 128H256C238.3 128 224 113.7 224 96C224 78.33 238.3 64 256 64H512zM512 224C529.7 224 544 238.3 544 256C544 273.7 529.7 288 512 288H256C238.3 288 224 273.7 224 256C224 238.3 238.3 224 256 224H512zM512 384C529.7 384 544 398.3 544 416C544 433.7 529.7 448 512 448H256C238.3 448 224 433.7 224 416C224 398.3 238.3 384 256 384H512z\" />\n    </svg>\n  );\n};\n\nexport default OrderedList;\n","import { FC } from 'react';\n\nconst UnorderedList: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M16 96C16 69.49 37.49 48 64 48C90.51 48 112 69.49 112 96C112 122.5 90.51 144 64 144C37.49 144 16 122.5 16 96zM480 64C497.7 64 512 78.33 512 96C512 113.7 497.7 128 480 128H192C174.3 128 160 113.7 160 96C160 78.33 174.3 64 192 64H480zM480 224C497.7 224 512 238.3 512 256C512 273.7 497.7 288 480 288H192C174.3 288 160 273.7 160 256C160 238.3 174.3 224 192 224H480zM480 384C497.7 384 512 398.3 512 416C512 433.7 497.7 448 480 448H192C174.3 448 160 433.7 160 416C160 398.3 174.3 384 192 384H480zM16 416C16 389.5 37.49 368 64 368C90.51 368 112 389.5 112 416C112 442.5 90.51 464 64 464C37.49 464 16 442.5 16 416zM112 256C112 282.5 90.51 304 64 304C37.49 304 16 282.5 16 256C16 229.5 37.49 208 64 208C90.51 208 112 229.5 112 256z\" />\n    </svg>\n  );\n};\n\nexport default UnorderedList;\n","import { FC } from 'react';\n\nconst Image: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M447.1 32h-384C28.64 32-.0091 60.65-.0091 96v320c0 35.35 28.65 64 63.1 64h384c35.35 0 64-28.65 64-64V96C511.1 60.65 483.3 32 447.1 32zM111.1 96c26.51 0 48 21.49 48 48S138.5 192 111.1 192s-48-21.49-48-48S85.48 96 111.1 96zM446.1 407.6C443.3 412.8 437.9 416 432 416H82.01c-6.021 0-11.53-3.379-14.26-8.75c-2.73-5.367-2.215-11.81 1.334-16.68l70-96C142.1 290.4 146.9 288 152 288s9.916 2.441 12.93 6.574l32.46 44.51l93.3-139.1C293.7 194.7 298.7 192 304 192s10.35 2.672 13.31 7.125l128 192C448.6 396 448.9 402.3 446.1 407.6z\" />\n    </svg>\n  );\n};\n\nexport default Image;\n","import { useState } from 'react';\nimport { Transforms } from 'slate';\nimport { useSlateStatic } from 'slate-react';\nimport ImageDialog from '../Dialog/ImageDialog/ImageDialog';\nimport { CustomEditor, ImageElement } from './rich-text-editor';\nimport { Button } from './RichTextEditorComponents';\nimport Image from '../Icons/RichTextEditorIcons/Image/Image';\nimport {\n  BlogConfig,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\n\nconst insertImage = (editor: CustomEditor, imageFileId: string) => {\n  const text = { text: '' };\n  const image: ImageElement = { type: 'image', imageFileId, children: [text] };\n  Transforms.insertNodes(editor, image);\n};\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst InsertImageButton = () => {\n  const [isActive, setIsActive] = useState(false);\n  const editor = useSlateStatic();\n\n  return (\n    <>\n      <Button\n        onClick={(e) => {\n          e.preventDefault();\n          setIsActive(true);\n        }}\n      >\n        <Image className=\"h-5 w-5\" />\n      </Button>\n      <ImageDialog\n        isOpen={isActive}\n        onCancel={() => {\n          setIsActive(false);\n        }}\n        onConfirm={(imageFileId) => {\n          insertImage(editor, imageFileId);\n\n          setIsActive(false);\n        }}\n        title={t('Insert image')}\n        confirmText={t('Add')}\n        acl={{ requiredSecurityGroup: SecurityGroupType.Anonymous }}\n        targetDrive={defaultDrive}\n      />\n    </>\n  );\n};\n\nexport default InsertImageButton;\n","import { TargetDrive } from '@youfoundation/transit-lib';\nimport { useRef, useState } from 'react';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\nimport useImage from '../../hooks/media/useImage';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: imageUrl } = useImage(isInView ? fileId : undefined, targetDrive).fetch;\n\n  useIntersection(imgRef, () => {\n    setIsInView(true);\n  });\n\n  return (\n    <img\n      src={imageUrl}\n      alt={isInView && imageUrl ? alt : ' '}\n      className={`${className} ${\n        (!isInView || !imageUrl) && 'h-full w-full animate-pulse bg-slate-100'\n      }`}\n      title={title}\n      ref={imgRef}\n    />\n  );\n};\n\nexport default Image;\n","import { useCallback, useMemo } from 'react';\nimport isHotkey from 'is-hotkey';\nimport {\n  Editable,\n  withReact,\n  useSlate,\n  Slate,\n  ReactEditor,\n  useSelected,\n  useFocused,\n} from 'slate-react';\nimport { Editor, Transforms, createEditor, Descendant, Element as SlateElement } from 'slate';\nimport { withHistory } from 'slate-history';\n\nimport { Button, Toolbar } from './RichTextEditorComponents';\nimport { debounce } from 'lodash-es';\n\nimport Bold from '../Icons/RichTextEditorIcons/Bold/Bold';\nimport Italic from '../Icons/RichTextEditorIcons/Italic/Italic';\nimport Underline from '../Icons/RichTextEditorIcons/Underline/Underline';\nimport Quote from '../Icons/RichTextEditorIcons/Quote/Quote';\nimport Code from '../Icons/RichTextEditorIcons/Code/Code';\nimport Heading from '../Icons/RichTextEditorIcons/Heading/Heading';\nimport OrderedList from '../Icons/RichTextEditorIcons/OrderedList/OrderedList';\nimport UnorderedList from '../Icons/RichTextEditorIcons/UnorderedList/UnorderedList';\n\nimport InsertImageButton from './InsertImageButton';\nimport { BlogConfig, HomePageConfig, TargetDrive } from '@youfoundation/transit-lib';\nimport Image from '../Image/Image';\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code',\n};\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list'];\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst RichTextEditor = ({\n  defaultValue,\n  placeholder,\n  onChange,\n}: {\n  defaultValue: Descendant[];\n  placeholder: string;\n  onChange: (value: Descendant[]) => void;\n}) => {\n  const renderElement = useCallback((props) => <Element {...props} />, []);\n  const renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n  const editor = useMemo(() => withHistory(withReact(createEditor() as ReactEditor)), []);\n\n  const debouncedChange = useMemo(() => debounce(onChange, 1500), [onChange]);\n\n  return (\n    <section className=\"w-[100%] overflow-hidden\">\n      <Slate editor={editor} value={defaultValue} onChange={debouncedChange}>\n        <Toolbar>\n          <MarkButton format=\"bold\" icon={Bold} />\n          <MarkButton format=\"italic\" icon={Italic} />\n          <MarkButton format=\"underline\" icon={Underline} />\n          <MarkButton format=\"code\" icon={Code} />\n          <BlockButton format=\"heading-one\" icon={Heading} />\n          <BlockButton format=\"heading-two\" icon={Heading} />\n          <BlockButton format=\"block-quote\" icon={Quote} />\n          <BlockButton format=\"numbered-list\" icon={OrderedList} />\n          <BlockButton format=\"bulleted-list\" icon={UnorderedList} />\n          <InsertImageButton />\n        </Toolbar>\n        <Editable\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder={placeholder}\n          spellCheck\n          autoFocus\n          onKeyDown={(event) => {\n            for (const hotkey in HOTKEYS) {\n              if (isHotkey(hotkey, event)) {\n                event.preventDefault();\n                const mark = HOTKEYS[hotkey];\n                toggleMark(editor, mark);\n              }\n            }\n          }}\n        />\n      </Slate>\n    </section>\n  );\n};\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format, 'type');\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) => !Editor.isEditor(n) && SlateElement.isElement(n) && LIST_TYPES.includes(n.type),\n    split: true,\n  });\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  };\n\n  Transforms.setNodes<SlateElement>(editor, newProperties);\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst isBlockActive = (editor, format, blockType = 'type') => {\n  const { selection } = editor;\n  if (!selection) return false;\n\n  const [match] = Array.from(\n    Editor.nodes(editor, {\n      at: Editor.unhangRange(editor, selection),\n      match: (n) => !Editor.isEditor(n) && SlateElement.isElement(n) && n[blockType] === format,\n    })\n  );\n\n  return !!match;\n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst Element = ({ attributes, children, element }) => {\n  const style = {};\n  switch (element.type) {\n    case 'block-quote':\n      return (\n        <blockquote style={style} {...attributes} className=\"border-l-4 pl-2\">\n          {children}\n        </blockquote>\n      );\n    case 'bulleted-list':\n      return (\n        <ul style={style} {...attributes} className=\"list-disc pl-5\">\n          {children}\n        </ul>\n      );\n    case 'heading-one':\n      return (\n        <h1 style={style} {...attributes} className={'text-2xl'}>\n          {children}\n        </h1>\n      );\n    case 'heading-two':\n      return (\n        <h2 style={style} {...attributes} className={'text-xl'}>\n          {children}\n        </h2>\n      );\n    case 'list-item':\n      return (\n        <li style={style} {...attributes}>\n          {children}\n        </li>\n      );\n    case 'numbered-list':\n      return (\n        <ol style={style} {...attributes} className=\"list-decimal pl-5\">\n          {children}\n        </ol>\n      );\n    case 'image': {\n      const selected = useSelected();\n      const focused = useFocused();\n\n      return (\n        <div {...attributes}>\n          <div contentEditable={false} className=\"pl-2\">\n            <Image\n              targetDrive={defaultDrive}\n              fileId={element.imageFileId}\n              className={`max-w-md ${\n                selected && focused ? 'outline outline-4 outline-offset-2 outline-indigo-500' : ''\n              }`}\n            />\n          </div>\n          {children}\n        </div>\n      );\n    }\n    default:\n      return (\n        <p style={style} {...attributes}>\n          {children}\n        </p>\n      );\n  }\n};\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>;\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n\n  return <span {...attributes}>{children}</span>;\n};\n\nconst BlockButton = ({ format, icon: Icon }) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isBlockActive(editor, format, 'type')}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggleBlock(editor, format);\n      }}\n    >\n      {Icon && <Icon className=\"h-5 w-5\" />}\n    </Button>\n  );\n};\n\nconst MarkButton = ({ format, icon: Icon }) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggleMark(editor, format);\n      }}\n    >\n      {Icon && <Icon className=\"h-5 w-5\" />}\n    </Button>\n  );\n};\n\nexport default RichTextEditor;\n","import {\n  BlogArticle,\n  BlogConfig,\n  BlogContent,\n  BlogTypeUnion,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport { debounce } from 'lodash-es';\nimport { useMemo } from 'react';\nimport { Descendant } from 'slate';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport ImageSelector from '../../Form/ImageSelector';\nimport Input from '../../Form/Input';\nimport Textarea from '../../Form/Textarea';\nimport RichTextEditor from '../../RichTextEditor/RichTextEditor';\n\nconst BlogFieldsEditor = ({\n  blog,\n  onChange,\n}: {\n  blog: BlogContent;\n  onChange: (event: { target: { name: string; value: string | Descendant[] } }) => void;\n}) => {\n  const debouncedChange = useMemo(() => debounce(onChange, 500), [onChange]);\n\n  const article: BlogArticle | undefined =\n    (blog as BlogTypeUnion).type === 'Article' ? (blog as BlogArticle) : undefined;\n\n  const body = Array.isArray(article?.body)\n    ? article?.body\n    : [\n        {\n          type: 'paragraph',\n          children: [{ text: article?.body ?? '' }],\n        },\n      ];\n\n  const defaultDrive: TargetDrive = {\n    alias: HomePageConfig.BlogMainContentDriveId.toString(),\n    type: BlogConfig.DriveType.toString(),\n  };\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <label className=\"mb-2 block\" htmlFor=\"blog_caption\">\n          {t('Caption')}\n        </label>\n        <Input\n          id=\"blog_caption\"\n          name=\"caption\"\n          defaultValue={blog.caption}\n          onBlur={debouncedChange}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        <label className=\"mb-2 block\" htmlFor=\"blog_image\">\n          {t('Primary image')}\n        </label>\n        <ImageSelector\n          id=\"blog_image\"\n          name=\"primaryImageFileId\"\n          defaultValue={blog.primaryImageFileId}\n          onChange={debouncedChange}\n          targetDrive={defaultDrive}\n          acl={{ requiredSecurityGroup: SecurityGroupType.Anonymous }}\n        />\n      </div>\n\n      {blog.slug ? (\n        <div className=\"mb-5\">\n          <label className=\"mb-2 block\" htmlFor=\"blog_slug\">\n            {t('Slug [raw & readonly]')}\n          </label>\n          <Input id=\"blog_slug\" name=\"slug\" defaultValue={blog.slug} disabled />\n        </div>\n      ) : null}\n\n      {article ? (\n        <>\n          <div className=\"mb-5\">\n            <label className=\"mb-2 block\" htmlFor=\"blog_abstract\">\n              {t('Abstract')}\n            </label>\n            <Textarea\n              id=\"blog_abstract\"\n              name=\"abstract\"\n              defaultValue={article.abstract}\n              onChange={debouncedChange}\n            />\n          </div>\n\n          <RichTextEditor\n            defaultValue={body as Descendant[]}\n            placeholder={t('Start writing...')}\n            onChange={(value) => {\n              onChange({ target: { name: 'body', value: value } });\n            }}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default BlogFieldsEditor;\n","import {\n  BlogArticle,\n  BlogContent,\n  BlogPostFile,\n  SecurityGroupType,\n} from '@youfoundation/transit-lib';\n\nimport { useState } from 'react';\n\nimport { Descendant } from 'slate';\nimport BlogFieldsEditor from '../BlogFieldsEditor/BlogFieldsEditor';\n\nconst BlogArticleCreator = ({\n  saveBlog,\n}: {\n  saveBlog: (blogFile: BlogPostFile<BlogContent>) => void;\n}) => {\n  const [blog, setBlog] = useState<BlogPostFile<BlogArticle>>({\n    acl: { requiredSecurityGroup: SecurityGroupType.Anonymous },\n    publishTargets: [],\n    content: {\n      id: '',\n      channelId: '',\n      caption: '',\n      dateUnixTime: new Date().getTime(),\n      type: 'Article',\n      abstract: '',\n      headerImageFileId: '',\n      primaryImageFileId: '',\n      body: '',\n    },\n  });\n\n  const onChange = (e: { target: { name: string; value: string | Descendant[] } }) => {\n    const newBlog: BlogPostFile<BlogArticle> = { ...blog };\n\n    if (newBlog.content[e.target.name as keyof BlogArticle] !== e.target.value) {\n      if (Object.keys(newBlog.content).indexOf(e.target.name) !== -1) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (newBlog.content as any)[e.target.name] = e.target.value;\n      }\n\n      if (newBlog.content.caption.length) {\n        setBlog(newBlog);\n        saveBlog(newBlog);\n      }\n    }\n  };\n\n  return <BlogFieldsEditor blog={blog.content} onChange={onChange} />;\n};\n\nexport default BlogArticleCreator;\n","import { BlogContent, BlogPostFile } from '@youfoundation/transit-lib';\nimport { Descendant } from 'slate';\nimport BlogFieldsEditor from '../BlogFieldsEditor/BlogFieldsEditor';\n\nconst BlogEditor = ({\n  blog,\n  saveBlog,\n}: {\n  blog: BlogPostFile<BlogContent>;\n  saveBlog: (blogFile: BlogPostFile<BlogContent>) => void;\n}) => {\n  const newData: BlogPostFile<BlogContent> = { ...blog };\n\n  const onChange = (e: { target: { name: string; value: string | Descendant[] } }) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (newData.content as any)[e.target.name] = e.target.value;\n\n    if (newData.content.caption.length) {\n      saveBlog(newData);\n    }\n  };\n\n  return <BlogFieldsEditor blog={blog.content} onChange={onChange} />;\n};\n\nexport default BlogEditor;\n","const Checkbox = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type=\"checkbox\"\n      className={`h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600 ${props.className}`}\n    />\n  );\n};\n\nexport default Checkbox;\n","import { BlogContent, BlogPostFile, PublishTarget } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlog from '../../../hooks/blogs/useBlog';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Checkbox from '../../Form/Checkbox';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst PublishDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  channels,\n  blogFile,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  channels: ChannelDefinitionVm[];\n  blogFile: BlogPostFile<BlogContent>;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutate: publishBlog, status: publishBlogStatus } = useBlog().publish;\n  const [targets, setTargets] = useState(null);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const publishedChannels = blogFile.publishTargets.map((trgt) => {\n    const channel = channels.find((chnl) => chnl.channelId === trgt.channelId);\n    return channel;\n  });\n\n  const unpublishedChannels = channels.reduce((currArray, chnl) => {\n    if (publishedChannels.find((publishedChnl) => publishedChnl.channelId === chnl.channelId)) {\n      return currArray;\n    } else {\n      return [...currArray, chnl];\n    }\n  }, []);\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <div>\n          {publishedChannels.length ? (\n            <>\n              <div className=\"-mx-8 mb-5 py-10 px-8\">\n                <h2 className=\"mb-2 text-lg\">Already published to:</h2>\n                {publishedChannels.map((channel) => (\n                  <PublishedChannel channel={channel} blogFile={blogFile} key={channel.channelId} />\n                ))}\n              </div>\n            </>\n          ) : null}\n\n          {unpublishedChannels.length ? (\n            <>\n              {publishedChannels.length ? <h2 className=\"mb-2 text-lg\">Other Channels:</h2> : null}\n\n              {unpublishedChannels.map((channel) => {\n                return (\n                  <div key={channel.channelId} className=\"mb-2\">\n                    <Checkbox\n                      value={channel.channelId}\n                      id={channel.channelId}\n                      onChange={(e) => {\n                        const newTargets = { ...targets };\n                        newTargets[e.target.value] = e.target.checked;\n                        setTargets(newTargets);\n                      }}\n                    />\n                    <label htmlFor={channel.channelId} className=\"ml-2\">\n                      {channel.name}\n                    </label>\n                  </div>\n                );\n              })}\n            </>\n          ) : null}\n        </div>\n\n        <div className=\"-m-2 flex flex-row-reverse\">\n          <ActionButton\n            className=\"m-2\"\n            state={publishBlogStatus}\n            onClick={() => {\n              const publishTargets: PublishTarget[] = channels.reduce((currArray, chnl) => {\n                if (targets && targets[chnl.channelId]) {\n                  const prevTarget = blogFile.publishTargets.find(\n                    (trgt) => trgt.channelId === chnl.channelId\n                  );\n\n                  return [\n                    ...currArray,\n                    {\n                      acl: chnl.acl,\n                      channelId: chnl.channelId,\n                      fileId: prevTarget?.fileId ?? undefined,\n                      lastPublishTime: prevTarget?.lastPublishTime ?? undefined,\n                    },\n                  ];\n                } else {\n                  return currArray;\n                }\n              }, []);\n\n              publishBlog(\n                {\n                  blogFile: blogFile,\n                  publishTargets: [...blogFile.publishTargets, ...publishTargets],\n                },\n                {\n                  onSuccess: () => {\n                    onConfirm();\n                  },\n                }\n              );\n            }}\n          >\n            {confirmText ?? 'Publish'}\n          </ActionButton>\n          <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nconst PublishedChannel = ({\n  channel,\n  blogFile,\n}: {\n  channel: ChannelDefinitionVm;\n  blogFile: BlogPostFile<BlogContent>;\n}) => {\n  const { mutate: unPublishBlog, status: unPublishBlogStatus } = useBlog().unpublish;\n\n  return (\n    <div key={channel.channelId} className=\"mb-2 flex flex-row\">\n      <ActionButton\n        icon=\"trash\"\n        title={t('Unpublish from this channel')}\n        className=\"mr-2 px-2 py-1\"\n        type=\"remove\"\n        onClick={() => unPublishBlog({ blogFile: blogFile, channelId: channel.channelId })}\n        state={unPublishBlogStatus}\n      />\n      <p className=\"my-auto\">{channel.name}</p>\n    </div>\n  );\n};\n\nexport default PublishDialog;\n","import { BlogContent, BlogPostFile } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlog from '../../../hooks/blogs/useBlog';\nimport useChannels from '../../../hooks/blogs/useChannels';\nimport BlogArticleCreator from '../../Blog/BlogArticleCreator/BlogArticleCreator';\nimport BlogEditor from '../../Blog/BlogEditor/BlogEditor';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PublishDialog from '../../Dialog/PublishDialog/PublishDialog';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport LoadingDetailPage from '../../Loaders/LoadingDetailPage/LoadingDetailPage';\n\nconst BlogDetail = () => {\n  const navigate = useNavigate();\n  const { blogKey } = useParams();\n  const { data: channels, isLoading: isChannelsLoading } = useChannels().fetch;\n  const [wantsPublish, setWantsPublish] = useState(false);\n\n  const {\n    fetch: { data: blog, isLoading: isBlogLoading },\n    save: { mutate: saveBlog, status: saveBlogStatus },\n    remove: { mutate: removeBlog },\n  } = useBlog({\n    blogSlug: blogKey,\n  });\n\n  const saveBlogFile = (blogFile: BlogPostFile<BlogContent>) => {\n    saveBlog(blogFile, {\n      onSuccess: (data) => {\n        // If caption changed, then slug changes at the moment.. So we need to navigate\n        // TODO Decide if we want to work with fileId, Content Id, Slugs\n        // TODO When slug is stored as well, we still need to navigate, but when slug changes\n        if (\n          !blog ||\n          (blogKey !== convertTextToSlug(blogFile.content.caption) &&\n            blogKey !== blogFile.fileId?.toString())\n        ) {\n          const targetPath = blogFile.content.caption?.length\n            ? convertTextToSlug(blogFile.content.caption)\n            : data.toString();\n          const path = window.location.pathname.split('/');\n          path.pop();\n          if (path && targetPath) {\n            navigate(`${path.join('/')}/${targetPath}`);\n          }\n        }\n      },\n    });\n  };\n\n  if (!channels || isChannelsLoading || isBlogLoading) {\n    return <LoadingDetailPage />;\n  }\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          title={blog ? <>{blog.content.caption}</> : t('New blog')}\n          actions={\n            <>\n              <ActionButton\n                type=\"remove\"\n                className=\"m-2\"\n                icon=\"trash\"\n                confirmOptions={{\n                  title: `${t('Remove')} ${blog?.content.caption ?? ''}`,\n                  buttonText: 'Permanently remove',\n                  body: t(\n                    'Are you sure you want to remove this blog? This action cannot be undone.'\n                  ),\n                }}\n                onClick={() =>\n                  removeBlog(\n                    { fileId: blog.fileId, slug: blog.content.slug },\n                    {\n                      onSuccess: () => {\n                        const path = window.location.pathname.split('/');\n                        path.pop();\n                        if (path) {\n                          navigate(`${path.join('/')}`);\n                        }\n                      },\n                    }\n                  )\n                }\n              />\n              <ActionButton type=\"primary\" className=\"m-2\" onClick={() => setWantsPublish(true)}>\n                {t('Publish')}\n              </ActionButton>\n            </>\n          }\n          breadCrumbs={[\n            { href: '/owner/blog', title: 'Blog' },\n            { title: blog.content?.caption ?? '' },\n          ]}\n          saveStatus={saveBlogStatus}\n        />\n\n        <div className=\"md:mx-auto md:max-w-[40rem]\">\n          {blog ? (\n            <BlogEditor blog={blog} saveBlog={saveBlogFile} />\n          ) : (\n            <BlogArticleCreator saveBlog={saveBlogFile} />\n          )}\n        </div>\n      </section>\n      {blog ? (\n        <>\n          <PublishDialog\n            isOpen={wantsPublish}\n            onCancel={() => setWantsPublish(false)}\n            onConfirm={() => setWantsPublish(false)}\n            blogFile={blog}\n            channels={channels}\n            title={`${t('Publish')}: ${blog.content.caption}`}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default BlogDetail;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, ChannelDefinition, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n}\n\nconst useChannels = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundChannels = await client.blogDefinitionProvider.getChannelDefinitions();\n\n    return foundChannels.map((channel) => {\n      return {\n        ...channel,\n        slug: convertTextToSlug(channel.name),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return {\n    fetch: useQuery(['channels'], () => fetchData(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useChannels;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  AccessControlList,\n  ApiType,\n  BlogConfig,\n  Client,\n  HomePageConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst defaultDrive: TargetDrive = {\n  alias: HomePageConfig.BlogMainContentDriveId.toString(),\n  type: BlogConfig.DriveType.toString(),\n};\n\nconst useImage = (imageFileId?: string, imageDrive?: TargetDrive) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchImageData = async (imageFileId?: string, imageDrive?: TargetDrive) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    return await client.mediaProvider.getDecryptedImageUrl(imageDrive ?? defaultDrive, imageFileId);\n  };\n\n  const saveImage = async ({\n    bytes,\n    targetDrive = defaultDrive,\n    acl = { requiredSecurityGroup: SecurityGroupType.Anonymous },\n    fileId = undefined,\n  }: {\n    bytes: Uint8Array;\n    targetDrive: TargetDrive;\n    acl?: AccessControlList;\n    fileId?: string;\n  }) => {\n    return await client.mediaProvider.uploadImage(targetDrive, undefined, acl, bytes, fileId);\n  };\n\n  const removeImage = async ({\n    targetDrive = defaultDrive,\n    fileId,\n  }: {\n    targetDrive: TargetDrive;\n    fileId: string;\n  }) => {\n    return await client.mediaProvider.removeImage(fileId, targetDrive);\n  };\n\n  return {\n    fetch: useQuery(\n      ['image', imageFileId, imageDrive],\n      () => fetchImageData(imageFileId, imageDrive),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n      }\n    ),\n    save: useMutation(saveImage, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.fileId) {\n          queryClient.removeQueries([\n            'image',\n            variables.fileId,\n            variables.targetDrive ?? defaultDrive,\n          ]);\n        } else {\n          queryClient.removeQueries(['image']);\n        }\n      },\n    }),\n    remove: useMutation(removeImage, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.fileId) {\n          queryClient.removeQueries([\n            'image',\n            variables.fileId,\n            variables.targetDrive ?? defaultDrive,\n          ]);\n        } else {\n          queryClient.removeQueries(['image']);\n        }\n      },\n    }),\n  };\n};\n\nexport default useImage;\n"],"names":["title","confirmText","isOpen","acl","targetDrive","onConfirm","onCancel","target","usePortal","useImage","save","saveImage","mutate","status","useState","file","setFile","uploadImage","Uint8Array","arrayBuffer","bytes","fileId","undefined","onSuccess","dialog","className","role","id","onChange","e","files","type","accept","onClick","state","t","createPortal","defaultValue","name","fetch","imageUrl","data","isLoading","removeImage","remove","isEdit","setIsEdit","needsConfirmation","setNeedsConfirmation","preventDefault","src","alt","imageFileId","value","needConfirmation","props","observer","Button","active","reversed","Toolbar","xmlns","viewBox","fill","d","defaultDrive","alias","HomePageConfig","BlogConfig","isActive","setIsActive","editor","useSlateStatic","ImageDialog","image","children","text","Transforms","insertImage","requiredSecurityGroup","SecurityGroupType","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","callback","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","IntersectionObserver","rootMargin","threshold","elem","isInView","setIsInView","imgRef","useRef","useEffect","current","set","observe","ref","HOTKEYS","LIST_TYPES","toggleMark","format","isMarkActive","Editor","isBlockActive","blockType","selection","Array","from","at","match","n","SlateElement","marks","Element","attributes","element","style","selected","useSelected","focused","useFocused","contentEditable","Leaf","leaf","bold","code","italic","underline","BlockButton","Icon","icon","useSlate","onMouseDown","event","isList","includes","split","newProperties","block","toggleBlock","MarkButton","placeholder","renderElement","useCallback","renderLeaf","useMemo","withHistory","withReact","createEditor","debouncedChange","debounce","Bold","Italic","Underline","Code","Heading","Quote","OrderedList","UnorderedList","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","blog","article","body","isArray","htmlFor","Input","caption","onBlur","ImageSelector","primaryImageFileId","slug","disabled","Textarea","abstract","saveBlog","publishTargets","content","channelId","dateUnixTime","Date","getTime","headerImageFileId","setBlog","newBlog","Object","keys","indexOf","length","newData","PublishedChannel","channel","blogFile","useBlog","unpublish","unPublishBlog","unPublishBlogStatus","ActionButton","channels","publish","publishBlog","publishBlogStatus","targets","setTargets","publishedChannels","map","trgt","find","chnl","unpublishedChannels","reduce","currArray","publishedChnl","DialogWrapper","onClose","newTargets","checked","prevTarget","lastPublishTime","navigate","useNavigate","blogKey","useParams","useChannels","isChannelsLoading","wantsPublish","setWantsPublish","blogSlug","isBlogLoading","saveBlogStatus","removeBlog","saveBlogFile","convertTextToSlug","toString","targetPath","path","window","location","pathname","pop","join","LoadingDetailPage","PageMeta","actions","confirmOptions","buttonText","breadCrumbs","href","saveStatus","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchData","blogDefinitionProvider","getChannelDefinitions","foundChannels","useQuery","refetchOnWindowFocus","imageDrive","queryClient","useQueryClient","fetchImageData","mediaProvider","getDecryptedImageUrl","refetchOnMount","staleTime","Infinity","useMutation","_data","variables","removeQueries"],"sourceRoot":""}