{"version":3,"file":"static/js/73.07f4fc89.chunk.js","mappings":"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","sources":["hooks/contact/useContact.ts","components/FallbackImg/FallbackImg.tsx","components/Connection/PersonCard/PersonCard.tsx","components/Connection/PersonIncomingRequest/PersonIncomingRequest.tsx","components/Form/Input.tsx","components/Form/Textarea.tsx","components/Sections/CollapsableSection.tsx","components/Connection/PersonOutgoingRequest/PersonOutgoingRequest.tsx","components/Connection/PersonActive/PersonActive.tsx","components/Dialog/ConnectionDialogs/OutgoingConnectionDialog.tsx","components/Templates/Connections/Connections.tsx","hooks/connections/useConnections.ts","hooks/focusedEditing/useFocusedEditing.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { ApiType, DataUtil, EmbeddedThumb, PublicClient } from '@youfoundation/transit-lib';\nimport { ContactData } from '../../provider/connections/CircleDataTypes';\nimport { ContactProvider } from '../../provider/contact/ContactProvider';\nimport { Contact } from '../../provider/contact/ContactTypes';\nimport useAuth from '../auth/useAuth';\n\ninterface ContactImageVm extends Omit<EmbeddedThumb, 'content'> {\n  url: string;\n}\n\ninterface ContactVm extends Omit<Contact, 'image'> {\n  image?: ContactImageVm;\n}\n\nconst useContact = ({\n  dotYouId,\n  originalContactData,\n}: {\n  dotYouId?: string;\n  originalContactData?: ContactData;\n}) => {\n  const { getSharedSecret } = useAuth();\n  const contactProvider = ContactProvider.getInstance(getSharedSecret());\n\n  const fetchSingle = async ({\n    dotYouId,\n    originalContactData,\n  }: {\n    dotYouId: string;\n    originalContactData: ContactData;\n  }): Promise<ContactVm | undefined> => {\n    if (!dotYouId) {\n      return;\n    }\n\n    const contactBookContact = await contactProvider.getContactByDotYouId(dotYouId);\n    if (contactBookContact) {\n      console.log('contact book', contactBookContact);\n      return parseContact(contactBookContact);\n    }\n\n    let fallbackContact: Contact;\n\n    // If no contact in the contact book:\n    // Use passed ContactData\n    if (originalContactData) {\n      fallbackContact = {\n        name: { givenName: originalContactData.givenName, surname: originalContactData.surname },\n        image: originalContactData.image,\n      };\n    } else {\n      // If nothing passed\n      // Search contact info within {dotYouId}/public.json\n      const publicContact = await fetchDataFromPublic(dotYouId);\n      if (publicContact) {\n        fallbackContact = publicContact;\n      }\n    }\n\n    // => And automatically push into the Contact\n    // TODO Parse Image URL\n    if (fallbackContact) {\n      fallbackContact = await contactProvider.saveContact({\n        ...fallbackContact,\n        dotYouId: dotYouId,\n      });\n\n      return parseContact(fallbackContact);\n    }\n\n    return undefined;\n  };\n\n  const fetchDataFromPublic = async (dotYouId: string) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, root: dotYouId });\n    const rawData = await client.fileReadOnlyProvider.GetFile('public.json');\n\n    const nameAttr = rawData.get('name')?.[0];\n    const photoRefAttr = rawData.get('photo')?.[0];\n    const photoAttr = rawData.get(photoRefAttr?.payload?.data?.profileImageId)?.[0] ?? undefined;\n\n    if (!photoAttr) {\n      return {\n        name:\n          nameAttr.payload.data.givenName || nameAttr.payload.data.surname\n            ? {\n                givenName: nameAttr.payload.data.givenName,\n                surname: nameAttr.payload.data.surname,\n              }\n            : undefined,\n      };\n    }\n\n    const previewThumbnail = photoAttr.additionalThumbnails.reduce(\n      (prevVal, curValue) => {\n        if (prevVal.pixelWidth < curValue.pixelWidth && curValue.pixelWidth <= 250) {\n          return curValue;\n        }\n        return prevVal;\n      },\n      { ...photoAttr.header.fileMetadata.appData.previewThumbnail, pixelWidth: 20, pixelHeight: 20 }\n    );\n\n    const returnVal = {\n      name:\n        nameAttr.payload.data.givenName || nameAttr.payload.data.surname\n          ? {\n              givenName: nameAttr.payload.data.givenName,\n              surname: nameAttr.payload.data.surname,\n            }\n          : undefined,\n      profileImage: {\n        pixelWidth: previewThumbnail.pixelWidth,\n        pixelHeight: previewThumbnail.pixelHeight,\n        contentType: previewThumbnail.contentType,\n        content: previewThumbnail.content,\n      },\n    };\n\n    return returnVal;\n  };\n\n  const parseContact = (contact: Contact): ContactVm => {\n    if (!contact.image) {\n      return { ...contact, image: undefined };\n    }\n    const buffer = DataUtil.base64ToUint8Array(contact.image.content);\n    const url = window.URL.createObjectURL(new Blob([buffer]));\n\n    return {\n      ...contact,\n      image: {\n        ...contact.image,\n        url: url,\n      },\n    };\n  };\n\n  return {\n    fetch: useQuery(\n      ['contact', dotYouId, !!originalContactData],\n      () => fetchSingle({ dotYouId, originalContactData }),\n      {\n        refetchOnWindowFocus: false,\n        onError: (err) => console.error(err),\n      }\n    ),\n  };\n};\n\nexport default useContact;\n","const FallbackImg = ({ initials }: { initials: string }) => {\n  return (\n    <div className=\"flex aspect-square h-full w-full bg-slate-200 text-4xl font-light text-white dark:bg-slate-700 dark:text-black sm:text-6xl\">\n      <span className=\"m-auto uppercase\">{initials}</span>\n    </div>\n  );\n};\n\nexport default FallbackImg;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport useContact from '../../../hooks/contact/useContact';\nimport { ContactData } from '../../../provider/connections/CircleDataTypes';\nimport FallbackImg from '../../FallbackImg/FallbackImg';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst PersonCard = ({\n  contactData,\n  dotYouId,\n  href,\n  checked,\n  className,\n  children,\n  onClick,\n}: {\n  contactData?: ContactData;\n  dotYouId: string;\n  href?: string;\n  checked?: boolean;\n  className: string;\n  children?: ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}) => {\n  const Wrapper = ({ children }) => (href ? <Link to={href}>{children}</Link> : <>{children}</>);\n  const { data: connectionDetails, isLoading } = useContact({\n    dotYouId: dotYouId,\n    originalContactData: contactData,\n  }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`aspect-[3/5] ${className}`} />;\n  }\n\n  const nameData = connectionDetails?.name;\n  const fullName = nameData ? `${nameData.givenName ?? ''} ${nameData.surname ?? ''}` : dotYouId;\n  const getInitials = () => {\n    if (nameData) {\n      return nameData.givenName?.[0] + nameData.surname?.[0] + '';\n    }\n\n    const splittedDomain = dotYouId?.split('.');\n    if (splittedDomain?.length >= 2) {\n      return splittedDomain[0][0] + splittedDomain[1][0] + '';\n    }\n\n    return '--';\n  };\n\n  const photoData = connectionDetails?.image;\n\n  return (\n    <div className={className}>\n      <Wrapper>\n        <div\n          className={`h-full rounded-md border border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800 ${\n            checked\n              ? 'border-4 border-indigo-500 dark:border-indigo-700'\n              : checked === false\n              ? 'border-4'\n              : ''\n          }`}\n          onClick={onClick}\n        >\n          <div className=\"aspect-square\">\n            {photoData ? (\n              <figure className={'relative overflow-hidden'}>\n                <img\n                  src={photoData.url}\n                  width={photoData.pixelWidth}\n                  height={photoData.pixelHeight}\n                  className=\"aspect-square w-full\"\n                />\n              </figure>\n            ) : (\n              <FallbackImg initials={getInitials()} />\n            )}\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">{fullName ?? dotYouId}</h2>\n            {children}\n          </div>\n        </div>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport { ContactData } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport IncomingConnectionDialog from '../../Dialog/ConnectionDialogs/IncomingConnectionDialog';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonIncomingRequest = ({\n  senderDotYouId,\n  contactData,\n  children,\n  className,\n}: {\n  senderDotYouId: string;\n  contactData: ContactData;\n  children?: ReactNode;\n  className: string;\n}) => {\n  const {\n    acceptRequest: { mutateAsync: acceptPending, status: acceptPendingStatus },\n    ignoreRequest: { mutate: ignoreRequest, status: ignoreRequestStatus },\n  } = useConnection({});\n  const checkReturnTo = useFocusedEditing();\n\n  const [isAcceptDialogOpen, setIsAcceptDialogOpen] = useState(false);\n\n  return (\n    <>\n      <PersonCard\n        className={className}\n        contactData={contactData}\n        dotYouId={senderDotYouId}\n        href={(senderDotYouId && `/owner/connections/${senderDotYouId}`) ?? undefined}\n      >\n        {children}\n        <ActionButton\n          type=\"primary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            setIsAcceptDialogOpen(true);\n            return false;\n          }}\n          state={acceptPendingStatus}\n        >\n          {t('Confirm')}...\n        </ActionButton>\n        <ActionButton\n          type=\"secondary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            ignoreRequest({ senderDotYouId: senderDotYouId });\n            return false;\n          }}\n          state={ignoreRequestStatus}\n        >\n          {t('Ignore')}\n        </ActionButton>\n      </PersonCard>\n      <IncomingConnectionDialog\n        isOpen={isAcceptDialogOpen}\n        senderDotYouId={senderDotYouId}\n        title={t('Accept connection request')}\n        confirmText={t('Accept and give access')}\n        onConfirm={async () => {\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n        onCancel={() => {\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default PersonIncomingRequest;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { ReactNode, useEffect, useRef, useState } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\n\nconst CollapsableSection = ({\n  isOpenByDefault = true,\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  isOpenByDefault?: boolean;\n  title: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  const [isOpen, setIsOpen] = useState(isOpenByDefault);\n  const sectionContainerRef = useRef<HTMLDivElement>(null);\n  const height = useRef(0);\n\n  useEffect(() => {\n    if (isOpenByDefault && sectionContainerRef.current) {\n      height.current = sectionContainerRef.current.clientHeight;\n    }\n    // Todo apply FLIP approach (when not open by default) to calculate the to-be height when we can't use the height of the open state\n  }, [isOpen]);\n\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800 dark:text-slate-300'\n      } ${className}`}\n    >\n      <div\n        className={`relative cursor-pointer border-b-[1px] border-slate-200 py-5 transition-all duration-300 ${\n          isOpen ? 'border-opacity-100' : 'border-opacity-0'\n        }`}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        <button className=\"absolute top-0 right-0 bottom-0\">\n          <Arrow\n            className={`h-4 w-4 transition-transform duration-300 ${\n              isOpen ? 'rotate-90' : '-rotate-90'\n            }`}\n          />\n        </button>\n      </div>\n      <div\n        className={`overflow-hidden transition-all duration-300 `}\n        style={{ maxHeight: `${isOpen ? (height.current ? height.current : 2000) : 0}px` }}\n        ref={sectionContainerRef}\n      >\n        <div className=\"py-5 \">{children}</div>\n      </div>\n    </section>\n  );\n};\n\nexport default CollapsableSection;\n","import useConnection from '../../../hooks/connection/useConnection';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonOutgoingRequest = ({\n  recipientDotYouId,\n  className,\n}: {\n  recipientDotYouId: string;\n  className: string;\n}) => {\n  const { mutate: revokeRequest, status: revokeRequestStatus } = useConnection(\n    {}\n  ).revokeConnectionRequest;\n\n  return (\n    <PersonCard\n      className={className}\n      dotYouId={recipientDotYouId}\n      href={(recipientDotYouId && `/owner/connections/${recipientDotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"mb-2 w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          revokeRequest({ targetDotYouId: recipientDotYouId });\n          return false;\n        }}\n        state={revokeRequestStatus}\n      >\n        Cancel\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default PersonOutgoingRequest;\n","import { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport { ContactData, DotYouProfile } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonActive = ({\n  dotYouProfile,\n  contactData,\n  className,\n}: {\n  dotYouProfile: DotYouProfile;\n  contactData: ContactData;\n  className: string;\n}) => {\n  const { mutate: disconnect, status: disconnectStatus } = useConnection({}).disconnect;\n\n  return (\n    <PersonCard\n      className={className}\n      contactData={contactData}\n      dotYouId={dotYouProfile.dotYouId}\n      href={(dotYouProfile.dotYouId && `/owner/connections/${dotYouProfile.dotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          disconnect({ connectionDotYouId: dotYouProfile.dotYouId });\n        }}\n        state={disconnectStatus}\n        confirmOptions={{\n          title: `${t('Remove')} ${dotYouProfile.dotYouId}`,\n          buttonText: t('Remove'),\n          body: `${t('Are you sure you want to remove')} ${dotYouProfile.dotYouId} ${t(\n            'from your connections. They will lose all existing access.'\n          )}`,\n        }}\n      >\n        Remove\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default PersonActive;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport NameSelector from '../../Form/NameSelector';\nimport PhotoSelector from '../../Form/PhotoSelector';\nimport Textarea from '../../Form/Textarea';\nimport CirclePermissionView from '../../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst OutgoingConnectionDialog = ({\n  title,\n  isOpen,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const {\n    mutate: sendConnectionRequest,\n    status: sendConnectionRequestStatus,\n    reset: resetConnectionRequest,\n  } = useConnection({}).sendConnectionRequest;\n  const { data: circles } = useCircles().fetch;\n  const checkReturnTo = useFocusedEditing();\n\n  const [connectionTarget, setConnectionTarget] = useState('samwise.digital');\n  const [message, setMessage] = useState('Hi, I would like to connect with you');\n  const [name, setName] = useState<{ givenName: string; surname: string }>({\n    givenName: 'Frodo',\n    surname: 'Underhill',\n  });\n  const [photoFileId, setPhotoFileId] = useState<string>(null);\n  const [circleGrants, setCircleGrants] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            sendConnectionRequest(\n              {\n                message: message,\n                name: name,\n                photoFileId: photoFileId,\n                targetDotYouId: connectionTarget,\n                circleIds: circleGrants,\n              },\n              {\n                onSuccess: () => {\n                  checkReturnTo();\n\n                  resetConnectionRequest();\n                  setConnectionTarget('');\n                  setMessage('');\n                  setCircleGrants([]);\n\n                  onConfirm();\n                },\n              }\n            );\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">Recipient (dot you id)</label>\n            <Input\n              id=\"dotyouid\"\n              name=\"dotyouid\"\n              onChange={(e) => {\n                setConnectionTarget(e.target.value);\n              }}\n              defaultValue={connectionTarget}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">From:</label>\n            <NameSelector\n              id=\"name\"\n              name=\"name\"\n              defaultValue={`${name.givenName}+${name.surname}`}\n              required\n              onChange={(e) => {\n                const split = e.target.value.split('+');\n                setName({ givenName: split[0], surname: split[1] });\n              }}\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">From:</label>\n            <PhotoSelector\n              id=\"name\"\n              name=\"name\"\n              onChange={(e) => {\n                console.log(e.target.value || undefined);\n                setPhotoFileId(e.target.value || undefined);\n              }}\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"message\">{t('Message')}</label>\n            <Textarea\n              id=\"message\"\n              name=\"message\"\n              defaultValue={message}\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n              required\n            />\n          </div>\n\n          {circles.length ? (\n            <>\n              <h2 className=\"mb-2 text-lg\">{t('Add as member to one or more circles')}:</h2>\n\n              {circles.map((circle, index) => {\n                return (\n                  <CirclePermissionView\n                    circleDef={circle}\n                    key={circle.id ?? index}\n                    className={`my-4 w-full rounded-lg border p-4 ${\n                      circleGrants.some((circleGrant) => circleGrant === circle.id)\n                        ? 'border-indigo-500 bg-slate-50 dark:border-indigo-700 dark:bg-slate-700'\n                        : ''\n                    }`}\n                    onClick={() => {\n                      const newCircleGrants = [...circleGrants];\n                      if (!newCircleGrants.some((circleGrant) => circleGrant === circle.id)) {\n                        newCircleGrants.push(circle.id);\n                        setCircleGrants(newCircleGrants);\n                      } else {\n                        setCircleGrants(\n                          newCircleGrants.filter((circleId) => circleId !== circle.id)\n                        );\n                      }\n                    }}\n                  />\n                );\n              })}\n            </>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={sendConnectionRequestStatus} icon={'send'}>\n              {t('Send')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default OutgoingConnectionDialog;\n","import PageMeta from '../../Layout/PageMeta/PageMeta';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonIncomingRequest from '../../Connection/PersonIncomingRequest/PersonIncomingRequest';\nimport PersonOutgoingRequest from '../../Connection/PersonOutgoingRequest/PersonOutgoingRequest';\nimport PersonActive from '../../Connection/PersonActive/PersonActive';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport Section from '../../Sections/Section';\nimport CollapsableSection from '../../Sections/CollapsableSection';\nimport OutgoingConnectionDialog from '../../Dialog/ConnectionDialogs/OutgoingConnectionDialog';\nimport { useState } from 'react';\nimport Persons from '../../Icons/Persons/Persons';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst Connections = () => {\n  const {\n    fetchPending: { data: pendingConnections, isLoading: pendingConnectionsLoading },\n    fetchActive: { data: activeConnections, isLoading: activeConnectionsLoading },\n    fetchSent: { data: sentRequests, isLoading: sentRequestsLoading },\n  } = useConnections();\n\n  const [isSentConnectionOpen, setIsSentConnectionOpen] = useState(false);\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          icon={Persons}\n          title={'Connections'}\n          actions={\n            <>\n              <ActionButton\n                onClick={() => setIsSentConnectionOpen(true)}\n                icon={'plus'}\n                className=\"m-2\"\n              >\n                {t('Send request')}\n              </ActionButton>\n            </>\n          }\n        />\n\n        {!pendingConnectionsLoading && pendingConnections?.length ? (\n          <Section isOpaqueBg={true} isBorderLess={true} title={t('Connection requests')}>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {pendingConnections?.map((pendingConnection) => (\n                <PersonIncomingRequest\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  senderDotYouId={pendingConnection.senderDotYouId}\n                  contactData={pendingConnection.contactData}\n                  key={pendingConnection.senderDotYouId}\n                >\n                  <div className=\"-mt-3\">\n                    <p className=\"mb-3 text-sm\">{pendingConnection.message}</p>\n                  </div>\n                </PersonIncomingRequest>\n              ))}\n            </div>\n          </Section>\n        ) : null}\n\n        {activeConnections?.length || activeConnectionsLoading ? (\n          <Section isOpaqueBg={true} isBorderLess={true} title={t('Your Connections')}>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {activeConnectionsLoading && (\n                <>\n                  <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n                  <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n                </>\n              )}\n\n              {activeConnections?.map((activeConnection) => (\n                <PersonActive\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  dotYouProfile={activeConnection}\n                  contactData={activeConnection.originalContactData}\n                  key={activeConnection.dotYouId}\n                />\n              ))}\n            </div>\n          </Section>\n        ) : null}\n\n        {!sentRequestsLoading && sentRequests?.length ? (\n          <CollapsableSection\n            isOpaqueBg={true}\n            isBorderLess={true}\n            isOpenByDefault={true}\n            title={t('Sent Connection Requests')}\n          >\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {sentRequests?.map((sentRequest) => (\n                <PersonOutgoingRequest\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  recipientDotYouId={sentRequest.recipient}\n                  key={sentRequest.recipient}\n                />\n              ))}\n            </div>\n          </CollapsableSection>\n        ) : null}\n      </section>\n      <OutgoingConnectionDialog\n        title={t('Send connection request')}\n        isOpen={isSentConnectionOpen}\n        onConfirm={() => setIsSentConnectionOpen(false)}\n        onCancel={() => setIsSentConnectionOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default Connections;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async () => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchSentRequests = async () => {\n    return await (\n      await circleNetworkRequestProvider.getSentRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchConnections = async () => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  return {\n    fetchPending: useQuery(['pendingConnections'], () => fetchPendingConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchSent: useQuery(['sentRequests'], () => fetchSentRequests(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchActive: useQuery(['activeConnections'], () => fetchConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useFocusedEditing = () => {\n  const [searchParams] = useSearchParams();\n\n  const checkReturnTo = () => {\n    if (searchParams.get('ui') !== 'focus' && searchParams.get('ui') !== 'minimal') {\n      return;\n    }\n    const returnUrl = searchParams.get('return');\n\n    window.location.href = returnUrl;\n  };\n\n  return checkReturnTo;\n};\n\nexport default useFocusedEditing;\n"],"names":["dotYouId","originalContactData","getSharedSecret","useAuth","contactProvider","ContactProvider","fetchSingle","getContactByDotYouId","contactBookContact","console","log","parseContact","fallbackContact","name","givenName","surname","image","fetchDataFromPublic","publicContact","saveContact","undefined","client","PublicClient","api","ApiType","root","fileReadOnlyProvider","GetFile","rawData","nameAttr","get","photoRefAttr","photoAttr","payload","data","profileImageId","previewThumbnail","additionalThumbnails","reduce","prevVal","curValue","pixelWidth","header","fileMetadata","appData","pixelHeight","returnVal","profileImage","contentType","content","contact","buffer","DataUtil","url","window","URL","createObjectURL","Blob","fetch","useQuery","refetchOnWindowFocus","onError","err","error","initials","className","contactData","href","checked","children","onClick","Wrapper","to","useContact","connectionDetails","isLoading","LoadingParagraph","nameData","fullName","photoData","src","width","height","splittedDomain","split","length","getInitials","senderDotYouId","useConnection","acceptRequest","acceptPendingStatus","mutateAsync","status","ignoreRequest","mutate","ignoreRequestStatus","checkReturnTo","useFocusedEditing","useState","isAcceptDialogOpen","setIsAcceptDialogOpen","type","e","preventDefault","state","t","isOpen","title","confirmText","onConfirm","onCancel","props","isOpenByDefault","isOpaqueBg","isBorderLess","setIsOpen","sectionContainerRef","useRef","useEffect","current","clientHeight","style","maxHeight","ref","recipientDotYouId","revokeConnectionRequest","revokeRequest","revokeRequestStatus","PersonCard","ActionButton","targetDotYouId","dotYouProfile","disconnect","disconnectStatus","connectionDotYouId","confirmOptions","buttonText","body","target","usePortal","sendConnectionRequest","sendConnectionRequestStatus","resetConnectionRequest","reset","circles","useCircles","connectionTarget","setConnectionTarget","message","setMessage","setName","photoFileId","setPhotoFileId","circleGrants","setCircleGrants","dialog","DialogWrapper","onClose","onSubmit","circleIds","onSuccess","htmlFor","Input","id","onChange","value","defaultValue","required","NameSelector","PhotoSelector","Textarea","map","circle","index","CirclePermissionView","circleDef","some","circleGrant","newCircleGrants","filter","circleId","push","icon","createPortal","useConnections","fetchPending","pendingConnections","pendingConnectionsLoading","fetchActive","activeConnections","activeConnectionsLoading","fetchSent","sentRequests","sentRequestsLoading","isSentConnectionOpen","setIsSentConnectionOpen","PageMeta","Persons","actions","Section","pendingConnection","PersonIncomingRequest","activeConnection","CollapsableSection","sentRequest","recipient","circleNetworkRequestProvider","CircleNetworkRequestProvider","circleNetworkProvider","CircleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","pageSize","results","fetchSentRequests","getSentRequests","fetchConnections","getConnections","useSearchParams","searchParams","returnUrl","location"],"sourceRoot":""}