{"version":3,"file":"static/js/25.3dde4908.chunk.js","mappings":"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","sources":["components/Buttons/SaveStatus.tsx","components/Layout/PageMeta/PageMeta.tsx","hooks/ensureDrives/useEnsureDrives.ts","components/Dashboard/Dashboard.tsx","components/Templates/Home/Home.tsx","helpers/i18n/dictionary.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { ReactNode } from 'react';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        {title && <h1 className=\"mb-5 text-4xl dark:text-white\">{title}</h1>}\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { ApiType, Client } from '@youfoundation/transit-lib';\nimport { useRef } from 'react';\nimport useAuth from '../auth/useAuth';\n\nconst useEnsureDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const driveState = useRef('unknown');\n\n  const ensureDrives = async () => {\n    if (driveState.current === 'ensured' || driveState.current === 'pending') {\n      return;\n    }\n\n    driveState.current = 'pending';\n    console.log('Ensure drives');\n\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    try {\n      await client.homePageProvider.ensureConfiguration();\n      await client.profileDefinitionProvider.ensureConfiguration();\n      await client.blogDefinitionProvider.ensureConfiguration();\n    } catch (ex) {\n      console.error('Ensure drives failed', ex);\n      driveState.current = 'failed';\n    }\n\n    driveState.current = 'ensured';\n  };\n  return {\n    ensureDrives,\n  };\n};\n\nexport default useEnsureDrives;\n","import { ApiType, AttributeDefinitions, BuiltInProfiles, Client } from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useAuth from '../../hooks/auth/useAuth';\nimport PageMeta from '../Layout/PageMeta/PageMeta';\n\nconst DemoButtons = () => {\n  const { getSharedSecret } = useAuth();\n\n  const testConnection = async () => {\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    const nameAttr = await client.profileDataProvider.getBestAttributeVersion(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.Name.type.toString()\n    );\n\n    console.log(nameAttr);\n  };\n\n  return (\n    <>\n      <PageMeta title={t('Dashboard')} />\n\n      <div className=\"-mx-5 mt-5 flex flex-wrap\">\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 1\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 2\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 3\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 4\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DemoButtons;\n","import { useEffect } from 'react';\nimport useEnsureDrives from '../../../hooks/ensureDrives/useEnsureDrives';\nimport Dashboard from '../../Dashboard/Dashboard';\n\nconst Home = () => {\n  const { ensureDrives } = useEnsureDrives();\n\n  useEffect(() => {\n    ensureDrives();\n  }, []);\n\n  return (\n    <section>\n      <Dashboard />\n    </section>\n  );\n};\n\nexport default Home;\n","const enLocale = [\n  ['login', 'Login'],\n  ['logout', 'Logout'],\n  ['signup', 'Signup'],\n  ['all', 'All'],\n  ['learn more', 'Learn more'],\n  ['load more', 'Load more'],\n  ['blog', 'Blog'],\n  ['me', 'Me'],\n  ['loading', 'Loading'],\n  ['section-empty-attributes', \"You don't have any attributes in this section\"],\n  ['no-data-found', 'No data found'],\n  ['masonrylayout', 'Masonry'],\n  ['largecards', 'Grid'],\n  ['classicblog', 'List'],\n] as const;\n\nconst internalDict: Map<string, string> = new Map(enLocale);\n\nconst t = (key: string) => {\n  return internalDict.get(key.toLowerCase()) ?? key;\n};\n\nexport { t };\n"],"names":["className","state","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","title","actions","saveStatus","getSharedSecret","useAuth","driveState","useRef","ensureDrives","current","console","log","client","Client","api","ApiType","sharedSecret","homePageProvider","ensureConfiguration","profileDefinitionProvider","blogDefinitionProvider","error","testConnection","profileDataProvider","getBestAttributeVersion","BuiltInProfiles","AttributeDefinitions","nameAttr","PageMeta","t","onClick","useEnsureDrives","Dashboard","internalDict","Map","key","get","toLowerCase"],"sourceRoot":""}