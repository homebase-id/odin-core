{"version":3,"file":"static/js/511.cd6c7e20.chunk.js","mappings":"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","sources":["hooks/contact/useContact.ts","components/FallbackImg/FallbackImg.tsx","components/Connection/PersonCard/PersonCard.tsx","components/Connection/PersonIncomingRequest/PersonIncomingRequest.tsx","components/PermissionViews/AppPermissionView/AppPermissionView.tsx","components/PermissionViews/DrivePermissionView/DrivePermissionView.tsx","components/Templates/DemoData/helpers.ts","components/Dialog/InfoDialog/InfoDialog.tsx","components/Icons/Question/Question.tsx","components/InfoBox/InfoBox.tsx","components/Dashboard/Dashboard.tsx","components/Templates/Home/Home.tsx","hooks/apps/useApps.ts","hooks/connections/useConnections.ts","hooks/drive/useDrive.ts","hooks/drives/useDrives.ts","hooks/focusedEditing/useFocusedEditing.ts","provider/app/AppManagementProvider.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { ApiType, DataUtil, EmbeddedThumb, PublicClient } from '@youfoundation/transit-lib';\nimport { ContactData } from '../../provider/connections/CircleDataTypes';\nimport { ContactProvider } from '../../provider/contact/ContactProvider';\nimport { Contact } from '../../provider/contact/ContactTypes';\nimport useAuth from '../auth/useAuth';\n\ninterface ContactImageVm extends Omit<EmbeddedThumb, 'content'> {\n  url: string;\n}\n\ninterface ContactVm extends Omit<Contact, 'image'> {\n  image?: ContactImageVm;\n}\n\nconst useContact = ({\n  dotYouId,\n  originalContactData,\n}: {\n  dotYouId?: string;\n  originalContactData?: ContactData;\n}) => {\n  const { getSharedSecret } = useAuth();\n  const contactProvider = ContactProvider.getInstance(getSharedSecret());\n\n  const fetchSingle = async ({\n    dotYouId,\n    originalContactData,\n  }: {\n    dotYouId: string;\n    originalContactData: ContactData;\n  }): Promise<ContactVm | undefined> => {\n    if (!dotYouId) {\n      return;\n    }\n\n    const contactBookContact = await contactProvider.getContactByDotYouId(dotYouId);\n    if (contactBookContact) {\n      console.log('contact book', contactBookContact);\n      return parseContact(contactBookContact);\n    }\n\n    let fallbackContact: Contact;\n\n    // If no contact in the contact book:\n    // Use passed ContactData\n    if (originalContactData) {\n      fallbackContact = {\n        name: { givenName: originalContactData.givenName, surname: originalContactData.surname },\n        image: originalContactData.image,\n      };\n    } else {\n      // If nothing passed\n      // Search contact info within {dotYouId}/public.json\n      const publicContact = await fetchDataFromPublic(dotYouId);\n      if (publicContact) {\n        fallbackContact = publicContact;\n      }\n    }\n\n    // => And automatically push into the Contact\n    // TODO Parse Image URL\n    if (fallbackContact) {\n      fallbackContact = await contactProvider.saveContact({\n        ...fallbackContact,\n        dotYouId: dotYouId,\n      });\n\n      return parseContact(fallbackContact);\n    }\n\n    return undefined;\n  };\n\n  const fetchDataFromPublic = async (dotYouId: string) => {\n    const client = new PublicClient({ api: ApiType.YouAuth, root: dotYouId });\n    const rawData = await client.fileReadOnlyProvider.GetFile('public.json');\n\n    const nameAttr = rawData.get('name')?.[0];\n    const photoRefAttr = rawData.get('photo')?.[0];\n    const photoAttr = rawData.get(photoRefAttr?.payload?.data?.profileImageId)?.[0] ?? undefined;\n\n    if (!photoAttr) {\n      return {\n        name:\n          nameAttr.payload.data.givenName || nameAttr.payload.data.surname\n            ? {\n                givenName: nameAttr.payload.data.givenName,\n                surname: nameAttr.payload.data.surname,\n              }\n            : undefined,\n      };\n    }\n\n    const previewThumbnail = photoAttr.additionalThumbnails.reduce(\n      (prevVal, curValue) => {\n        if (prevVal.pixelWidth < curValue.pixelWidth && curValue.pixelWidth <= 250) {\n          return curValue;\n        }\n        return prevVal;\n      },\n      { ...photoAttr.header.fileMetadata.appData.previewThumbnail, pixelWidth: 20, pixelHeight: 20 }\n    );\n\n    const returnVal = {\n      name:\n        nameAttr.payload.data.givenName || nameAttr.payload.data.surname\n          ? {\n              givenName: nameAttr.payload.data.givenName,\n              surname: nameAttr.payload.data.surname,\n            }\n          : undefined,\n      profileImage: {\n        pixelWidth: previewThumbnail.pixelWidth,\n        pixelHeight: previewThumbnail.pixelHeight,\n        contentType: previewThumbnail.contentType,\n        content: previewThumbnail.content,\n      },\n    };\n\n    return returnVal;\n  };\n\n  const parseContact = (contact: Contact): ContactVm => {\n    if (!contact.image) {\n      return { ...contact, image: undefined };\n    }\n    const buffer = DataUtil.base64ToUint8Array(contact.image.content);\n    const url = window.URL.createObjectURL(new Blob([buffer]));\n\n    return {\n      ...contact,\n      image: {\n        ...contact.image,\n        url: url,\n      },\n    };\n  };\n\n  return {\n    fetch: useQuery(\n      ['contact', dotYouId, !!originalContactData],\n      () => fetchSingle({ dotYouId, originalContactData }),\n      {\n        refetchOnWindowFocus: false,\n        onError: (err) => console.error(err),\n      }\n    ),\n  };\n};\n\nexport default useContact;\n","const FallbackImg = ({ initials }: { initials: string }) => {\n  return (\n    <div className=\"flex aspect-square h-full w-full bg-slate-200 text-4xl font-light text-white dark:bg-slate-700 dark:text-black sm:text-6xl\">\n      <span className=\"m-auto uppercase\">{initials}</span>\n    </div>\n  );\n};\n\nexport default FallbackImg;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport useContact from '../../../hooks/contact/useContact';\nimport { ContactData } from '../../../provider/connections/CircleDataTypes';\nimport FallbackImg from '../../FallbackImg/FallbackImg';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst PersonCard = ({\n  contactData,\n  dotYouId,\n  href,\n  checked,\n  className,\n  children,\n  onClick,\n}: {\n  contactData?: ContactData;\n  dotYouId: string;\n  href?: string;\n  checked?: boolean;\n  className: string;\n  children?: ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}) => {\n  const Wrapper = ({ children }) => (href ? <Link to={href}>{children}</Link> : <>{children}</>);\n  const { data: connectionDetails, isLoading } = useContact({\n    dotYouId: dotYouId,\n    originalContactData: contactData,\n  }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`aspect-[3/5] ${className}`} />;\n  }\n\n  const nameData = connectionDetails?.name;\n  const fullName = nameData ? `${nameData.givenName ?? ''} ${nameData.surname ?? ''}` : dotYouId;\n  const getInitials = () => {\n    if (nameData) {\n      return nameData.givenName?.[0] + nameData.surname?.[0] + '';\n    }\n\n    const splittedDomain = dotYouId?.split('.');\n    if (splittedDomain?.length >= 2) {\n      return splittedDomain[0][0] + splittedDomain[1][0] + '';\n    }\n\n    return '--';\n  };\n\n  const photoData = connectionDetails?.image;\n\n  return (\n    <div className={className}>\n      <Wrapper>\n        <div\n          className={`h-full rounded-md border border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800 ${\n            checked\n              ? 'border-4 border-indigo-500 dark:border-indigo-700'\n              : checked === false\n              ? 'border-4'\n              : ''\n          }`}\n          onClick={onClick}\n        >\n          <div className=\"aspect-square\">\n            {photoData ? (\n              <figure className={'relative overflow-hidden'}>\n                <img\n                  src={photoData.url}\n                  width={photoData.pixelWidth}\n                  height={photoData.pixelHeight}\n                  className=\"aspect-square w-full\"\n                />\n              </figure>\n            ) : (\n              <FallbackImg initials={getInitials()} />\n            )}\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">{fullName ?? dotYouId}</h2>\n            {children}\n          </div>\n        </div>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport { ContactData } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport IncomingConnectionDialog from '../../Dialog/ConnectionDialogs/IncomingConnectionDialog';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonIncomingRequest = ({\n  senderDotYouId,\n  contactData,\n  children,\n  className,\n}: {\n  senderDotYouId: string;\n  contactData: ContactData;\n  children?: ReactNode;\n  className: string;\n}) => {\n  const {\n    acceptRequest: { mutateAsync: acceptPending, status: acceptPendingStatus },\n    ignoreRequest: { mutate: ignoreRequest, status: ignoreRequestStatus },\n  } = useConnection({});\n  const checkReturnTo = useFocusedEditing();\n\n  const [isAcceptDialogOpen, setIsAcceptDialogOpen] = useState(false);\n\n  return (\n    <>\n      <PersonCard\n        className={className}\n        contactData={contactData}\n        dotYouId={senderDotYouId}\n        href={(senderDotYouId && `/owner/connections/${senderDotYouId}`) ?? undefined}\n      >\n        {children}\n        <ActionButton\n          type=\"primary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            setIsAcceptDialogOpen(true);\n            return false;\n          }}\n          state={acceptPendingStatus}\n        >\n          {t('Confirm')}...\n        </ActionButton>\n        <ActionButton\n          type=\"secondary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            ignoreRequest({ senderDotYouId: senderDotYouId });\n            return false;\n          }}\n          state={ignoreRequestStatus}\n        >\n          {t('Ignore')}\n        </ActionButton>\n      </PersonCard>\n      <IncomingConnectionDialog\n        isOpen={isAcceptDialogOpen}\n        senderDotYouId={senderDotYouId}\n        title={t('Accept connection request')}\n        confirmText={t('Accept and give access')}\n        onConfirm={async () => {\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n        onCancel={() => {\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default PersonIncomingRequest;\n","import { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { RedactedAppRegistration } from '../../../provider/app/AppManagementProviderTypes';\nimport Circles from '../../Icons/Circles/Circles';\n\nconst AppMembershipView = ({\n  appDef,\n  permissionLevel,\n  className,\n}: {\n  appDef: RedactedAppRegistration;\n  permissionLevel?: string;\n  className?: string;\n}) => {\n  if (!appDef) {\n    return <></>;\n  }\n\n  return (\n    <div className={`${className ?? ''} ${appDef.isRevoked && 'opacity-50'}`}>\n      <Link to={`/owner/apps/${appDef.appId}`}>\n        <h2 className=\"mb-2 flex flex-row text-xl\">\n          <Circles className=\"my-auto mr-2 h-4 w-4\" />{' '}\n          <span className=\"my-auto\">\n            {appDef.isRevoked && `${t('Revoked')}: `}\n            {appDef.name}\n          </span>\n          {permissionLevel && <span className=\"my-auto\">: {permissionLevel}</span>}\n        </h2>\n      </Link>\n    </div>\n  );\n};\n\nexport default AppMembershipView;\n","import { DriveDefinition } from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport { DriveGrant } from '../../../provider/connections/CircleDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\nimport { getAccessFromPermissionNumber } from '../../Templates/DemoData/helpers';\n\nconst DrivePermissionView = ({\n  driveGrant,\n  permissionTree,\n  className,\n}: {\n  driveGrant: DriveGrant;\n  permissionTree?: string;\n  className?: string;\n}) => {\n  const { data: drive, isLoading } = useDrive({\n    targetDrive: driveGrant.permissionedDrive.drive,\n  }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`h-4 max-w-xs ${className}`} />;\n  }\n\n  return (\n    <div\n      key={`${driveGrant?.permissionedDrive?.drive?.alias}-${driveGrant?.permissionedDrive.drive?.type}`}\n      className={`flex flex-row ${className}`}\n      title={permissionTree}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`leading-none ${!permissionTree ? 'my-auto' : ''}`}>\n            {drive?.name}:{' '}\n            {\n              getAccessFromPermissionNumber(\n                driveGrant?.permissionedDrive.permission,\n                drivePermissionLevels\n              ).name\n            }\n          </p>\n          {permissionTree && (\n            <small className=\"\">\n              {t('Via')} {permissionTree}\n            </small>\n          )}\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport const DriveView = ({ drive, className }: { drive: DriveDefinition; className?: string }) => {\n  return (\n    <div\n      key={`${drive.targetDriveInfo?.alias}-${drive.targetDriveInfo?.type}`}\n      className={`flex flex-row ${className}`}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`my-auto leading-none`}>{drive?.name}</p>\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default DrivePermissionView;\n","export const rando = (arr: string[]) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const getRandomAbstract = () => {\n  const sentences = [\n    'Ut bibendum, neque ac lacinia aliquam, justo ipsum aliquam urna, id vestibulum augue mauris sit amet lacus.',\n    'Proin ante sapien, interdum sit amet eros sit amet, eleifend pharetra metus.',\n    'Sed elit mi, euismod eget neque at, suscipit aliquam nisi.',\n    'Nunc diam arcu, tincidunt quis dignissim ac, volutpat non odio.',\n  ];\n\n  return rando(sentences);\n};\n\nexport const getFunName = () => {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)} ${rando(adjectives)} ${rando(nouns)}`;\n};\n\nexport const base64ToArrayBuffer = (base64: string) => {\n  const binary_string = window.atob(base64);\n  const len = binary_string.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nexport const arrayBufferToBase64 = (buffer: Iterable<number>) => {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n};\n\nexport const getAccessFromPermissionNumber = (\n  value: number,\n  permissionLevels: { name: string; value: number }[]\n) => {\n  return permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= value) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n};\n\nexport const moveElementInArray = (arr: Array<unknown>, fromIndex: number, toIndex: number) => {\n  const element = arr[fromIndex];\n  arr.splice(fromIndex, 1);\n  arr.splice(toIndex, 0, element);\n\n  return arr;\n};\n","import { ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst InfoDialog = ({\n  title,\n  children,\n  confirmText,\n\n  isOpen,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  children: ReactNode;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      {children}\n      <div className=\"-m-2 flex flex-row-reverse py-3\">\n        <ActionButton className=\"m-2\" onClick={onConfirm}>\n          {confirmText || t('Ok')}\n        </ActionButton>\n      </div>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default InfoDialog;\n","import { FC } from 'react';\n\nconst Question: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z\" />\n    </svg>\n  );\n};\n\nexport default Question;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport InfoDialog from '../Dialog/InfoDialog/InfoDialog';\nimport Question from '../Icons/Question/Question';\n\nconst InfoBox = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: ReactNode;\n  className?: string;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <a\n        onClick={() => setIsOpen(true)}\n        title={title}\n        className={`cursor-pointer ${className ?? ''}`}\n      >\n        <Question className=\"h-6 w-6\" />\n      </a>\n      <InfoDialog\n        isOpen={isOpen}\n        onConfirm={() => setIsOpen(false)}\n        onCancel={() => setIsOpen(false)}\n        title={title}\n        children={children}\n        confirmText={t('Ok')}\n      />\n    </>\n  );\n};\nexport default InfoBox;\n","import { Link } from 'react-router-dom';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useApps from '../../hooks/apps/useApps';\nimport useCircles from '../../hooks/circles/useCircles';\nimport useConnections from '../../hooks/connections/useConnections';\nimport useDrives from '../../hooks/drives/useDrives';\nimport PersonIncomingRequest from '../Connection/PersonIncomingRequest/PersonIncomingRequest';\nimport InfoBox from '../InfoBox/InfoBox';\nimport PageMeta from '../Layout/PageMeta/PageMeta';\nimport AppMembershipView from '../PermissionViews/AppPermissionView/AppPermissionView';\nimport CirclePermissionView from '../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport { DriveView } from '../PermissionViews/DrivePermissionView/DrivePermissionView';\nimport Section from '../Sections/Section';\n\nconst DemoButtons = () => {\n  const {\n    fetchPending: { data: pendingConnections, isLoading: pendingConnectionsLoading },\n  } = useConnections();\n  const {\n    fetch: { data: circles, isLoading: isCirclesLoading },\n  } = useCircles();\n  const { data: apps, isLoading: isAppsLoading } = useApps().fetchRegistered;\n  const {\n    fetch: { data: drives, isLoading: isDrivesLoading },\n  } = useDrives();\n\n  return (\n    <>\n      <PageMeta title={t('Dashboard')} />\n\n      <p className=\"max-w-md\">\n        Welcome to your owner console. Here you will be able to edit your{' '}\n        <Link className=\"underline\" to=\"/owner/profile\">\n          profile\n        </Link>\n        , manage your{' '}\n        <Link className=\"underline\" to=\"/owner/connections\">\n          connections\n        </Link>\n        , manage permissions within{' '}\n        <Link className=\"underline\" to=\"/owner/circles\">\n          circles\n        </Link>{' '}\n        and{' '}\n        <Link className=\"underline\" to=\"/owner/apps\">\n          apps\n        </Link>\n        .\n      </p>\n\n      {!pendingConnectionsLoading && pendingConnections?.length ? (\n        <Section isOpaqueBg={true} isBorderLess={true} title={t('Connection requests')}>\n          <div className=\"-m-1 flex flex-row flex-wrap\">\n            {pendingConnections?.map((pendingConnection) => (\n              <PersonIncomingRequest\n                className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                senderDotYouId={pendingConnection.senderDotYouId}\n                contactData={pendingConnection.contactData}\n                key={pendingConnection.senderDotYouId}\n              >\n                <div className=\"-mt-3\">\n                  <p className=\"mb-3 text-sm\">{pendingConnection.message}</p>\n                </div>\n              </PersonIncomingRequest>\n            ))}\n          </div>\n        </Section>\n      ) : null}\n\n      <Section\n        isOpaqueBg={true}\n        title={\n          <div className=\"flex flex-row\">\n            {t('Circles')}{' '}\n            <InfoBox title={t('About Circles')} className=\"ml-2\">\n              <p>\n                Circles are groups of members that share the same permissions. You can name them\n                based on which social circle your connections belong (eg: family, friends,\n                co-workers, ...). Or anything else that works for you\n              </p>\n            </InfoBox>\n          </div>\n        }\n      >\n        <ul className=\"-my-4\">\n          {circles?.map((circle) => {\n            return <CirclePermissionView circleDef={circle} key={circle.id} className=\"my-4\" />;\n          })}\n        </ul>\n      </Section>\n      <Section\n        isOpaqueBg={true}\n        title={\n          <div className=\"flex flex-row\">\n            {t('Apps')}{' '}\n            <InfoBox title={t('About Apps')} className=\"ml-2\">\n              <p>\n                Circles are groups of members that share the same permissions. You can name them\n                based on which social circle your connections belong (eg: family, friends,\n                co-workers, ...). Or anything else that works for you\n              </p>\n            </InfoBox>\n          </div>\n        }\n      >\n        <ul className=\"-my-4\">\n          {apps?.map((app) => {\n            return <AppMembershipView className=\"my-4\" appDef={app} key={app.appId} />;\n          })}\n        </ul>\n      </Section>\n      <Section\n        isOpaqueBg={true}\n        title={\n          <div className=\"flex flex-row\">\n            {t('Drives')}{' '}\n            <InfoBox title={t('About Drives')} className=\"ml-2\">\n              <p>\n                Circles are groups of members that share the same permissions. You can name them\n                based on which social circle your connections belong (eg: family, friends,\n                co-workers, ...). Or anything else that works for you\n              </p>\n            </InfoBox>\n          </div>\n        }\n      >\n        {drives?.map((drive) => {\n          return (\n            <DriveView\n              key={`${drive.targetDriveInfo.alias}-${drive.targetDriveInfo.type}`}\n              drive={drive}\n              className=\"my-6\"\n            />\n          );\n        })}\n      </Section>\n    </>\n  );\n};\n\nexport default DemoButtons;\n","import Dashboard from '../../Dashboard/Dashboard';\n\nconst Home = () => {\n  return (\n    <section>\n      <Dashboard />\n    </section>\n  );\n};\n\nexport default Home;\n","import { useQuery } from '@tanstack/react-query';\nimport AppManagementProvider from '../../provider/app/AppManagementProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useApps = () => {\n  const { getSharedSecret } = useAuth();\n\n  const appManagementProvider = AppManagementProvider.getInstance(getSharedSecret());\n\n  const fetchRegistered = async () => {\n    const apps = await appManagementProvider.GetAppRegistrations();\n    return apps?.sort((a, b) => (a.isRevoked ? 1 : 0) - (b.isRevoked ? 1 : 0));\n  };\n\n  return {\n    fetchRegistered: useQuery(['registeredApps'], () => fetchRegistered(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useApps;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async () => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchSentRequests = async () => {\n    return await (\n      await circleNetworkRequestProvider.getSentRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchConnections = async () => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  return {\n    fetchPending: useQuery(['pendingConnections'], () => fetchPendingConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchSent: useQuery(['sentRequests'], () => fetchSentRequests(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchActive: useQuery(['activeConnections'], () => fetchConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient, TargetDrive } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrive = ({ targetDrive }: { targetDrive: TargetDrive }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetch = async (targetDrive: TargetDrive) => {\n    const allDrives = await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n\n    return allDrives.find(\n      (drive) =>\n        drive.targetDriveInfo.alias === targetDrive.alias &&\n        drive.targetDriveInfo.type === targetDrive.type\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['drive', `${targetDrive.alias}_${targetDrive.type}`],\n      () => fetch(targetDrive),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useDrive;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    return await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['drives'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useDrives;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useFocusedEditing = () => {\n  const [searchParams] = useSearchParams();\n\n  const checkReturnTo = () => {\n    if (searchParams.get('ui') !== 'focus' && searchParams.get('ui') !== 'minimal') {\n      return;\n    }\n    const returnUrl = searchParams.get('return');\n\n    window.location.href = returnUrl;\n  };\n\n  return checkReturnTo;\n};\n\nexport default useFocusedEditing;\n","import {\n  AppClientRegistrationRequest,\n  AppClientRegistrationResponse,\n  AppRegistrationRequest,\n  RedactedAppRegistration,\n  GetAppRequest,\n} from './AppManagementProviderTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nexport default class AppManagementProvider extends OwnerProviderBase {\n  private static instance: AppManagementProvider;\n  constructor(sharedSecret: Uint8Array | undefined) {\n    super(sharedSecret);\n  }\n\n  //adds the specified client to the list of allowed clients for a given app; returns a CAT\n  async RegisterAppClient(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/client',\n      request\n    );\n    return response.data;\n  }\n\n  async RegisterChatAppClient_temp(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/chatclient_temp',\n      request\n    );\n    console.log('RegisterChatAppClient_temp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async RegisterApp(request: AppRegistrationRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>(\n      'appmanagement/register/app',\n      request\n    );\n\n    console.log('RegisterApp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async GetAppRegistration(request: GetAppRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>('appmanagement/app', request);\n    return response.data;\n  }\n\n  async GetAppRegistrations(): Promise<RedactedAppRegistration[]> {\n    const client = this.createAxiosClient();\n    const response = await client.get<RedactedAppRegistration[]>('appmanagement/list');\n    return response.data;\n  }\n\n  async RevokeApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    await client.post('appmanagement/revoke', request);\n  }\n\n  async AllowApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    const response = await client.post('appmanagement/allow', request);\n    console.log(response);\n  }\n\n  public static getInstance(sharedSecret): AppManagementProvider {\n    if (!AppManagementProvider.instance) {\n      AppManagementProvider.instance = new AppManagementProvider(sharedSecret);\n    }\n\n    return AppManagementProvider.instance;\n  }\n}\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n\nexport const appPermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Manage Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["dotYouId","originalContactData","getSharedSecret","useAuth","contactProvider","ContactProvider","fetchSingle","getContactByDotYouId","contactBookContact","console","log","parseContact","fallbackContact","name","givenName","surname","image","fetchDataFromPublic","publicContact","saveContact","undefined","client","PublicClient","api","ApiType","root","fileReadOnlyProvider","GetFile","rawData","nameAttr","get","photoRefAttr","photoAttr","payload","data","profileImageId","previewThumbnail","additionalThumbnails","reduce","prevVal","curValue","pixelWidth","header","fileMetadata","appData","pixelHeight","returnVal","profileImage","contentType","content","contact","buffer","DataUtil","url","window","URL","createObjectURL","Blob","fetch","useQuery","refetchOnWindowFocus","onError","err","error","initials","className","contactData","href","checked","children","onClick","Wrapper","to","useContact","connectionDetails","isLoading","LoadingParagraph","nameData","fullName","photoData","src","width","height","splittedDomain","split","length","getInitials","senderDotYouId","useConnection","acceptRequest","acceptPendingStatus","mutateAsync","status","ignoreRequest","mutate","ignoreRequestStatus","checkReturnTo","useFocusedEditing","useState","isAcceptDialogOpen","setIsAcceptDialogOpen","type","e","preventDefault","state","t","isOpen","title","confirmText","onConfirm","onCancel","appDef","permissionLevel","isRevoked","appId","DriveView","drive","targetDriveInfo","alias","driveGrant","permissionTree","useDrive","targetDrive","permissionedDrive","getAccessFromPermissionNumber","permission","drivePermissionLevels","rando","arr","Math","floor","random","getRandomAbstract","getFunName","adjectives","base64ToArrayBuffer","base64","binary_string","atob","len","bytes","Uint8Array","i","charCodeAt","value","permissionLevels","prevValue","currValue","moveElementInArray","fromIndex","toIndex","element","splice","target","usePortal","dialog","DialogWrapper","onClose","ActionButton","createPortal","xmlns","viewBox","fill","d","setIsOpen","useConnections","fetchPending","pendingConnections","pendingConnectionsLoading","useCircles","circles","useApps","fetchRegistered","apps","useDrives","drives","PageMeta","Section","isOpaqueBg","isBorderLess","map","pendingConnection","PersonIncomingRequest","message","circle","CirclePermissionView","circleDef","id","app","Dashboard","appManagementProvider","AppManagementProvider","GetAppRegistrations","sort","a","b","circleNetworkRequestProvider","CircleNetworkRequestProvider","circleNetworkProvider","CircleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","pageSize","results","fetchSentRequests","getSentRequests","fetchConnections","getConnections","fetchSent","fetchActive","CoreClient","sharedSecret","driveProvider","GetDrives","allDrives","find","fetchAll","useSearchParams","searchParams","returnUrl","location","request","this","createAxiosClient","post","response","instance","OwnerProviderBase","circlePermissionLevels","appPermissionLevels"],"sourceRoot":""}