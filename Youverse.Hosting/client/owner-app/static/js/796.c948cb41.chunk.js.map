{"version":3,"file":"static/js/796.c948cb41.chunk.js","mappings":"2IA+CA,IA1CmB,SAAC,GAMb,IALLA,EAKI,EALJA,UACAC,EAII,EAJJA,MAKA,GAAgCC,EAAAA,EAAAA,UAAe,MAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsBF,EAAAA,EAAAA,UAAe,IAAIG,MAAzC,eAAOC,EAAP,KAAYC,EAAZ,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACM,YAAVP,GACFG,EAAY,IAAIC,KAEnB,GAAE,CAACJ,KAEJO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAO,IAAIF,KACZ,GAAE,KAEH,OAAO,WACLM,aAAaF,EACd,CACF,GAAE,CAACH,KAECH,EACH,OAAO,KAGT,IAAMS,EAAON,EAAIO,UAAYV,EAASU,UAChCC,EAAOX,EACTS,GAnCU,IAoCR,oBACAA,GApCQ,IAqCR,oBACAT,EAASY,iBACX,GAEJ,OAAOD,GAAO,eAAGd,UAAS,UAAKA,EAAL,YAAZ,wBAAkDc,KAAY,IAC7E,C,wDCcD,IAvDiB,SAAC,GAYX,IAXLE,EAWI,EAXJA,MACAC,EAUI,EAVJA,QACAC,EASI,EATJA,WACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,KAQA,OACE,oBACEpB,UAAU,8GADZ,UAIE,iBAAKA,UAAU,4BAAf,WACE,iBAAKA,UAAU,WAAf,UACGmB,IACC,eAAInB,UAAU,+BAAd,SACGmB,EAAYE,KAAI,SAACC,EAAOC,GACvB,OACE,eAAgBvB,UAAU,OAA1B,SACGsB,EAAME,MACL,UAAC,KAAD,CAAMC,GAAIH,EAAME,KAAMxB,UAAU,GAAhC,UACGsB,EAAMN,OACP,iBAAMhB,UAAU,OAAhB,SAAwB,UAG1B,iBAAMA,UAAU,iBAAhB,SAAkCsB,EAAMN,SAPnCO,EAWZ,MAGJP,IACC,gBAAIhB,UAAU,8CAAd,UACGoB,GAAQA,EAAK,CAAEpB,UAAW,yBAD7B,IACyDgB,SAI7D,iBAAKhB,UAAU,UAAf,WACE,gBAAKA,UAAU,uEAAf,SACGiB,IAEFC,IAAc,SAAC,IAAD,CAAYlB,UAAU,OAAOC,MAAOiB,WAK5D,C,6ICKD,EAzDoB,WAClB,IAAQQ,GAAoBC,EAAAA,EAAAA,KAApBD,gBAEFE,EAAc,yCAAG,kGACfC,EAAS,IAAIC,EAAAA,GAAO,CAAEC,IAAKC,EAAAA,GAAAA,MAAeC,aAAcP,MADzC,SAGEG,EAAOK,oBAAoBC,wBAChDC,EAAAA,EAAAA,kBAAAA,WACAA,EAAAA,EAAAA,sBAAAA,WACAC,EAAAA,GAAAA,KAAAA,KAAAA,YANmB,OAGfC,EAHe,OASrBC,QAAQC,IAAIF,GATS,2CAAH,qDAYpB,OACE,iCACE,SAACG,EAAA,EAAD,CAAUzB,OAAO0B,EAAAA,EAAAA,GAAE,gBAEnB,iBAAK1C,UAAU,4BAAf,WACE,gBAAKA,UAAU,OAAf,UACE,cACE2C,QAASf,EACT5B,UAAU,iGAFZ,uBAOF,gBAAKA,UAAU,OAAf,UACE,cACE2C,QAASf,EACT5B,UAAU,iGAFZ,uBAOF,gBAAKA,UAAU,OAAf,UACE,cACE2C,QAASf,EACT5B,UAAU,iGAFZ,uBAOF,gBAAKA,UAAU,OAAf,UACE,cACE2C,QAASf,EACT5B,UAAU,iGAFZ,2BAUT,EClDD,EARa,WACX,OACE,8BACE,SAAC4C,EAAD,KAGL,C","sources":["components/Buttons/SaveStatus.tsx","components/Layout/PageMeta/PageMeta.tsx","components/Dashboard/Dashboard.tsx","components/Templates/Home/Home.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-col sm:flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n              {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n            </h1>\n          )}\n        </div>\n        <div className=\"ml-auto\">\n          <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n            {actions}\n          </div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { ApiType, AttributeDefinitions, BuiltInProfiles, Client } from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useAuth from '../../hooks/auth/useAuth';\nimport PageMeta from '../Layout/PageMeta/PageMeta';\n\nconst DemoButtons = () => {\n  const { getSharedSecret } = useAuth();\n\n  const testConnection = async () => {\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    const nameAttr = await client.profileDataProvider.getBestAttributeVersion(\n      BuiltInProfiles.StandardProfileId.toString(),\n      BuiltInProfiles.PersonalInfoSectionId.toString(),\n      AttributeDefinitions.Name.type.toString()\n    );\n\n    console.log(nameAttr);\n  };\n\n  return (\n    <>\n      <PageMeta title={t('Dashboard')} />\n\n      <div className=\"-mx-5 mt-5 flex flex-wrap\">\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 1\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 2\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 3\n          </a>\n        </div>\n        <div className=\"px-5\">\n          <a\n            onClick={testConnection}\n            className=\"block rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n          >\n            Test 4\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DemoButtons;\n","import Dashboard from '../../Dashboard/Dashboard';\n\nconst Home = () => {\n  return (\n    <section>\n      <Dashboard />\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["className","state","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","title","actions","saveStatus","breadCrumbs","icon","map","crumb","index","href","to","getSharedSecret","useAuth","testConnection","client","Client","api","ApiType","sharedSecret","profileDataProvider","getBestAttributeVersion","BuiltInProfiles","AttributeDefinitions","nameAttr","console","log","PageMeta","t","onClick","Dashboard"],"sourceRoot":""}