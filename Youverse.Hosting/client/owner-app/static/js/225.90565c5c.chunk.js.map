{"version":3,"file":"static/js/225.90565c5c.chunk.js","mappings":"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","sources":["components/Form/Radio.tsx","components/Dialog/AclDialog/AclDialog.tsx","components/Icons/Anonymous/Anonymous.tsx","components/Icons/ConnectedPeople/ConnectedPeople.tsx","components/Icons/Globe/Globe.tsx","components/AclEditor/AclEditor.tsx","components/Icons/Loader/Loader.tsx","components/Icons/Save/Save.tsx","components/Buttons/ActionButton.tsx","components/Icons/Times/Times.tsx","components/Dialog/Common/DialogWrapper.tsx","components/Form/Input.tsx","components/Form/Select.tsx","components/Form/Textarea.tsx","components/Icons/Check/Check.tsx","components/Icons/Exclamation/Exclamation.tsx","components/Icons/Plus/Plus.tsx","components/Icons/Trash/Trash.tsx","components/Sections/Section.tsx","hooks/blogs/useBlogs.ts","components/Channel/ChannelCreator/ChannelCreator.tsx","components/Blog/BlogTeaser/BlogTeaser.tsx","components/Channel/ChannelEditor/ChannelEditor.tsx","components/Channel/ChannelOverview/ChannelOverview.tsx","components/SubMenu/SubMenu.tsx","components/Templates/Blog/Blog.tsx","hooks/blogs/useChannels.ts","hooks/portal/usePortal.ts","webpack://owner-app/./src/components/Icons/Loader/Loader.css?58b5"],"sourcesContent":["const Radio = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type=\"radio\"\n      className=\"h-4 w-4 rounded-full border-gray-300 bg-gray-100 text-blue-600 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800\"\n    />\n  );\n};\n\nexport default Radio;\n","import { AccessControlList, SecurityGroupType, TargetDrive } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Radio from '../../Form/Radio';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst AclDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n\n  onConfirm: (acl: AccessControlList) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const [newAcl, setNewAcl] = useState<AccessControlList>(acl);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const saveAcl = () => {\n    onConfirm(newAcl);\n  };\n\n  const updateSecurityGroup = (e) => {\n    setNewAcl({ ...acl, requiredSecurityGroup: SecurityGroupType[e.target.value] });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <div>\n          <Radio\n            id=\"anonymous\"\n            value=\"Anonymous\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Anonymous}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"anonymous\" className=\"ml-2\">\n            Anonymous\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"authenticated\"\n            value=\"Authenticated\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Authenticated}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"authenticated\" className=\"ml-2\">\n            Authenticated\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"connected\"\n            value=\"Connected\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Connected}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"connected\" className=\"ml-2\">\n            Connected\n          </label>\n        </div>\n\n        <div className=\"-mx-2 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n          <ActionButton className=\"mx-2\" onClick={saveAcl}>\n            {confirmText ?? 'Save'}\n          </ActionButton>\n          <ActionButton className=\"mx-2\" type=\"secondary\" onClick={onCancel}>\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default AclDialog;\n","import { FC } from 'react';\n\nconst Anonymous: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M377.7 338.8l37.15-92.87C419 235.4 411.3 224 399.1 224h-57.48C348.5 209.2 352 193 352 176c0-4.117-.8359-8.057-1.217-12.08C390.7 155.1 416 142.3 416 128c0-16.08-31.75-30.28-80.31-38.99C323.8 45.15 304.9 0 277.4 0c-10.38 0-19.62 4.5-27.38 10.5c-15.25 11.88-36.75 11.88-52 0C190.3 4.5 181.1 0 170.7 0C143.2 0 124.4 45.16 112.5 88.98C63.83 97.68 32 111.9 32 128c0 14.34 25.31 27.13 65.22 35.92C96.84 167.9 96 171.9 96 176C96 193 99.47 209.2 105.5 224H48.02C36.7 224 28.96 235.4 33.16 245.9l37.15 92.87C27.87 370.4 0 420.4 0 477.3C0 496.5 15.52 512 34.66 512H413.3C432.5 512 448 496.5 448 477.3C448 420.4 420.1 370.4 377.7 338.8zM176 479.1L128 288l64 32l16 32L176 479.1zM271.1 479.1L240 352l16-32l64-32L271.1 479.1zM320 186C320 207 302.8 224 281.6 224h-12.33c-16.46 0-30.29-10.39-35.63-24.99C232.1 194.9 228.4 192 224 192S215.9 194.9 214.4 199C209 213.6 195.2 224 178.8 224h-12.33C145.2 224 128 207 128 186V169.5C156.3 173.6 188.1 176 224 176s67.74-2.383 96-6.473V186z\" />\n    </svg>\n  );\n};\n\nexport default Anonymous;\n","import { FC } from 'react';\n\nconst ConnectedPeople: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M96 304.1c0-12.16 4.971-23.83 13.64-32.01l72.13-68.08c1.65-1.555 3.773-2.311 5.611-3.578C177.1 176.8 155 160 128 160H64C28.65 160 0 188.7 0 224v96c0 17.67 14.33 32 31.1 32L32 480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96.39l-50.36-47.53C100.1 327.9 96 316.2 96 304.1zM480 128c35.38 0 64-28.62 64-64s-28.62-64-64-64s-64 28.62-64 64S444.6 128 480 128zM96 128c35.38 0 64-28.62 64-64S131.4 0 96 0S32 28.62 32 64S60.63 128 96 128zM444.4 295.3L372.3 227.3c-3.49-3.293-8.607-4.193-13.01-2.299C354.9 226.9 352 231.2 352 236V272H224V236c0-4.795-2.857-9.133-7.262-11.03C212.3 223.1 207.2 223.1 203.7 227.3L131.6 295.3c-4.805 4.535-4.805 12.94 0 17.47l72.12 68.07c3.49 3.291 8.607 4.191 13.01 2.297C221.1 381.3 224 376.9 224 372.1V336h128v36.14c0 4.795 2.857 9.135 7.262 11.04c4.406 1.893 9.523 .9922 13.01-2.299l72.12-68.07C449.2 308.3 449.2 299.9 444.4 295.3zM512 160h-64c-26.1 0-49.98 16.77-59.38 40.42c1.842 1.271 3.969 2.027 5.623 3.588l72.12 68.06C475 280.2 480 291.9 480 304.1c.002 12.16-4.969 23.83-13.64 32.01L416 383.6V480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-128c17.67 0 32-14.33 32-32V224C576 188.7 547.3 160 512 160z\" />\n    </svg>\n  );\n};\n\nexport default ConnectedPeople;\n","import { FC } from 'react';\n\nconst Globe: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M352 256C352 278.2 350.8 299.6 348.7 320H163.3C161.2 299.6 159.1 278.2 159.1 256C159.1 233.8 161.2 212.4 163.3 192H348.7C350.8 212.4 352 233.8 352 256zM503.9 192C509.2 212.5 512 233.9 512 256C512 278.1 509.2 299.5 503.9 320H380.8C382.9 299.4 384 277.1 384 256C384 234 382.9 212.6 380.8 192H503.9zM493.4 160H376.7C366.7 96.14 346.9 42.62 321.4 8.442C399.8 29.09 463.4 85.94 493.4 160zM344.3 160H167.7C173.8 123.6 183.2 91.38 194.7 65.35C205.2 41.74 216.9 24.61 228.2 13.81C239.4 3.178 248.7 0 256 0C263.3 0 272.6 3.178 283.8 13.81C295.1 24.61 306.8 41.74 317.3 65.35C328.8 91.38 338.2 123.6 344.3 160H344.3zM18.61 160C48.59 85.94 112.2 29.09 190.6 8.442C165.1 42.62 145.3 96.14 135.3 160H18.61zM131.2 192C129.1 212.6 127.1 234 127.1 256C127.1 277.1 129.1 299.4 131.2 320H8.065C2.8 299.5 0 278.1 0 256C0 233.9 2.8 212.5 8.065 192H131.2zM194.7 446.6C183.2 420.6 173.8 388.4 167.7 352H344.3C338.2 388.4 328.8 420.6 317.3 446.6C306.8 470.3 295.1 487.4 283.8 498.2C272.6 508.8 263.3 512 255.1 512C248.7 512 239.4 508.8 228.2 498.2C216.9 487.4 205.2 470.3 194.7 446.6H194.7zM190.6 503.6C112.2 482.9 48.59 426.1 18.61 352H135.3C145.3 415.9 165.1 469.4 190.6 503.6V503.6zM321.4 503.6C346.9 469.4 366.7 415.9 376.7 352H493.4C463.4 426.1 399.8 482.9 321.4 503.6V503.6z\" />\n    </svg>\n  );\n};\n\nexport default Globe;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport AclDialog from '../Dialog/AclDialog/AclDialog';\nimport Anonymous from '../Icons/Anonymous/Anonymous';\nimport ConnectedPeople from '../Icons/ConnectedPeople/ConnectedPeople';\nimport Globe from '../Icons/Globe/Globe';\nimport Shield from '../Icons/Shield/Shield';\n\nconst AclEditor = ({\n  acl,\n  onChange,\n}: {\n  acl: AccessControlList;\n  onChange?: (acl: AccessControlList) => void;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const Icon = (props: { className: string }) => {\n    return acl.requiredSecurityGroup === SecurityGroupType.Anonymous ? (\n      <Globe {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Authenticated ? (\n      <Anonymous {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Connected ? (\n      <ConnectedPeople {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Owner ? (\n      <Shield {...props} />\n    ) : (\n      <Shield {...props} />\n    );\n  };\n\n  return (\n    <>\n      <button\n        title={acl.requiredSecurityGroup}\n        className={`mr-2 inline-block ${onChange ? '' : 'cursor-default'}`}\n        onClick={() => onChange && setIsEditing(true)}\n      >\n        <Icon className=\"h-5 w-5\" />\n      </button>\n      <AclDialog\n        acl={acl}\n        isOpen={isEditing}\n        title={t('Edit security')}\n        onCancel={() => {\n          setIsEditing(false);\n        }}\n        onConfirm={(newAcl) => {\n          onChange(newAcl);\n          setIsEditing(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AclEditor;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Trash from '../Icons/Trash/Trash';\n\nexport type ActionButtonState = 'loading' | 'success' | 'error' | 'idle';\n\ntype ActionButtonProps = {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash';\n  type?: 'primary' | 'secondary' | 'remove';\n  state?: ActionButtonState;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n  size?: 'large' | 'small';\n};\n\nexport const mergeStates = (\n  stateA: ActionButtonState,\n  stateB: ActionButtonState\n): ActionButtonState => {\n  if (stateA === 'error' || stateB === 'error') {\n    return 'error';\n  }\n\n  if (stateA === 'loading' || stateB === 'loading') {\n    return 'loading';\n  }\n\n  if (stateA === 'idle' && stateB === 'idle') {\n    return 'idle';\n  }\n\n  if (stateA === 'success' && stateB === 'success') {\n    return 'success';\n  }\n\n  if ((stateA === 'success' && stateB === 'idle') || (stateA === 'idle' && stateB === 'success')) {\n    return 'success';\n  }\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n  size,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-800 dark:text-white'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : 'bg-green-500 hover:bg-green-600 text-white';\n\n  const sizeClasses =\n    size === 'large' ? 'px-5 py-3' : size === 'small' ? 'px-3 py-1 text-sm' : 'px-3 py-2';\n\n  return (\n    <button\n      className={`flex ${\n        children ? 'min-w-[6rem]' : ''\n      } flex-row rounded-md ${sizeClasses} text-left ${colorClasses}  ${\n        state === 'loading' ? 'animate-pulse' : ''\n      } ${className}`}\n      disabled={state === 'loading'}\n      onClick={onClick}\n      title={title}\n    >\n      <span className=\"mr-1\">{children}</span>\n      <Icon className={'my-auto ml-auto h-4 w-4'} />\n    </button>\n  );\n};\n\nexport default ActionButton;\n","import { FC } from 'react';\n\nconst Times: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 320 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z\" />\n    </svg>\n  );\n};\n\nexport default Times;\n","import { ReactNode } from 'react';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Times from '../../Icons/Times/Times';\n\nconst DialogWrapper = ({\n  children,\n  title,\n  onClose,\n  size = 'large',\n}: {\n  children: ReactNode;\n  title?: string;\n  onClose?: () => void;\n  size?: 'large' | 'normal' | '4xlarge';\n}) => {\n  return (\n    <div className=\"relative z-50\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n          <div\n            className={`relative transform rounded-lg bg-white text-left shadow-xl transition-all dark:bg-black sm:my-8 sm:w-full ${\n              size === 'normal' ? 'sm:max-w-lg' : size === 'large' ? 'sm:max-w-xl' : 'sm:max-w-4xl'\n            }`}\n          >\n            <div className=\"bg-white px-8 py-8 dark:bg-black dark:text-slate-50\">\n              {title || onClose ? (\n                <div className=\"-mx-8 -mt-8 mb-8 flex flex-row bg-slate-100 px-8 py-4 dark:bg-slate-700\">\n                  {title ? (\n                    <h3\n                      className=\"my-3 text-2xl font-medium leading-6 text-gray-900 dark:text-slate-50\"\n                      id=\"modal-title\"\n                    >\n                      {title}\n                    </h3>\n                  ) : null}\n                  {onClose ? (\n                    <button onClick={onClose} className=\"ml-auto p-2\">\n                      <Times className=\"h-5 w-5\" />\n                    </button>\n                  ) : null}\n                </div>\n              ) : null}\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogWrapper;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, BlogPostFile, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  page: string | undefined;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogs = ({ channelId, page }: useBlogPostsProps = { page: undefined }) => {\n  const pageSize = 50;\n  const { getSharedSecret } = useAuth();\n\n  const fetchBlogData = async ({ channelId, page }: useBlogPostsProps = { page: undefined }) => {\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    const foundBlogPosts: BlogPostFile<BlogContentVm>[] =\n      await client.blogPostProvider.getMasterPosts(page, pageSize);\n\n    let filteredBlogPosts = foundBlogPosts.filter((post) => {\n      if (!channelId) {\n        return true;\n      }\n      return post.publishTargets.some((channel) => channel.channelId === channelId);\n    });\n\n    // Process blog posts (Only until fixed in data upload)\n    filteredBlogPosts = filteredBlogPosts.map((item) => {\n      return {\n        ...item,\n        content: {\n          ...item.content,\n          itemKey: `${item.content.channelId}_${item.content.id}`,\n          slug: item.content.caption ? convertTextToSlug(item.content.caption) : item.content.id,\n        },\n      };\n    });\n\n    return filteredBlogPosts;\n  };\n\n  return useQuery(['blogs', channelId, page], () => fetchBlogData({ channelId, page }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n  });\n};\n\nexport default useBlogs;\n","import { ChannelDefinition, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Section from '../../Sections/Section';\n\nconst ChannelCreator = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const { mutate: saveChannel, status: saveStatus } = useChannel().save;\n  const navigate = useNavigate();\n\n  const createChannel: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const newChannelDef: ChannelDefinition = {\n      channelId: '',\n      name: name,\n      description: description,\n      templateId: undefined,\n      acl: { requiredSecurityGroup: SecurityGroupType.Owner },\n    };\n\n    saveChannel(newChannelDef, {\n      onSuccess: () => {\n        navigate(`/owner/blog/${convertTextToSlug(newChannelDef.name)}`);\n      },\n    });\n\n    return false;\n  };\n\n  return (\n    <Section title=\"New: channel\" isOpaqueBg={true}>\n      <form onSubmit={createChannel}>\n        <div className=\"mb-5\">\n          <label htmlFor=\"channelName\">{t('Name')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelName\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Description')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelDescription\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"flex flex-row\">\n          <ActionButton className=\"ml-auto\" state={saveStatus}>\n            {t('Add channel')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelCreator;\n","import {\n  BlogArticle,\n  BlogPostFile,\n  BlogTypeUnion,\n  PublishTarget,\n} from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\nimport useChannels from '../../../hooks/blogs/useChannels';\n\nconst BlogTeaser = ({\n  className,\n  blog,\n  linkRoot,\n}: {\n  className?: string;\n  blog: BlogPostFile<BlogContentVm>;\n  linkRoot: string;\n}) => {\n  return (\n    <Link to={`${linkRoot}${blog.content.slug ?? '#'}`} className=\"contents\">\n      <div\n        className={`flex flex-nowrap px-5 py-8 transition-colors duration-200 hover:bg-slate-50 hover:dark:bg-slate-800 ${\n          className ?? ''\n        }`}\n      >\n        <div className=\"flex flex-col md:flex-grow md:flex-row\">\n          <div className=\"flex flex-shrink-0 md:order-3 md:mb-0 md:mt-3 md:w-32 md:flex-col md:text-right lg:w-64\">\n            <span className=\"title-font font-semibold text-gray-700 dark:text-white\">\n              {(blog.content as BlogTypeUnion).type.toUpperCase()}\n            </span>\n            <span className=\"pl-2 text-gray-500 md:mt-1 md:pl-0 md:text-sm\">\n              {new Date(blog.content.dateUnixTime).toLocaleDateString()}\n            </span>\n          </div>\n          <div className=\"md:order-2 md:flex-grow\">\n            <h2 className=\"title-font mb-2 flex flex-row text-2xl font-medium text-gray-900 dark:text-white\">\n              {blog.content.caption}\n              <BlogPublishTags publishTargets={blog.publishTargets} />\n            </h2>\n            {'abstract' in blog.content ? (\n              <p className=\"leading-relaxed\">{(blog.content as BlogArticle).abstract}</p>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nconst BlogPublishTags = ({ publishTargets }: { publishTargets?: PublishTarget[] }) => {\n  const [{ data: channels }] = useChannels();\n  if (!publishTargets?.length) {\n    return;\n  }\n\n  return (\n    <span className=\"my-auto ml-2 flex flex-row flex-wrap\">\n      {publishTargets.map((target) => {\n        const publishedChannel = channels.find((channel) => channel.channelId === target.channelId);\n        if (!publishedChannel) {\n          return null;\n        }\n        return (\n          <span\n            key={publishedChannel.channelId}\n            className=\"mr-2 bg-green-300 px-2 py-1 text-xs\"\n            title={`${t('Published to')}: ${publishedChannel.name}`}\n          >\n            {publishedChannel.name}\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n\nexport default BlogTeaser;\n","import { ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport AclEditor from '../../AclEditor/AclEditor';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Select from '../../Form/Select';\nimport Textarea from '../../Form/Textarea';\nimport Section from '../../Sections/Section';\n\nconst ChannelEditor = ({\n  channel,\n  onCancel,\n}: {\n  channel: ChannelDefinitionVm;\n  onCancel: () => void;\n}) => {\n  const [channelData, setChannelData] = useState({ ...channel });\n  const { mutate: saveChannel, status: saveStatus } = useChannel().save;\n  const navigate = useNavigate();\n\n  if (!channel) {\n    return;\n  }\n\n  const handleChange = (e: { target: { value: unknown; name: string } }) => {\n    const newChannelData = { ...channelData };\n    newChannelData[e.target.name] = e.target.value;\n\n    setChannelData(newChannelData);\n  };\n\n  const tmpKeys = Object.keys(ChannelTemplate).filter((f) => !isNaN(Number(f)));\n  const tmpVals = Object.keys(ChannelTemplate).filter((f) => isNaN(Number(f)));\n\n  return (\n    <Section\n      title={\n        <>\n          <AclEditor\n            key={channelData.channelId}\n            acl={channelData.acl}\n            onChange={(acl) => {\n              handleChange({ target: { name: 'acl', value: acl } });\n            }}\n          />{' '}\n          {`${t('Edit')}: ${channel.name}`}\n        </>\n      }\n      isOpaqueBg={true}\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          saveChannel(channelData, {\n            onSuccess: () => {\n              navigate(`/owner/blog/${convertTextToSlug(channelData.name)}`);\n            },\n          });\n        }}\n      >\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Name')}</label>\n          <Input id=\"name\" name=\"name\" defaultValue={channel.name} onChange={handleChange} />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"description\">{t('Description')}</label>\n          <Textarea\n            id=\"description\"\n            name=\"description\"\n            defaultValue={channel.description}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"template\">{t('Template')}</label>\n          <Select\n            id=\"template\"\n            name=\"templateId\"\n            defaultValue={channel.templateId}\n            onChange={handleChange}\n          >\n            <option>{t('Make a selection')}</option>\n            {tmpKeys.map((tmpKey, index) => {\n              return (\n                <option value={tmpKey} key={tmpKey}>\n                  {t(tmpVals[index])}\n                </option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"flex flex-row\">\n          <ActionButton\n            type=\"secondary\"\n            className=\"ml-auto\"\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            {t('Cancel')}\n          </ActionButton>\n          <ActionButton type=\"primary\" className=\"ml-2\" state={saveStatus}>\n            {t('Save')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelEditor;\n","import { BlogPostFile, ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport BlogTeaser from '../../Blog/BlogTeaser/BlogTeaser';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ChannelEditor from '../ChannelEditor/ChannelEditor';\n\nconst ChannelOverview = ({\n  channel,\n  blogs,\n}: {\n  channel: ChannelDefinitionVm | undefined;\n  blogs: BlogPostFile<BlogContentVm>[];\n}) => {\n  const linkRoot = `/owner/blog/${channel ? channel.slug : 'all'}/`;\n  const [isEditActive, setIsEditActive] = useState(false);\n\n  return (\n    <>\n      {channel ? (\n        isEditActive ? (\n          <ChannelEditor\n            key={channel.channelId}\n            channel={channel}\n            onCancel={() => setIsEditActive(false)}\n          />\n        ) : (\n          <section className=\"items-center bg-slate-50 p-3 dark:bg-slate-800 sm:flex sm:flex-row\">\n            <p className=\"sm:mr-2\">{channel.description ? channel.description : channel.name}</p>\n\n            <p className=\"ml-auto\">\n              {t('Template')}:{' '}\n              {parseInt(channel.templateId + '') === ChannelTemplate.LargeCards\n                ? t('LargeCards')\n                : parseInt(channel.templateId + '') === ChannelTemplate.ClassicBlog\n                ? t('ClassicBlog')\n                : t('MasonryLayout')}\n            </p>\n            <ActionButton\n              type=\"secondary\"\n              className=\"sm:ml-2\"\n              onClick={() => setIsEditActive(true)}\n            >\n              {t('Edit Channel')}\n            </ActionButton>\n          </section>\n        )\n      ) : null}\n\n      {blogs.length ? (\n        <div className=\"-mx-5 divide-y-2 divide-gray-100 dark:divide-gray-800\">\n          {blogs.map((blog) => {\n            return <BlogTeaser key={blog.content.itemKey} blog={blog} linkRoot={linkRoot} />;\n          })}\n        </div>\n      ) : (\n        <div className=\"mt-4\">{t('no-data-found')}</div>\n      )}\n    </>\n  );\n};\n\nexport default ChannelOverview;\n","import { FC, ReactNode } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: ReactNode; key: string; path: string; className?: string }[];\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items }) => {\n  return (\n    <div className={`flex ${className}`}>\n      {items.map((item) => {\n        return (\n          // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n          <NavLink\n            className={({ isActive }) =>\n              `flex-grow cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                isActive\n                  ? 'border-indigo-500 text-indigo-500 dark:text-indigo-400'\n                  : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n              } ${item.className ?? ''}`\n            }\n            to={item.path}\n            key={item.key}\n            end\n          >\n            {item.title}\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Submenu;\n","import { Link, useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlogs from '../../../hooks/blogs/useBlogs';\nimport useChannels from '../../../hooks/blogs/useChannels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ChannelCreator from '../../Channel/ChannelCreator/ChannelCreator';\nimport ChannelOverview from '../../Channel/ChannelOverview/ChannelOverview';\nimport Plus from '../../Icons/Plus/Plus';\nimport Quote from '../../Icons/Quote/Quote';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport Submenu from '../../SubMenu/SubMenu';\n\nconst Blog = () => {\n  const { channelKey } = useParams();\n  const [{ data: channels, isLoading: isChannelsLoading }] = useChannels();\n  const activeChannel = channels?.find((channel) => channel.slug === channelKey);\n  const { data: blogs, isLoading: isBlogsLoading } = useBlogs({\n    channelId: activeChannel?.channelId,\n    page: undefined,\n  });\n\n  if (!channels || !blogs || isChannelsLoading || isBlogsLoading) {\n    return <>Loading</>;\n  }\n\n  return (\n    <section>\n      <PageMeta\n        icon={Quote}\n        title={t('Blog')}\n        actions={\n          <Link className=\"contents\" to={`/owner/blog/draft/new`}>\n            <ActionButton type=\"primary\" icon=\"plus\" className=\"ml-auto\">\n              {t('New')}\n            </ActionButton>\n          </Link>\n        }\n      />\n\n      <Submenu\n        items={[\n          {\n            title: t('Drafts'),\n            key: '',\n            path: `/owner/blog`,\n          },\n          ...channels.map((channel) => {\n            return {\n              title: channel.name,\n              key: channel.channelId,\n              path: `/owner/blog/${channel.slug}`,\n            };\n          }),\n          {\n            title: <Plus className=\"h-5 w-5\" />,\n            key: 'new',\n            className: 'flex-grow-0',\n            path: `/owner/blog/new`,\n          },\n        ]}\n      />\n\n      <div className=\"pt-5\">\n        {channelKey === 'new' ? (\n          <ChannelCreator />\n        ) : (\n          <ChannelOverview channel={activeChannel} blogs={blogs} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Blog;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, ChannelDefinition, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n}\n\nconst useChannels = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundChannels = await client.blogDefinitionProvider.getChannelDefinitions();\n\n    return foundChannels.map((channel) => {\n      return {\n        ...channel,\n        slug: convertTextToSlug(channel.name),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return [\n    useQuery(['channels'], () => fetchData(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  ] as const;\n};\n\nexport default useChannels;\n","import { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem) {\n  document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id) {\n  const rootElemRef = useRef(null);\n\n  useEffect(\n    function setupElement() {\n      // Look for existing target dom element to append to\n      const existingParent = document.querySelector(`#${id}`);\n      // Parent is either a new root or the existing dom element\n      const parentElem = existingParent || createRootElement(id);\n\n      // If there is no existing DOM element, add a new one.\n      if (!existingParent) {\n        addRootElement(parentElem);\n      }\n\n      // Add the detached element to the parent\n      parentElem.appendChild(rootElemRef.current);\n\n      return function removeElement() {\n        rootElemRef.current.remove();\n        if (!parentElem.childElementCount) {\n          parentElem.remove();\n        }\n      };\n    },\n    [id]\n  );\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["props","type","className","title","confirmText","isOpen","acl","onConfirm","onCancel","target","usePortal","useState","newAcl","setNewAcl","updateSecurityGroup","e","requiredSecurityGroup","SecurityGroupType","value","dialog","DialogWrapper","onClose","id","name","checked","onChange","htmlFor","ActionButton","onClick","t","createPortal","xmlns","viewBox","fill","d","isEditing","setIsEditing","Icon","Shield","require","mergeStates","stateA","stateB","children","icon","state","size","Check","Exclamation","Arrow","Plus","Trash","colorClasses","sizeClasses","disabled","role","stroke","strokeLinecap","strokeLinejoin","strokeWidth","isOpaqueBg","isBorderLess","page","undefined","channelId","pageSize","useAuth","getSharedSecret","fetchBlogData","client","Client","api","ApiType","sharedSecret","blogPostProvider","getMasterPosts","foundBlogPosts","filteredBlogPosts","filter","post","publishTargets","some","channel","map","item","content","itemKey","slug","caption","convertTextToSlug","useQuery","refetchOnMount","refetchOnWindowFocus","setName","description","setDescription","useChannel","save","saveChannel","mutate","saveStatus","status","navigate","useNavigate","Section","onSubmit","preventDefault","newChannelDef","templateId","onSuccess","Input","required","BlogPublishTags","useChannels","channels","data","length","publishedChannel","find","blog","linkRoot","to","toUpperCase","Date","dateUnixTime","toLocaleDateString","abstract","channelData","setChannelData","handleChange","newChannelData","tmpKeys","Object","keys","ChannelTemplate","f","isNaN","Number","tmpVals","AclEditor","defaultValue","Textarea","Select","tmpKey","index","blogs","isEditActive","setIsEditActive","parseInt","items","isActive","path","end","key","channelKey","useParams","isChannelsLoading","isLoading","activeChannel","useBlogs","isBlogsLoading","PageMeta","Quote","actions","fetchData","blogDefinitionProvider","getChannelDefinitions","foundChannels","rootElemRef","useRef","useEffect","rootElem","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childElementCount"],"sourceRoot":""}