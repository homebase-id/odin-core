{"version":3,"file":"static/js/130.1f438d37.chunk.js","mappings":"4IAuDA,IAlDmB,SAAC,GAMb,IALLA,EAKI,EALJA,UACAC,EAII,EAJJA,MAKA,GAAgCC,EAAAA,EAAAA,UAAe,MAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsBF,EAAAA,EAAAA,UAAe,IAAIG,MAAzC,eAAOC,EAAP,KAAYC,EAAZ,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACM,YAAVP,GACFG,EAAY,IAAIC,KAEnB,GAAE,CAACJ,KAEJO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAO,IAAIF,KACZ,GAAE,KAEH,OAAO,WACLM,aAAaF,EACd,CACF,GAAE,CAACH,IAEU,YAAVL,EACF,OAAO,cAAGD,UAAS,UAAKA,EAAL,YAAZ,uBAGT,GAAc,UAAVC,EACF,OAAO,cAAGD,UAAS,UAAKA,EAAL,YAAZ,kCAGT,IAAKG,EACH,OAAO,KAGT,IAAMS,EAAON,EAAIO,UAAYV,EAASU,UAChCC,EAAOX,EACTS,GA3CU,IA4CR,oBACAA,GA5CQ,IA6CR,oBACAT,EAASY,iBACX,GAEJ,OAAOD,GAAO,eAAGd,UAAS,UAAKA,EAAL,YAAZ,wBAAkDc,KAAY,IAC7E,C,wDCMD,IAvDiB,SAAC,GAYX,IAXLE,EAWI,EAXJA,MACAC,EAUI,EAVJA,QACAC,EASI,EATJA,WACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,KAQA,OACE,oBACEpB,UAAU,sJADZ,UAIE,iBAAKA,UAAU,4BAAf,WACE,iBAAKA,UAAU,WAAf,UACGmB,IACC,eAAInB,UAAU,+BAAd,SACGmB,EAAYE,KAAI,SAACC,EAAOC,GACvB,OACE,eAAgBvB,UAAU,OAA1B,SACGsB,EAAME,MACL,UAAC,KAAD,CAAMC,GAAIH,EAAME,KAAMxB,UAAU,GAAhC,UACGsB,EAAMN,OACP,iBAAMhB,UAAU,OAAhB,SAAwB,UAG1B,iBAAMA,UAAU,iBAAhB,SAAkCsB,EAAMN,SAPnCO,EAWZ,MAGJP,IACC,gBAAIhB,UAAU,8CAAd,UACGoB,GAAQA,EAAK,CAAEpB,UAAW,yBAD7B,IACyDgB,SAI7D,iBAAKhB,UAAU,UAAf,WACE,gBAAKA,UAAU,uEAAf,SACGiB,IAEFC,IAAc,SAAC,IAAD,CAAYlB,UAAU,OAAOC,MAAOiB,WAK5D,C,8ICrCD,EAfoB,WAClB,IAAQQ,GAAoBC,EAAAA,EAAAA,KAApBD,gBACFE,EAAkBC,EAAAA,EAAAA,YAA4BH,KAE9CI,EAAK,yCAAG,mGACQF,EAAgBG,cADxB,8BACuCV,KAAI,SAACW,GAAD,OAAaC,EAAAA,EAAAA,GAAaD,EAA1B,IAD3C,mFAAH,qDAIX,MAAO,CACLF,OAAOI,EAAAA,EAAAA,UAAS,CAAC,YAAaJ,EAAO,CACnCK,sBAAsB,IAG3B,E,2DCcD,EAxBiB,WACf,MAAyDC,IAAcN,MAAzDO,EAAd,EAAQC,KAA2BC,EAAnC,EAAwBC,UAExB,OACE,iCACE,SAACC,EAAA,EAAD,CAAUrB,KAAMsB,EAAAA,EAAa1B,MAAO,aAEnCuB,GACC,wBACU,OAARF,QAAQ,IAARA,GAAAA,EAAUM,QACZ,gBAAK3C,UAAU,+BAAf,SACGqC,EAAShB,KAAI,SAACW,GAAD,OACZ,SAACY,EAAD,CAEEZ,QAASA,EACThC,UAAU,iDAFLgC,EAAQa,GAFH,MAQd,OAGT,EAIKD,EAAc,SAAC,GAMd,IALLZ,EAKI,EALJA,QACAhC,EAII,EAJJA,UAKc8C,GAAaC,EAAAA,EAAAA,IAClB,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASgB,mBAAeC,EACxBC,EAAAA,EAAAA,oBACApB,MAHMQ,KAKR,OACE,gBAAKtC,UAAWA,EAAhB,UACE,SAAC,KAAD,CAAMyB,GAAE,0BAAqBO,EAAQa,IAArC,UACE,iBACE7C,UAAS,8HADX,WAGE,gBAAKA,UAAU,gBAAf,SACG,UAAWgC,GAAWA,EAAQmB,OAC7B,mBAAQnD,UAAW,2BAAnB,UACE,gBACEoD,IAAKpB,EAAQmB,MAAME,IACnBC,MAAOtB,EAAQmB,MAAMI,WACrBC,OAAQxB,EAAQmB,MAAMM,YACtBzD,UAAU,wCAGZgC,EAAQgB,aACV,mBAAQhD,UAAW,2BAAnB,UACE,gBAAKoD,IAAKN,EAAU9C,UAAU,mCAGhC,SAAC0D,EAAA,EAAD,CACEC,SACE3B,EAAQ4B,KAAR,UAAkB5B,EAAQ4B,KAAKC,UAAU,IAAzC,OAA8C7B,EAAQ4B,KAAKE,QAAQ,IAAO,QAKlF,gBAAK9D,UAAU,MAAf,UACE,eAAIA,UAAU,mCAAd,SACGgC,EAAQ4B,KAAR,UAAkB5B,EAAQ4B,KAAKC,UAA/B,YAA4C7B,EAAQ4B,KAAKE,SAAY,aAOnF,C,uBCnFc,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,CACT,C,oGCXA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAU3C,OAAQ0C,IAAK,CACzC,IAAIE,EAAS,MAAQD,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQL,OAAOoB,IAAS,GAAIC,SAAQ,SAAUvB,IACpD,OAAemB,EAAQnB,EAAKsB,EAAOtB,GACrC,IAAKE,OAAOsB,0BAA4BtB,OAAOuB,iBAAiBN,EAAQjB,OAAOsB,0BAA0BF,IAAWf,EAAQL,OAAOoB,IAASC,SAAQ,SAAUvB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBO,EAAQtB,GAC7E,GACF,CAEA,OAAOmB,CACT,C","sources":["components/Buttons/SaveStatus.tsx","components/Layout/PageMeta/PageMeta.tsx","hooks/contacts/useContacts.ts","components/Templates/Contacts/Contacts.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (state === 'loading') {\n    return <p className={`${className} text-sm`}>Saving...</p>;\n  }\n\n  if (state === 'error') {\n    return <p className={`${className} text-sm`}>Something went wrong</p>;\n  }\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n  breadCrumbs,\n  icon,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n  breadCrumbs?: { title: string; href?: string }[];\n  icon?: FC;\n}) => {\n  return (\n    <section\n      className=\"-mx-5 -mt-4 mb-10 border-b-2 border-gray-100 bg-slate-50 py-4 pr-5 pl-10 dark:border-gray-700 dark:bg-slate-800 sm:-mx-10\n    sm:-mt-8 sm:py-8 sm:px-10\"\n    >\n      <div className=\"flex flex-col sm:flex-row\">\n        <div className=\"flex-col\">\n          {breadCrumbs && (\n            <ul className=\"mb-2 hidden flex-row sm:flex\">\n              {breadCrumbs.map((crumb, index) => {\n                return (\n                  <li key={index} className=\"mr-2\">\n                    {crumb.href ? (\n                      <Link to={crumb.href} className=\"\">\n                        {crumb.title}\n                        <span className=\"ml-2\">{'>'}</span>\n                      </Link>\n                    ) : (\n                      <span className=\"text-slate-500\">{crumb.title}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {title && (\n            <h1 className=\"mb-5 flex flex-row text-4xl dark:text-white\">\n              {icon && icon({ className: 'h-8 w-8 my-auto mr-4' })} {title}\n            </h1>\n          )}\n        </div>\n        <div className=\"ml-auto\">\n          <div className=\"-m-2 flex flex-col flex-wrap justify-end sm:flex-row sm:items-center\">\n            {actions}\n          </div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { useQuery } from '@tanstack/react-query';\nimport { ContactProvider } from '../../provider/contact/ContactProvider';\nimport useAuth from '../auth/useAuth';\nimport { parseContact } from '../contact/useContact';\n\nconst useContacts = () => {\n  const { getSharedSecret } = useAuth();\n  const contactProvider = ContactProvider.getInstance(getSharedSecret());\n\n  const fetch = async () => {\n    return await (await contactProvider.getContacts()).map((contact) => parseContact(contact));\n  };\n\n  return {\n    fetch: useQuery(['contacts'], fetch, {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useContacts;\n","import { Link } from 'react-router-dom';\nimport useContacts from '../../../hooks/contacts/useContacts';\nimport useImage from '../../../hooks/media/useImage';\nimport { ContactConfig, ContactFile, RawContact } from '../../../provider/contact/ContactTypes';\nimport FallbackImg from '../../FallbackImg/FallbackImg';\nimport AddressBook from '../../Icons/AddressBook/AddressBook';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\n\nconst Contacts = () => {\n  const { data: contacts, isLoading: isContactsLoading } = useContacts().fetch;\n\n  return (\n    <>\n      <PageMeta icon={AddressBook} title={'Contacts'} />\n\n      {isContactsLoading ? (\n        <></>\n      ) : contacts?.length ? (\n        <div className=\"-m-1 flex flex-row flex-wrap\">\n          {contacts.map((contact) => (\n            <ContactCard\n              key={contact.id}\n              contact={contact}\n              className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n            />\n          ))}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Contacts;\n\nconst ContactCard = ({\n  contact,\n  className,\n}: {\n  contact: ContactFile | RawContact;\n  className: string;\n}) => {\n  const { data: imageUrl } = useImage(\n    contact?.imageFileId || undefined,\n    ContactConfig.ContactTargetDrive\n  ).fetch;\n\n  return (\n    <div className={className}>\n      <Link to={`/owner/contacts/${contact.id}`}>\n        <div\n          className={`h-full rounded-md border border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800`}\n        >\n          <div className=\"aspect-square\">\n            {'image' in contact && contact.image ? (\n              <figure className={'relative overflow-hidden'}>\n                <img\n                  src={contact.image.url}\n                  width={contact.image.pixelWidth}\n                  height={contact.image.pixelHeight}\n                  className=\"aspect-square w-full object-cover\"\n                />\n              </figure>\n            ) : contact.imageFileId ? (\n              <figure className={'relative overflow-hidden'}>\n                <img src={imageUrl} className=\"aspect-square object-cover \" />\n              </figure>\n            ) : (\n              <FallbackImg\n                initials={\n                  contact.name ? `${contact.name.givenName[0]}${contact.name.surname[0]}` : ''\n                }\n              />\n            )}\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">\n              {contact.name ? `${contact.name.givenName} ${contact.name.surname}` : ''}\n            </h2>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","state","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","title","actions","saveStatus","breadCrumbs","icon","map","crumb","index","href","to","getSharedSecret","useAuth","contactProvider","ContactProvider","fetch","getContacts","contact","parseContact","useQuery","refetchOnWindowFocus","useContacts","contacts","data","isContactsLoading","isLoading","PageMeta","AddressBook","length","ContactCard","id","imageUrl","useImage","imageFileId","undefined","ContactConfig","image","src","url","width","pixelWidth","height","pixelHeight","FallbackImg","initials","name","givenName","surname","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}