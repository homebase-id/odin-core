{"version":3,"file":"static/js/998.68afdbd7.chunk.js","mappings":"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","sources":["components/Icons/Check/Check.tsx","components/Icons/Loader/Loader.tsx","components/Icons/Save/Save.tsx","components/Buttons/ActionButton.tsx","components/Buttons/SaveStatus.tsx","components/Icons/Exclamation/Exclamation.tsx","components/Icons/Plus/Plus.tsx","components/Icons/Trash/Trash.tsx","components/Layout/PageMeta/PageMeta.tsx","provider/connections/CircleNetworkRequestProvider.ts","provider/connections/CircleNetworkProvider.ts","hooks/connections/useConnections.ts","components/Templates/Connections/Connections.tsx","helpers/common.ts","webpack://owner-app/./src/components/Icons/Loader/Loader.css?58b5","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Trash from '../Icons/Trash/Trash';\n\ntype ActionButtonProps = {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash';\n  type?: 'primary' | 'secondary' | 'remove';\n  state?: 'loading' | 'success' | 'failed' | 'error' | 'idle';\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'failed' || state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    state === 'failed' || state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-800 dark:text-white'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : 'bg-green-500 hover:bg-green-600 text-white';\n\n  return (\n    <button\n      className={`flex ${\n        children ? 'min-w-[6rem]' : ''\n      } flex-row rounded-md px-3 py-2 text-left text-sm ${colorClasses}  ${\n        state === 'loading' ? 'animate-pulse' : ''\n      } ${className}`}\n      disabled={state === 'loading'}\n      onClick={onClick}\n      title={title}\n    >\n      <span className=\"mr-1\">{children}</span>\n      <Icon className={'my-auto ml-auto h-4 w-4'} />\n    </button>\n  );\n};\n\nexport default ActionButton;\n","import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { ReactNode } from 'react';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        {title && <h1 className=\"mb-5 text-4xl dark:text-white\">{title}</h1>}\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import {\n  AcceptRequestHeader,\n  ConnectionRequest,\n  ConnectionRequestHeader,\n  DotYouIdRequest,\n} from './CirlceDataTypes';\nimport { PagedResult, PagingOptions } from '@youfoundation/transit-lib';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\nimport { stringify } from '../../helpers/common';\n\n//Handles making and reading requests to connect with others\nexport class CircleNetworkRequestProvider extends OwnerProviderBase {\n  private static instance: CircleNetworkRequestProvider;\n\n  private Root = '/circles/requests';\n  private SentPathRoot: string = this.Root + '/sent';\n  private PendingPathRoot: string = this.Root + '/pending';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async getPendingRequests(params: PagingOptions): Promise<PagedResult<ConnectionRequest>> {\n    const client = super.createAxiosClient();\n    const url = this.PendingPathRoot + '/list?' + stringify(params);\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getPendingRequest(dotYouId: string): Promise<ConnectionRequest> {\n    const client = super.createAxiosClient();\n    const url = this.PendingPathRoot + '/single';\n\n    //TODO: encrypt payload with shared secret when server requires it\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          return null;\n        }\n\n        super.handleErrorResponse(err);\n      });\n  }\n\n  async getSentRequests(params: PagingOptions): Promise<PagedResult<ConnectionRequest>> {\n    const client = super.createAxiosClient();\n    const url = this.SentPathRoot + '/list?' + stringify(params);\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getSentRequest(dotYouId: string): Promise<ConnectionRequest> {\n    const client = super.createAxiosClient();\n    const url = this.SentPathRoot + '/single';\n\n    //TODO: encrypt payload with shared secret when server requires it\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          return null;\n        }\n        super.handleErrorResponse(err);\n      });\n  }\n\n  async acceptConnectionRequest(dotYouId: string): Promise<boolean> {\n    const client = super.createAxiosClient();\n    const url = this.PendingPathRoot + '/accept/';\n\n    //todo: build from drives a UI selection of drives\n    // let drive: DriveGrantRequest = {\n    //     drive: {\n    //         alias: \"\",\n    //         type: \"\"\n    //     },\n    //     permission: DrivePermissions.None\n    // }\n\n    const header: AcceptRequestHeader = {\n      sender: dotYouId,\n      drives: [],\n      permissions: null,\n    };\n\n    return client\n      .post(url, header)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async deletePendingRequest(dotYouId: string): Promise<boolean> {\n    const client = super.createAxiosClient();\n    const url = this.PendingPathRoot + '/delete';\n\n    //TODO: encrypt payload with shared secret when server requires it\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async deleteSentRequest(dotYouId: string): Promise<boolean> {\n    const client = super.createAxiosClient();\n    const url = this.SentPathRoot + '/delete';\n    //TODO: encrypt payload with shared secret when server requires it\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async sendRequest(dotYouId: string, message: string): Promise<boolean> {\n    const url = this.Root + '/sendrequest';\n    const header: ConnectionRequestHeader = {\n      recipient: dotYouId,\n      message: message,\n    };\n\n    const client = super.createAxiosClient();\n    return client\n      .post(url, header)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleNetworkRequestProvider {\n    if (!CircleNetworkRequestProvider.instance) {\n      CircleNetworkRequestProvider.instance = new CircleNetworkRequestProvider(sharedSecret);\n    }\n\n    return CircleNetworkRequestProvider.instance;\n  }\n}\n","import { ConnectionInfo, DotYouIdRequest, DotYouProfile } from './CirlceDataTypes';\nimport { PagedResult, PagingOptions } from '@youfoundation/transit-lib';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\nimport { stringify } from '../../helpers/common';\n\n//Handles management of established connections\nexport class CircleNetworkProvider extends OwnerProviderBase {\n  private static instance: CircleNetworkProvider;\n  private root = '/circles/connections';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async blockDotYouId(dotYouId: string): Promise<boolean> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/block';\n\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async disconnectFromContact(dotYouId: string): Promise<boolean> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/disconnect';\n\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getConnections(data: PagingOptions): Promise<PagedResult<DotYouProfile>> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/connected?' + stringify(data);\n    return client\n      .post(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getBlockedConnections(params: PagingOptions): Promise<PagedResult<DotYouProfile>> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/blocked?' + stringify(params);\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  getConnectionInfo(dotYouId: string): Promise<ConnectionInfo> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/status';\n\n    const data: DotYouIdRequest = { dotYouId: dotYouId };\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n  public static getInstance(sharedSecret): CircleNetworkProvider {\n    if (!CircleNetworkProvider.instance) {\n      CircleNetworkProvider.instance = new CircleNetworkProvider(sharedSecret);\n    }\n\n    return CircleNetworkProvider.instance;\n  }\n}\n","import { useMutation, useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async () => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  const fetchConnections = async () => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  const sentConnectionRequest = async ({\n    targetDotYouId,\n    message,\n  }: {\n    targetDotYouId: string;\n    message: string;\n  }) => {\n    return await circleNetworkRequestProvider.sendRequest(targetDotYouId, message);\n  };\n\n  return {\n    fetchPending: useQuery(['pendingConnections'], () => fetchPendingConnections(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n    fetchActive: useQuery(['activeConnections'], () => fetchConnections(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n    sendConnectionRequest: useMutation(sentConnectionRequest, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useConnections;\n","// import {\n//   ApiType,\n//   AttributeDefinitions,\n//   BuiltInProfiles,\n//   Client,\n// }\n// from '@youfoundation/transit-lib';\n\nimport useAuth from '../../../hooks/auth/useAuth';\nimport { CircleNetworkRequestProvider } from '../../../provider/connections/CircleNetworkRequestProvider';\nimport { CircleNetworkProvider } from '../../../provider/connections/CircleNetworkProvider';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport { ReactNode } from 'react';\nimport ActionButton from '../../Buttons/ActionButton';\n\nconst Connections = () => {\n  const {\n    fetchPending: { data: pendingConnections, isLoading: pendingConnectionsLoading },\n    fetchActive: { data: activeConnections, isLoading: activeConnectionsLoading },\n    sendConnectionRequest: { mutate: sendConnectionRequest, status: sendConnectionRequestStatus },\n  } = useConnections();\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          title={'Connections'}\n          actions={\n            <>\n              <ActionButton\n                onClick={() => {\n                  const data = { targetDotYouId: 'samwise.digital', message: 'hello' };\n                  console.log(data);\n                  sendConnectionRequest(data);\n                }}\n                state={sendConnectionRequestStatus}\n              >\n                Send request to sam (Hardcoded)\n              </ActionButton>\n            </>\n          }\n        />\n\n        {!pendingConnectionsLoading && pendingConnections?.length ? (\n          <section className=\"border-b-[1px] border-b-slate-200 py-10\">\n            <h2 className=\"mb-5 text-xl\">Connection requests</h2>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {pendingConnections?.map((pendingConnection) => (\n                <PersonRequest\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  title={pendingConnection.senderDotYouId}\n                  key={pendingConnection.senderDotYouId}\n                />\n              ))}\n            </div>\n          </section>\n        ) : null}\n\n        {!activeConnectionsLoading && activeConnections?.length ? (\n          <section className=\"border-b-[1px] border-b-slate-200 py-10\">\n            <h2 className=\"mb-5 text-xl\">Active Connections</h2>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {activeConnections?.map((activeConnection) => (\n                <PersonCurrent\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  title={activeConnection.dotYouId}\n                />\n              ))}\n            </div>\n          </section>\n        ) : null}\n\n        <hr className=\"my-10\" />\n        <h2 className=\"mb-5\">POC:</h2>\n        <ConnectionsPoc />\n      </section>\n    </>\n  );\n};\n\nconst ConnectionsPoc = () => {\n  const { getSharedSecret } = useAuth();\n\n  const sendConnectionRequests = async () => {\n    // if frodo - send requests to sam (and others in the future)\n\n    const isLocalDemo = window.location.hostname.toLowerCase().endsWith('.digital');\n    const isFrodo =\n      window.location.hostname == 'frodo.digital' || window.location.hostname == 'frodobaggins.me';\n    const isSam =\n      window.location.hostname == 'samwise.digital' ||\n      window.location.hostname == 'samwisegamgee.me';\n\n    let intendedRecipient = '';\n\n    if (isLocalDemo) {\n      intendedRecipient = isFrodo ? 'samwise.digital' : 'frodo.digital';\n    } else {\n      intendedRecipient = isFrodo ? 'samwisegamgee.me' : 'frodobaggins.me';\n    }\n\n    console.log('intended recipient:', intendedRecipient);\n\n    //accept all incoming requests\n    const requestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n    const circleProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n    const connectionInfo = await circleProvider.getConnectionInfo(intendedRecipient);\n    console.log('connection status', connectionInfo?.status ?? 'None');\n\n    if (connectionInfo == null || connectionInfo.status != 'Connected') {\n      const pendingRequest = await requestProvider.getPendingRequest(intendedRecipient);\n      console.log('has pending request', pendingRequest != null);\n\n      if (pendingRequest) {\n        console.log('accepting the pending request');\n\n        //TODO: need to specify the chat drive?\n        await requestProvider.acceptConnectionRequest(intendedRecipient);\n        //validate we're connected\n        const isConnectedInfo = await circleProvider.getConnectionInfo(intendedRecipient);\n\n        console.log('connection status', connectionInfo?.status ?? 'None');\n\n        if (isConnectedInfo == null) {\n          throw 'Failed to connect to ' + intendedRecipient;\n        }\n      } else {\n        const sentRequest = await requestProvider.getSentRequest(intendedRecipient);\n        if (null == sentRequest) {\n          console.log('sending a new request');\n          await requestProvider.sendRequest(intendedRecipient, 'Demo data setup');\n\n          //TODO: render this in the screen so the user can just click thru\n          alert(\n            `Connection request was sent to ${intendedRecipient}.  You must go to https://${intendedRecipient} and approve their connection`\n          );\n        } else {\n          alert(\n            `There is a pending connection request to ${intendedRecipient} from you.  You must go to https://${intendedRecipient} and approve their connection`\n          );\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"flex flex-wrap\">\n        <button\n          onClick={sendConnectionRequests}\n          className=\"block w-1/3 rounded border-0 bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:outline-none\"\n        >\n          Send connection request\n        </button>\n      </div>\n    </div>\n  );\n};\n\n//\n// const Connections = () => {\n//   return (\n//     <div>\n//       <h1 className=\"text-4xl\">Connections</h1>\n//\n//       <section className=\"border-b-[1px] border-b-slate-200 py-10\">\n//         <h2 className=\"mb-5 text-xl\">Connection requests</h2>\n//         <div className=\"-m-1 flex flex-row flex-wrap\">\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonRequest className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//         </div>\n//       </section>\n//\n//       <section className=\"border-b-[1px] border-b-slate-200 py-10\">\n//         <h2 className=\"mb-5 text-xl\">Your connections</h2>\n//         <div className=\"-m-1 flex flex-row flex-wrap\">\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//           <PersonCurrent className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n//         </div>\n//       </section>\n//     </div>\n//   );\n// };\n//\nconst PersonRequest = ({ title, className }: { title: string; className: string }) => {\n  return (\n    <PersonCard className={className} title={title}>\n      <ActionButton type=\"primary\" className=\"mb-2 w-full\">\n        Confirm\n      </ActionButton>\n      <ActionButton type=\"secondary\" className=\"mb-2 w-full\">\n        Ignore\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nconst PersonCurrent = ({ title, className }: { title: string; className: string }) => {\n  return (\n    <PersonCard className={className} title={title}>\n      <ActionButton type=\"secondary\" className=\"w-full\">\n        Remove\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nconst PersonCard = ({\n  title,\n  className,\n  children,\n}: {\n  title: string;\n  className: string;\n  children: ReactNode;\n}) => {\n  return (\n    <div className={className}>\n      <div\n        className={`h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800`}\n      >\n        <div className=\"aspect-square\">\n          <img src=\"https://placehold.co/200\" className=\"h-full w-full\" />\n        </div>\n        <div className=\"p-2\">\n          <h2 className=\"font-thiner mb-6 dark:text-white\">{title}</h2>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Connections;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n\nexport const stringify = (obj: unknown) => {\n  return Object.keys(obj)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","require","xmlns","children","onClick","icon","type","state","title","Icon","props","Exclamation","Arrow","Plus","Trash","colorClasses","disabled","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","actions","saveStatus","CircleNetworkRequestProvider","sharedSecret","Root","SentPathRoot","PendingPathRoot","params","client","url","this","stringify","get","then","response","data","catch","dotYouId","post","err","status","header","sender","drives","permissions","message","recipient","instance","OwnerProviderBase","CircleNetworkProvider","root","getSharedSecret","useAuth","circleNetworkRequestProvider","getInstance","circleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","pageSize","results","fetchConnections","getConnections","sentConnectionRequest","targetDotYouId","sendRequest","fetchPending","useQuery","refetchOnMount","refetchOnWindowFocus","fetchActive","sendConnectionRequest","useMutation","onError","ex","console","error","ConnectionsPoc","sendConnectionRequests","isLocalDemo","window","location","hostname","toLowerCase","endsWith","isFrodo","intendedRecipient","log","requestProvider","circleProvider","getConnectionInfo","connectionInfo","getPendingRequest","pendingRequest","acceptConnectionRequest","isConnectedInfo","getSentRequest","alert","PersonRequest","PersonCard","ActionButton","PersonCurrent","src","useConnections","pendingConnections","pendingConnectionsLoading","isLoading","activeConnections","activeConnectionsLoading","mutate","sendConnectionRequestStatus","PageMeta","length","map","pendingConnection","senderDotYouId","activeConnection","convertTextToSlug","split","join","obj","Object","keys","key","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}