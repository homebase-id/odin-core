{"version":3,"file":"static/js/826.ed8289f8.chunk.js","mappings":"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","sources":["components/Connection/PersonCard/PersonCard.tsx","components/Dialog/CircleDialog/CircleDialog.tsx","components/Form/PermissionFlagsEditor.tsx","components/Form/PermissionLevelEditor.tsx","components/Icons/Triangle/Triangle.tsx","components/PermissionViews/DrivePermissionView/DrivePermissionView.tsx","hooks/circle/useCircle.ts","components/Dialog/MemberLookupDialog/MemberLookupDialog.tsx","components/Templates/CircleDetails/CircleDetails.tsx","components/Templates/DemoData/helpers.ts","hooks/connections/useConnections.ts","hooks/drive/useDrive.ts","hooks/drives/useDrives.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PersonCard = ({\n  name,\n  href,\n  className,\n  children,\n  onClick,\n}: {\n  name: string;\n  href?: string;\n  className: string;\n  children: ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}) => {\n  const Wrapper = ({ children }) => (href ? <Link to={href}>{children}</Link> : <>{children}</>);\n\n  return (\n    <div className={className}>\n      <Wrapper>\n        <div\n          className={`h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800`}\n          onClick={onClick}\n        >\n          <div className=\"aspect-square\">\n            <img src=\"https://placehold.co/200\" className=\"h-full w-full\" />\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">{name}</h2>\n            {children}\n          </div>\n        </div>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useDrives from '../../../hooks/drives/useDrives';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport { CircleDefinition } from '../../../provider/connections/CirlceDataTypes';\nimport {\n  circlePermissionLevels,\n  drivePermissionLevels,\n} from '../../../provider/permission/permissionLevels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport PermissionFlagsEditor from '../../Form/PermissionFlagsEditor';\nimport PermissionLevelEditor from '../../Form/PermissionLevelEditor';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst CircleDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: CircleDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutate: createOrUpdate, status: createOrUpdateStatus } = useCircles().createOrUpdate;\n  const { data: drives } = useDrives().fetch;\n\n  const [newCircleDefinition, setNewCircleDefinition] = useState<CircleDefinition>({\n    drives: defaultValue.drivesGrants || [],\n    ...defaultValue,\n    drivesGrants: undefined,\n  });\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const reset = () => {\n    setNewCircleDefinition({\n      drives: defaultValue.drivesGrants || [],\n      ...defaultValue,\n      drivesGrants: undefined,\n    });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel} size=\"4xlarge\">\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            createOrUpdate(\n              { circleDefinition: newCircleDefinition },\n              {\n                onSuccess: () => {\n                  onConfirm();\n                  // Set timeout to give parent component time to update defaultValue\n                  setTimeout(() => {\n                    reset();\n                  }, 10);\n                },\n              }\n            );\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Name')}</label>\n            <Input\n              id=\"name\"\n              name=\"circleName\"\n              defaultValue={newCircleDefinition.name}\n              onChange={(e) => {\n                setNewCircleDefinition({ ...newCircleDefinition, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Description')}</label>\n            <Textarea\n              id=\"description\"\n              name=\"circleDescription\"\n              defaultValue={newCircleDefinition.description}\n              onChange={(e) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  description: e.target.value,\n                });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"mb-5 flex flex-row\">\n            <label htmlFor=\"name\" className=\"my-auto mr-2\">\n              {t('Permissions')}\n            </label>\n            <PermissionFlagsEditor\n              className=\"ml-auto\"\n              permissionLevels={circlePermissionLevels}\n              defaultValue={newCircleDefinition.permissions.keys ?? [0]}\n              onChange={(newValue) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  permissions: { keys: newValue },\n                });\n              }}\n            />\n          </div>\n\n          {drives?.length ? (\n            <div className=\"my-7\">\n              <h2 className=\"mb-4 text-lg\">Drive Permissions:</h2>\n\n              {drives.map((drive, index) => {\n                return (\n                  <div key={index} className=\"mb-2 flex flex-row\">\n                    <label\n                      htmlFor={`${drive.targetDriveInfo.alias}-${drive.targetDriveInfo.type}`}\n                      className=\"my-auto mr-2\"\n                    >\n                      {drive.name}\n                    </label>\n                    <PermissionLevelEditor\n                      className=\"ml-auto\"\n                      permissionLevels={drivePermissionLevels}\n                      defaultValue={\n                        newCircleDefinition.drives?.find(\n                          (driveGrant) =>\n                            driveGrant.drive.alias === drive.targetDriveInfo.alias &&\n                            driveGrant.drive.type === drive.targetDriveInfo.type\n                        )?.permission ?? 0\n                      }\n                      onChange={(value) => {\n                        if (value > 0) {\n                          setNewCircleDefinition({\n                            ...newCircleDefinition,\n                            drives: [\n                              ...newCircleDefinition.drives.filter(\n                                (driveGrant) =>\n                                  driveGrant.drive.alias !== drive.targetDriveInfo.alias ||\n                                  driveGrant.drive.type !== drive.targetDriveInfo.type\n                              ),\n                              { drive: drive.targetDriveInfo, permission: value },\n                            ],\n                          });\n                        } else {\n                          setNewCircleDefinition({\n                            ...newCircleDefinition,\n                            drives: [\n                              ...newCircleDefinition.drives.filter(\n                                (driveGrant) =>\n                                  driveGrant.drive.alias !== drive.targetDriveInfo.alias ||\n                                  driveGrant.drive.type !== drive.targetDriveInfo.type\n                              ),\n                            ],\n                          });\n                        }\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n\n          <div className=\"-mx-2 py-3 sm:flex sm:flex-row-reverse\">\n            <ActionButton className=\"mx-2\" state={createOrUpdateStatus} icon={'send'}>\n              {confirmText || t('Add Circle')}\n            </ActionButton>\n            <ActionButton\n              className=\"mx-2\"\n              type=\"secondary\"\n              onClick={() => {\n                reset();\n                onCancel();\n              }}\n            >\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default CircleDialog;\n","import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../Icons/Check/Check';\nimport Triangle from '../Icons/Triangle/Triangle';\n\nconst PermissionFlagsEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number[]) => void;\n  defaultValue: number[];\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue =\n    defaultValue?.length >= 2\n      ? 'Multiple'\n      : (defaultValue?.[0]\n          ? permissionLevels.find((level) => level.value === defaultValue[0])?.name\n          : permissionLevels[0].name) ?? permissionLevels[0].name;\n\n  const setValue = (value: number[]) => {\n    setInnerValue(value);\n    onChange && onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={\n                value.some((val) => val === level.value) ||\n                (value.length === 0 && level.value === 0)\n              }\n              onChange={() =>\n                value.some((val) => val === level.value)\n                  ? setValue(value.filter((val) => val !== level.value))\n                  : level.value !== 0\n                  ? setValue([...value, level.value])\n                  : setValue([])\n              }\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[6rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionFlagsEditor;\n","import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../Icons/Check/Check';\nimport Triangle from '../Icons/Triangle/Triangle';\n\nconst PermissionLevelEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number) => void;\n  defaultValue: number;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue = permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= defaultValue) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n\n  const setValue = (value: number) => {\n    setInnerValue(value);\n    onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue.name}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={level.value === 0 ? value === level.value : value >= level.value}\n              onChange={() => (value !== level.value ? setValue(level.value) : setValue(0))}\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[6rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionLevelEditor;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { Link } from 'react-router-dom';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport { DriveGrant } from '../../../provider/connections/CirlceDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport { getAccessFromPermissionNumber } from '../../Templates/DemoData/helpers';\n\nconst DrivePermissionView = ({\n  driveGrant,\n  permissionTree,\n  className,\n}: {\n  driveGrant: DriveGrant;\n  permissionTree?: string;\n  className?: string;\n}) => {\n  const { data: drive } = useDrive({ targetDrive: driveGrant.drive }).fetch;\n\n  return (\n    <div\n      key={`${driveGrant?.drive?.alias}-${driveGrant?.drive?.type}`}\n      className={`flex flex-row ${className}`}\n      title={permissionTree}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`leading-none ${!permissionTree ? 'my-auto' : ''}`}>\n            {drive?.name}:{' '}\n            {getAccessFromPermissionNumber(driveGrant?.permission, drivePermissionLevels).name}\n          </p>\n          {permissionTree && <small className=\"\">{permissionTree}</small>}\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default DrivePermissionView;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { CircleMembershipProvider } from '../../provider/connections/CircleMembershipProvider';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircle = ({ circleId }: { circleId: string }) => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n  const circleMembershipProvider = CircleMembershipProvider.getInstance(getSharedSecret());\n\n  const fetch = async ({ circleId }: { circleId: string }) => {\n    return await circleProvider.getCircle(circleId);\n  };\n\n  const fetchMembers = async ({ circleId }: { circleId: string }) => {\n    return await circleMembershipProvider.fetchMembers(circleId);\n  };\n\n  const provideGrants = async ({ dotYouIds }: { dotYouIds: string[] }) => {\n    return await Promise.all(\n      dotYouIds.map(\n        async (dotYouId) =>\n          await circleMembershipProvider.add({ circleId: circleId, dotYouId: dotYouId })\n      )\n    );\n  };\n\n  const revokeGrants = async ({ dotYouIds }: { dotYouIds: string[] }) => {\n    return await Promise.all(\n      dotYouIds.map(\n        async (dotYouId) =>\n          await circleMembershipProvider.remove({ circleId: circleId, dotYouId: dotYouId })\n      )\n    );\n  };\n\n  const provideGrant = async ({ dotYouId }: { dotYouId: string }) => {\n    return await circleMembershipProvider.add({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  const revokeGrant = async ({ dotYouId }: { dotYouId: string }) => {\n    return await circleMembershipProvider.remove({ circleId: circleId, dotYouId: dotYouId });\n  };\n\n  const removeCircle = async ({ circleId }: { circleId: string }) => {\n    return await circleProvider.removeCircle(circleId);\n  };\n\n  return {\n    fetch: useQuery(['circle', circleId], () => fetch({ circleId }), {\n      refetchOnWindowFocus: false,\n    }),\n\n    fetchMembers: useQuery(['cirleMembers', circleId], () => fetchMembers({ circleId }), {\n      refetchOnWindowFocus: false,\n    }),\n\n    provideGrants: useMutation(provideGrants, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        await Promise.all(\n          param.dotYouIds.map(async (dotYouId) => {\n            return await queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n          })\n        );\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    revokeGrants: useMutation(revokeGrants, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        await Promise.all(\n          param.dotYouIds.map(async (dotYouId) => {\n            return await queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n          })\n        );\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    provideGrant: useMutation(provideGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    revokeGrant: useMutation(revokeGrant, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', circleId]);\n        queryClient.invalidateQueries(['cirleMembers', circleId]);\n        queryClient.invalidateQueries(['connectionInfo', param.dotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    removeCircle: useMutation(removeCircle, {\n      onSuccess: async (data, param) => {\n        queryClient.invalidateQueries(['circles']);\n        queryClient.invalidateQueries(['circle', param.circleId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useCircle;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton, { ActionButtonState } from '../../Buttons/ActionButton';\nimport PersonCard from '../../Connection/PersonCard/PersonCard';\nimport Checkbox from '../../Form/Checkbox';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst MemberLookupDialog = ({\n  title,\n  confirmText,\n\n  isOpen,\n  defaultMembers,\n  confirmationStatus,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultMembers: string[];\n  confirmationStatus: ActionButtonState;\n\n  onConfirm: (toProvide: string[], toRevoke: string[]) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { data: members, isLoading: membersLoading } = useConnections().fetchActive;\n\n  const [toProvideMembers, setToProviderMembers] = useState<string[]>([]);\n  const [toRevokeMembers, setToRevokeMembers] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const toggleMember = (checked: boolean, dotYouId: string) => {\n    if (checked) {\n      // If member wasn't there, add to provide\n      if (!defaultMembers.some((defaultMember) => defaultMember === dotYouId)) {\n        setToProviderMembers([...toProvideMembers, dotYouId]);\n      }\n      setToRevokeMembers(toRevokeMembers.filter((defaultMember) => defaultMember !== dotYouId));\n    } else {\n      // If member was there, add to revoke\n      if (defaultMembers.some((defaultMember) => defaultMember === dotYouId)) {\n        setToRevokeMembers([...toRevokeMembers, dotYouId]);\n      }\n      setToProviderMembers(toProvideMembers.filter((defaultMember) => defaultMember !== dotYouId));\n    }\n  };\n\n  const dialog = (\n    <DialogWrapper size=\"4xlarge\" onClose={onCancel} title={title}>\n      <>\n        <div>\n          {members?.length && !membersLoading ? (\n            members.map((member) => (\n              <PersonCard\n                key={member.dotYouId}\n                name={\n                  member.givenName && member.surName\n                    ? `${member.givenName} ${member.surName}`\n                    : member.dotYouId\n                }\n                className=\"relative w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                onClick={() => {\n                  const isInDefault = defaultMembers.some(\n                    (defaultMember) => defaultMember === member.dotYouId\n                  );\n                  const isRevoked = toRevokeMembers.some(\n                    (defaultMember) => defaultMember === member.dotYouId\n                  );\n                  const isProvided = toProvideMembers.some(\n                    (defaultMember) => defaultMember === member.dotYouId\n                  );\n\n                  const currentState = isInDefault ? !isRevoked : isProvided;\n                  toggleMember(!currentState, member.dotYouId);\n                }}\n              >\n                <Checkbox\n                  className=\"absolute top-4 left-4\"\n                  onChange={(e) => {\n                    toggleMember(e.target.checked, member.dotYouId);\n                  }}\n                  defaultChecked={\n                    (defaultMembers.some((selectedMember) => selectedMember === member.dotYouId) &&\n                      !toRevokeMembers.some(\n                        (revokedMember) => revokedMember === member.dotYouId\n                      )) ||\n                    toProvideMembers.some((providedMember) => providedMember === member.dotYouId)\n                  }\n                />\n              </PersonCard>\n            ))\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className=\"-mx-2 py-3 sm:flex sm:flex-row-reverse\">\n          <ActionButton\n            className=\"mx-2\"\n            icon={'send'}\n            state={confirmationStatus}\n            onClick={() => {\n              onConfirm(toProvideMembers, toRevokeMembers);\n            }}\n          >\n            {confirmText || t('Update Circle')}\n          </ActionButton>\n          <ActionButton className=\"mx-2\" type=\"secondary\" onClick={onCancel}>\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default MemberLookupDialog;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circle/useCircle';\nimport ActionButton, { mergeStates } from '../../Buttons/ActionButton';\nimport PersonCard from '../../Connection/PersonCard/PersonCard';\nimport CircleDialog from '../../Dialog/CircleDialog/CircleDialog';\nimport MemberLookupDialog from '../../Dialog/MemberLookupDialog/MemberLookupDialog';\nimport Circles from '../../Icons/Circles/Circles';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport DrivePermissionView from '../../PermissionViews/DrivePermissionView/DrivePermissionView';\nimport Section from '../../Sections/Section';\n\nconst CircleDetails = () => {\n  const { circleKey } = useParams();\n  const decodedCircleKey = decodeURIComponent(circleKey);\n  const {\n    fetch: { data: circle, isLoading: circleLoading },\n    fetchMembers: { data: members, isLoading: membersLoading },\n    provideGrants: { mutateAsync: addMembers, status: addMemberStatus },\n    revokeGrants: { mutateAsync: removeMembers, status: removeMemberStatus },\n    removeCircle: { mutateAsync: removeCircle, status: removeCircleStatus },\n  } = useCircle({ circleId: decodedCircleKey });\n  const [isOpenMemberLookup, setIsOpenMemberLookup] = useState(false);\n\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n\n  if (circleLoading) {\n    <>Loading</>;\n  }\n\n  if (!circle) {\n    return <>No matching circle found</>;\n  }\n\n  return (\n    <>\n      <PageMeta\n        icon={Circles}\n        title={`${circle.name}`}\n        actions={\n          <>\n            {' '}\n            <ActionButton\n              type=\"remove\"\n              icon=\"trash\"\n              className=\"my-auto ml-auto\"\n              state={removeCircleStatus}\n              onClick={() => {\n                removeCircle({ circleId: circle.id });\n              }}\n              confirmOptions={{\n                title: `${t('Remove Circle')} ${circle.name}`,\n                buttonText: t('Remove'),\n                body: t(\n                  'Are you sure you want to remove this cirlce, all members will lose their access provided by the permissions of this circle?'\n                ),\n              }}\n            >\n              Delete\n            </ActionButton>\n            <ActionButton\n              type=\"primary\"\n              className=\"my-auto ml-2\"\n              onClick={() => {\n                setIsOpenMemberLookup(true);\n              }}\n            >\n              Edit Members\n            </ActionButton>\n            <ActionButton\n              type=\"primary\"\n              icon=\"edit\"\n              className=\"my-auto ml-2\"\n              onClick={() => {\n                setIsOpenEdit(true);\n              }}\n            >\n              Edit Circle\n            </ActionButton>\n          </>\n        }\n        breadCrumbs={[\n          { href: '/owner/circles', title: 'My Circles' },\n          { title: circle.name ?? '' },\n        ]}\n      />\n      <section>{circle.description}</section>\n\n      <Section title={t('Access on the following drives')} isOpaqueBg={true}>\n        {circle.drivesGrants?.length ? (\n          <>\n            {circle.drivesGrants.map((grant) => {\n              return (\n                <DrivePermissionView\n                  key={`${grant.drive.alias}-${grant.drive.type}`}\n                  driveGrant={grant}\n                  className=\"mb-6\"\n                />\n              );\n            })}\n          </>\n        ) : (\n          <div className=\"flex flex-row\">\n            <p className=\"my-auto\">{t(\"This circle doesn't have any access\")}</p>\n          </div>\n        )}\n      </Section>\n\n      <Section isOpaqueBg={true} isBorderLess={true} title={t('Members')}>\n        {members?.length && !membersLoading ? (\n          <div className=\"-m-1 flex flex-row flex-wrap\">\n            {members.map((member) => (\n              <CircleMemberCard\n                key={member}\n                circleId={decodedCircleKey}\n                dotYouId={member}\n                className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"flex flex-row\">\n            <p className=\"my-auto\">\n              {t('Mmh, this looks like an emtpy circle... Time to add some connections?')}{' '}\n            </p>\n            <ActionButton\n              onClick={(e) => {\n                e.preventDefault();\n                setIsOpenMemberLookup(true);\n\n                return false;\n              }}\n              type=\"secondary\"\n              className=\"ml-2\"\n            >\n              {t('Add')}\n            </ActionButton>\n          </div>\n        )}\n      </Section>\n\n      <CircleDialog\n        title={`${t('Edit')}: ${circle.name}`}\n        isOpen={isOpenEdit}\n        confirmText={t('Update Circle')}\n        defaultValue={circle}\n        onCancel={() => {\n          setIsOpenEdit(false);\n        }}\n        onConfirm={() => {\n          setIsOpenEdit(false);\n        }}\n      />\n      <MemberLookupDialog\n        isOpen={isOpenMemberLookup}\n        title={`${t('Add Members to')} ${circle.name}`}\n        defaultMembers={members}\n        onCancel={() => {\n          setIsOpenMemberLookup(false);\n        }}\n        confirmationStatus={mergeStates(addMemberStatus, removeMemberStatus)}\n        onConfirm={async (toProvideMembers, toRevokeMembers) => {\n          await addMembers({ dotYouIds: toProvideMembers });\n          await removeMembers({ dotYouIds: toRevokeMembers });\n\n          setIsOpenMemberLookup(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst CircleMemberCard = ({\n  circleId,\n  dotYouId,\n  className,\n}: {\n  circleId;\n  dotYouId: string;\n  className: string;\n}) => {\n  const { mutate: revokeGrants, status: revokeGrantsStatus } = useCircle({\n    circleId: circleId,\n  }).revokeGrants;\n\n  return (\n    <PersonCard\n      className={className}\n      name={dotYouId}\n      href={(dotYouId && `/owner/connections/${dotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          revokeGrants({ dotYouIds: [dotYouId] });\n        }}\n        state={revokeGrantsStatus}\n      >\n        Remove from circle\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default CircleDetails;\n","export const rando = (arr: string[]) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const getRandomAbstract = () => {\n  const sentences = [\n    'Ut bibendum, neque ac lacinia aliquam, justo ipsum aliquam urna, id vestibulum augue mauris sit amet lacus.',\n    'Proin ante sapien, interdum sit amet eros sit amet, eleifend pharetra metus.',\n    'Sed elit mi, euismod eget neque at, suscipit aliquam nisi.',\n    'Nunc diam arcu, tincidunt quis dignissim ac, volutpat non odio.',\n  ];\n\n  return rando(sentences);\n};\n\nexport const getFunName = () => {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)} ${rando(adjectives)} ${rando(nouns)}`;\n};\n\nexport const base64ToArrayBuffer = (base64: string) => {\n  const binary_string = window.atob(base64);\n  const len = binary_string.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nexport const arrayBufferToBase64 = (buffer: Iterable<number>) => {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n};\n\nexport const getAccessFromPermissionNumber = (\n  value: number,\n  permissionLevels: { name: string; value: number }[]\n) => {\n  return permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= value) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n};\n\nexport const moveElementInArray = (arr: Array<unknown>, fromIndex: number, toIndex: number) => {\n  const element = arr[fromIndex];\n  arr.splice(fromIndex, 1);\n  arr.splice(toIndex, 0, element);\n\n  return arr;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async () => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchSentRequests = async () => {\n    return await (\n      await circleNetworkRequestProvider.getSentRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchConnections = async () => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  return {\n    fetchPending: useQuery(['pendingConnections'], () => fetchPendingConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchSent: useQuery(['sentRequests'], () => fetchSentRequests(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchActive: useQuery(['activeConnections'], () => fetchConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient, TargetDrive } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrive = ({ targetDrive }: { targetDrive: TargetDrive }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetch = async (targetDrive: TargetDrive) => {\n    const allDrives = await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n\n    return allDrives.find(\n      (drive) =>\n        drive.targetDriveInfo.alias === targetDrive.alias &&\n        drive.targetDriveInfo.type === targetDrive.type\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['drive', `${targetDrive.alias}_${targetDrive.type}`],\n      () => fetch(targetDrive),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useDrive;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    return await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['drives'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useDrives;\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["name","href","className","children","onClick","Wrapper","to","src","title","confirmText","isOpen","defaultValue","onConfirm","onCancel","target","usePortal","useCircles","createOrUpdate","mutate","createOrUpdateStatus","status","drives","useDrives","fetch","data","useState","drivesGrants","undefined","newCircleDefinition","setNewCircleDefinition","reset","dialog","onClose","size","onSubmit","e","preventDefault","circleDefinition","onSuccess","setTimeout","htmlFor","t","id","onChange","value","required","description","permissionLevels","circlePermissionLevels","permissions","keys","newValue","length","map","drive","index","targetDriveInfo","alias","type","drivePermissionLevels","find","driveGrant","permission","filter","state","icon","createPortal","Option","isChecked","setIsOpen","setInnerValue","wrapperRef","useRef","useOutsideTrigger","currentValue","level","setValue","ref","some","val","reduce","prevValue","currValue","xmlns","viewBox","fill","d","permissionTree","useDrive","targetDrive","getAccessFromPermissionNumber","circleId","queryClient","useQueryClient","getSharedSecret","useAuth","circleProvider","CircleProvider","circleMembershipProvider","CircleMembershipProvider","getCircle","fetchMembers","provideGrants","dotYouIds","Promise","all","dotYouId","add","revokeGrants","remove","provideGrant","revokeGrant","removeCircle","useQuery","refetchOnWindowFocus","useMutation","param","invalidateQueries","onError","ex","console","error","defaultMembers","confirmationStatus","useConnections","fetchActive","members","membersLoading","isLoading","toProvideMembers","setToProviderMembers","toRevokeMembers","setToRevokeMembers","toggleMember","checked","defaultMember","DialogWrapper","member","PersonCard","givenName","surName","isInDefault","isRevoked","isProvided","Checkbox","defaultChecked","selectedMember","revokedMember","providedMember","ActionButton","CircleMemberCard","useCircle","revokeGrantsStatus","circleKey","useParams","decodedCircleKey","decodeURIComponent","circle","circleLoading","addMembers","mutateAsync","addMemberStatus","removeMembers","removeMemberStatus","removeCircleStatus","isOpenMemberLookup","setIsOpenMemberLookup","isOpenEdit","setIsOpenEdit","PageMeta","Circles","actions","confirmOptions","buttonText","body","breadCrumbs","Section","isOpaqueBg","grant","DrivePermissionView","isBorderLess","CircleDialog","mergeStates","rando","arr","Math","floor","random","getRandomAbstract","getFunName","adjectives","base64ToArrayBuffer","base64","binary_string","window","atob","len","bytes","Uint8Array","i","charCodeAt","buffer","moveElementInArray","fromIndex","toIndex","element","splice","circleNetworkRequestProvider","CircleNetworkRequestProvider","circleNetworkProvider","CircleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","pageSize","results","fetchSentRequests","getSentRequests","fetchConnections","getConnections","fetchPending","fetchSent","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","allDrives","fetchAll"],"sourceRoot":""}