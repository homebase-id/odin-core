{"version":3,"file":"static/js/517.ad317dc5.chunk.js","mappings":"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","sources":["components/Form/Radio.tsx","components/Dialog/AclDialog/AclDialog.tsx","components/Icons/Anonymous/Anonymous.tsx","components/Icons/ConnectedPeople/ConnectedPeople.tsx","components/Icons/Globe/Globe.tsx","components/AclEditor/AclEditor.tsx","components/Form/Select.tsx","components/Sections/Section.tsx","hooks/profiles/useAttributes.ts","hooks/profiles/useHomeAttributes.ts","provider/file/FileProvider.ts","hooks/staticFiles/useStaticFiles.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["const Radio = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type=\"radio\"\n      className=\"h-4 w-4 rounded-full border-gray-300 bg-gray-100 text-blue-600 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800\"\n    />\n  );\n};\n\nexport default Radio;\n","import { AccessControlList, SecurityGroupType, TargetDrive } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Radio from '../../Form/Radio';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst AclDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n\n  onConfirm: (acl: AccessControlList) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const [newAcl, setNewAcl] = useState<AccessControlList>(acl);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const saveAcl = () => {\n    onConfirm(newAcl);\n  };\n\n  const updateSecurityGroup = (e) => {\n    setNewAcl({ ...acl, requiredSecurityGroup: SecurityGroupType[e.target.value] });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <div>\n          <Radio\n            id=\"anonymous\"\n            value=\"Anonymous\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Anonymous}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"anonymous\" className=\"ml-2\">\n            Anonymous\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"authenticated\"\n            value=\"Authenticated\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Authenticated}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"authenticated\" className=\"ml-2\">\n            Authenticated\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"connected\"\n            value=\"Connected\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Connected}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"connected\" className=\"ml-2\">\n            Connected\n          </label>\n        </div>\n\n        <div className=\"-mx-2 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n          <ActionButton className=\"mx-2\" onClick={saveAcl}>\n            {confirmText ?? 'Save'}\n          </ActionButton>\n          <ActionButton className=\"mx-2\" type=\"secondary\" onClick={onCancel}>\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default AclDialog;\n","import { FC } from 'react';\n\nconst Anonymous: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M377.7 338.8l37.15-92.87C419 235.4 411.3 224 399.1 224h-57.48C348.5 209.2 352 193 352 176c0-4.117-.8359-8.057-1.217-12.08C390.7 155.1 416 142.3 416 128c0-16.08-31.75-30.28-80.31-38.99C323.8 45.15 304.9 0 277.4 0c-10.38 0-19.62 4.5-27.38 10.5c-15.25 11.88-36.75 11.88-52 0C190.3 4.5 181.1 0 170.7 0C143.2 0 124.4 45.16 112.5 88.98C63.83 97.68 32 111.9 32 128c0 14.34 25.31 27.13 65.22 35.92C96.84 167.9 96 171.9 96 176C96 193 99.47 209.2 105.5 224H48.02C36.7 224 28.96 235.4 33.16 245.9l37.15 92.87C27.87 370.4 0 420.4 0 477.3C0 496.5 15.52 512 34.66 512H413.3C432.5 512 448 496.5 448 477.3C448 420.4 420.1 370.4 377.7 338.8zM176 479.1L128 288l64 32l16 32L176 479.1zM271.1 479.1L240 352l16-32l64-32L271.1 479.1zM320 186C320 207 302.8 224 281.6 224h-12.33c-16.46 0-30.29-10.39-35.63-24.99C232.1 194.9 228.4 192 224 192S215.9 194.9 214.4 199C209 213.6 195.2 224 178.8 224h-12.33C145.2 224 128 207 128 186V169.5C156.3 173.6 188.1 176 224 176s67.74-2.383 96-6.473V186z\" />\n    </svg>\n  );\n};\n\nexport default Anonymous;\n","import { FC } from 'react';\n\nconst ConnectedPeople: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M96 304.1c0-12.16 4.971-23.83 13.64-32.01l72.13-68.08c1.65-1.555 3.773-2.311 5.611-3.578C177.1 176.8 155 160 128 160H64C28.65 160 0 188.7 0 224v96c0 17.67 14.33 32 31.1 32L32 480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96.39l-50.36-47.53C100.1 327.9 96 316.2 96 304.1zM480 128c35.38 0 64-28.62 64-64s-28.62-64-64-64s-64 28.62-64 64S444.6 128 480 128zM96 128c35.38 0 64-28.62 64-64S131.4 0 96 0S32 28.62 32 64S60.63 128 96 128zM444.4 295.3L372.3 227.3c-3.49-3.293-8.607-4.193-13.01-2.299C354.9 226.9 352 231.2 352 236V272H224V236c0-4.795-2.857-9.133-7.262-11.03C212.3 223.1 207.2 223.1 203.7 227.3L131.6 295.3c-4.805 4.535-4.805 12.94 0 17.47l72.12 68.07c3.49 3.291 8.607 4.191 13.01 2.297C221.1 381.3 224 376.9 224 372.1V336h128v36.14c0 4.795 2.857 9.135 7.262 11.04c4.406 1.893 9.523 .9922 13.01-2.299l72.12-68.07C449.2 308.3 449.2 299.9 444.4 295.3zM512 160h-64c-26.1 0-49.98 16.77-59.38 40.42c1.842 1.271 3.969 2.027 5.623 3.588l72.12 68.06C475 280.2 480 291.9 480 304.1c.002 12.16-4.969 23.83-13.64 32.01L416 383.6V480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-128c17.67 0 32-14.33 32-32V224C576 188.7 547.3 160 512 160z\" />\n    </svg>\n  );\n};\n\nexport default ConnectedPeople;\n","import { FC } from 'react';\n\nconst Globe: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M352 256C352 278.2 350.8 299.6 348.7 320H163.3C161.2 299.6 159.1 278.2 159.1 256C159.1 233.8 161.2 212.4 163.3 192H348.7C350.8 212.4 352 233.8 352 256zM503.9 192C509.2 212.5 512 233.9 512 256C512 278.1 509.2 299.5 503.9 320H380.8C382.9 299.4 384 277.1 384 256C384 234 382.9 212.6 380.8 192H503.9zM493.4 160H376.7C366.7 96.14 346.9 42.62 321.4 8.442C399.8 29.09 463.4 85.94 493.4 160zM344.3 160H167.7C173.8 123.6 183.2 91.38 194.7 65.35C205.2 41.74 216.9 24.61 228.2 13.81C239.4 3.178 248.7 0 256 0C263.3 0 272.6 3.178 283.8 13.81C295.1 24.61 306.8 41.74 317.3 65.35C328.8 91.38 338.2 123.6 344.3 160H344.3zM18.61 160C48.59 85.94 112.2 29.09 190.6 8.442C165.1 42.62 145.3 96.14 135.3 160H18.61zM131.2 192C129.1 212.6 127.1 234 127.1 256C127.1 277.1 129.1 299.4 131.2 320H8.065C2.8 299.5 0 278.1 0 256C0 233.9 2.8 212.5 8.065 192H131.2zM194.7 446.6C183.2 420.6 173.8 388.4 167.7 352H344.3C338.2 388.4 328.8 420.6 317.3 446.6C306.8 470.3 295.1 487.4 283.8 498.2C272.6 508.8 263.3 512 255.1 512C248.7 512 239.4 508.8 228.2 498.2C216.9 487.4 205.2 470.3 194.7 446.6H194.7zM190.6 503.6C112.2 482.9 48.59 426.1 18.61 352H135.3C145.3 415.9 165.1 469.4 190.6 503.6V503.6zM321.4 503.6C346.9 469.4 366.7 415.9 376.7 352H493.4C463.4 426.1 399.8 482.9 321.4 503.6V503.6z\" />\n    </svg>\n  );\n};\n\nexport default Globe;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport AclDialog from '../Dialog/AclDialog/AclDialog';\nimport Anonymous from '../Icons/Anonymous/Anonymous';\nimport ConnectedPeople from '../Icons/ConnectedPeople/ConnectedPeople';\nimport Globe from '../Icons/Globe/Globe';\nimport Shield from '../Icons/Shield/Shield';\n\nconst AclEditor = ({\n  acl,\n  onChange,\n}: {\n  acl: AccessControlList;\n  onChange?: (acl: AccessControlList) => void;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const Icon = (props: { className: string }) => {\n    return acl.requiredSecurityGroup === SecurityGroupType.Anonymous ? (\n      <Globe {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Authenticated ? (\n      <Anonymous {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Connected ? (\n      <ConnectedPeople {...props} />\n    ) : acl.requiredSecurityGroup === SecurityGroupType.Owner ? (\n      <Shield {...props} />\n    ) : (\n      <Shield {...props} />\n    );\n  };\n\n  return (\n    <>\n      <button\n        title={acl.requiredSecurityGroup}\n        className={`mr-2 inline-block ${onChange ? '' : 'cursor-default'}`}\n        onClick={() => onChange && setIsEditing(true)}\n      >\n        <Icon className=\"h-5 w-5\" />\n      </button>\n      <AclDialog\n        acl={acl}\n        isOpen={isEditing}\n        title={t('Edit security')}\n        onCancel={() => {\n          setIsEditing(false);\n        }}\n        onConfirm={(newAcl) => {\n          onChange(newAcl);\n          setIsEditing(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AclEditor;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinition,\n  AttributeDefinitions,\n  AttributeFile,\n  Client,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nexport interface AttributeVm extends AttributeFile {\n  typeDefinition: AttributeDefinition;\n}\n\nconst useAttributes = ({ profileId, sectionId }: { profileId?: string; sectionId?: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchData = async (profileId: string, sectionId: string) => {\n    if (!profileId || !sectionId) {\n      return;\n    }\n\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100\n    );\n\n    return foundAttributes.map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: Object.values(AttributeDefinitions).find((def) => {\n          return def.type.toString() === attr.type;\n        }),\n      } as AttributeVm;\n    });\n  };\n\n  return {\n    fetch: useQuery(['attributes', profileId, sectionId], () => fetchData(profileId, sectionId), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useAttributes;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client, HomePageAttributes } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useHomeAttributes = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundHomettributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.HomePage.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.HomePage.toString(),\n          name: 'Home Page',\n          description: '',\n        },\n      };\n    });\n\n    const foundThemeAttributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.Theme.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.Theme.toString(),\n          name: 'Theme',\n          description: '',\n        },\n      };\n    });\n\n    return { home: foundHomettributes, theme: foundThemeAttributes };\n  };\n\n  return {\n    fetch: useQuery(['homeAtrributes'], () => fetchData(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useHomeAttributes;\n","import { ApiType, DataUtil, FileQueryParams, ProviderBase } from '@youfoundation/transit-lib';\n\nexport class FileProvider extends ProviderBase {\n  private static instance: FileProvider;\n\n  constructor(sharedSecret: Uint8Array) {\n    super({ api: ApiType.Owner, sharedSecret: sharedSecret });\n  }\n\n  publishFile = async (fileName: string, sections: QueryParamsSection[]) => {\n    const httpClient = this.createAxiosClient();\n\n    const fileRequest: PublishStaticFileRequest = {\n      filename: fileName,\n      config: {\n        crossOriginalBehavior: 'AllowAllOrigins',\n        contentType: 'string',\n      },\n      sections: sections.map((section) => {\n        return {\n          ...section,\n          queryParams: fixQueryParams(section.queryParams),\n        };\n      }),\n    };\n\n    return await httpClient.post('/optimization/cdn/publish', fileRequest);\n  };\n\n  public static getInstance(sharedSecret): FileProvider {\n    if (!FileProvider.instance) {\n      FileProvider.instance = new FileProvider(sharedSecret);\n    }\n\n    return FileProvider.instance;\n  }\n}\n\nconst fixQueryParams = (params: FileQueryParams): FileQueryParams => {\n  //HACK; convert all strings to byte arrays as base64 values; this is for a test\n\n  //HACK: until we decide where to handle byte arrays\n  if (params.tagsMatchAtLeastOne)\n    params.tagsMatchAtLeastOne = params.tagsMatchAtLeastOne.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.tagsMatchAll)\n    params.tagsMatchAll = params.tagsMatchAll.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.sender)\n    params.sender = params.sender.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n\n  return params;\n};\n\ntype QueryParamsSection = {\n  name: string;\n  queryParams: FileQueryParams;\n  resultOptions: {\n    includeAdditionalThumbnails: boolean;\n    includeJsonContent: boolean;\n    includePayload: boolean;\n    excludePreviewThumbnail: boolean;\n  };\n};\n\ntype PublishStaticFileRequest = {\n  filename: string;\n  config: { crossOriginalBehavior: 'Default' | 'AllowAllOrigins'; contentType: string };\n  sections: QueryParamsSection[];\n};\n","import { useMutation } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeConfig,\n  AttributeDefinitions,\n  BlogConfig,\n  BuiltInProfiles,\n  Client,\n  FileQueryParams,\n  getBlogMasterContentTargetDrive,\n  getTargetDriveFromProfileId,\n  HomePageAttributes,\n  HomePageConfig,\n  ProfileConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport { FileProvider } from '../../provider/file/FileProvider';\nimport useAuth from '../auth/useAuth';\nimport useAttributes from '../profiles/useAttributes';\nimport useHomeAttributes from '../profiles/useHomeAttributes';\n\nconst useStaticFiles = () => {\n  const { getSharedSecret } = useAuth();\n  const { data: homeAtrributes } = useHomeAttributes().fetch;\n  const { data: profileAttributes } = useAttributes({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    sectionId: BuiltInProfiles.PersonalInfoSectionId.toString(),\n  }).fetch;\n\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const publishData = async () => {\n    const fileProvider = FileProvider.getInstance(getSharedSecret());\n\n    const publishPublicProfile = async () => {\n      const homepageDrive: TargetDrive = {\n        alias: HomePageConfig.DefaultDriveId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const profileDrive: TargetDrive = {\n        alias: BuiltInProfiles.StandardProfileId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const personalInfoNameQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Name.type.toString(),\n        ],\n      };\n\n      const personalInfoPhotoQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Photo.type.toString(),\n        ],\n      };\n\n      const SocialQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [BuiltInProfiles.ExternalLinksSectionId.toString()],\n      };\n\n      const themeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.Theme.toString()],\n      };\n\n      const bioFileQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [AttributeDefinitions.FullBio.type.toString()],\n      };\n\n      const linkFileQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [AttributeDefinitions.Link.type.toString()],\n      };\n\n      const homeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.HomePage.toString()],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'socials',\n          queryParams: SocialQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'name',\n          queryParams: personalInfoNameQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'photo',\n          queryParams: personalInfoPhotoQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'bio',\n          queryParams: bioFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'link',\n          queryParams: linkFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'theme',\n          queryParams: themeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'home',\n          queryParams: homeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      // Image fileId's discovery:\n      const homeFileId = homeAtrributes.home[0]?.data['headerImageUrl'];\n      const homeTargetDrive = getTargetDriveFromProfileId(HomePageConfig.DefaultDriveId.toString());\n      const headerImageQueryParam: FileQueryParams = {\n        targetDrive: homeTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [homeFileId],\n      };\n\n      if (homeFileId) {\n        sections.push({\n          name: homeFileId,\n          queryParams: headerImageQueryParam,\n          resultOptions: baseResultOptions,\n        });\n      }\n\n      const profilePhotoFileId = profileAttributes?.find(\n        (attr) =>\n          attr.acl.requiredSecurityGroup === SecurityGroupType.Anonymous &&\n          attr.type === AttributeDefinitions.Photo.type.toString()\n      )?.data?.['profileImageId'];\n      const profileTargetDrive = getTargetDriveFromProfileId(\n        BuiltInProfiles.StandardProfileId.toString()\n      );\n      const profilePhotoQueryParams: FileQueryParams = {\n        targetDrive: profileTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [profilePhotoFileId],\n      };\n\n      if (profilePhotoFileId) {\n        sections.push({\n          name: profilePhotoFileId,\n          queryParams: profilePhotoQueryParams,\n          resultOptions: baseResultOptions,\n        });\n      }\n\n      return await fileProvider.publishFile('profile.json', sections);\n    };\n\n    const publishChannels = async () => {\n      const blogMasterDrive = getBlogMasterContentTargetDrive();\n\n      const channelQueryParams: FileQueryParams = {\n        targetDrive: blogMasterDrive,\n        fileType: [BlogConfig.BlogChannelDefinitionFileType],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'channels',\n          queryParams: channelQueryParams,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      return await fileProvider.publishFile('channels.json', sections);\n    };\n\n    const publishBlog = async () => {\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const channels = await client.blogDefinitionProvider.getChannelDefinitions();\n      const sections = channels.map((channel) => {\n        const channelDrive: TargetDrive = {\n          alias: channel.channelId,\n          type: BlogConfig.ChannelDriveType.toString(),\n        };\n\n        const blogOnChannelQuery: FileQueryParams = {\n          targetDrive: channelDrive,\n          fileType: [BlogConfig.BlogPostFileType],\n        };\n\n        return {\n          name: channel.channelId,\n          queryParams: blogOnChannelQuery,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      const imageSections = (\n        await client.blogPostReadonlyProvider.getRecentPosts('Article', channels.length * 6)\n      ).map((blog) => {\n        const params: FileQueryParams = {\n          targetDrive: client.blogDefinitionProvider.getPublishChannelDrive(blog.channelId),\n          fileType: [0],\n          tagsMatchAtLeastOne: [blog.primaryImageFileId],\n        };\n\n        return {\n          name: blog.primaryImageFileId,\n          queryParams: params,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      return await fileProvider.publishFile('blogs.json', [...sections, ...imageSections]);\n    };\n\n    await publishPublicProfile();\n    await publishChannels();\n    await publishBlog();\n  };\n\n  return {\n    publish: useMutation(publishData, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useStaticFiles;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["props","type","className","title","confirmText","isOpen","acl","onConfirm","onCancel","target","usePortal","useState","newAcl","setNewAcl","updateSecurityGroup","e","requiredSecurityGroup","SecurityGroupType","value","dialog","DialogWrapper","onClose","id","name","checked","onChange","htmlFor","ActionButton","onClick","t","createPortal","xmlns","viewBox","fill","d","isEditing","setIsEditing","Icon","Shield","children","isOpaqueBg","isBorderLess","profileId","sectionId","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchData","profileDataProvider","getProfileAttributes","foundAttributes","map","attr","typeDefinition","Object","values","AttributeDefinitions","find","def","toString","fetch","useQuery","refetchOnWindowFocus","homePageProvider","getAttributes","HomePageAttributes","foundHomettributes","description","foundThemeAttributes","home","theme","FileProvider","publishFile","fileName","sections","httpClient","createAxiosClient","fileRequest","filename","config","crossOriginalBehavior","contentType","section","queryParams","fixQueryParams","post","instance","ProviderBase","params","tagsMatchAtLeastOne","v","DataUtil","tagsMatchAll","sender","homeAtrributes","useHomeAttributes","data","profileAttributes","useAttributes","BuiltInProfiles","publishData","fileProvider","getInstance","publishPublicProfile","homepageDrive","alias","HomePageConfig","ProfileConfig","profileDrive","personalInfoNameQueryParam","targetDrive","fileType","AttributeConfig","personalInfoPhotoQueryParam","SocialQueryParam","themeFileQueryParam","bioFileQueryParam","linkFileQueryParam","homeFileQueryParam","resultOptions","baseResultOptions","includeAdditionalThumbnails","includeJsonContent","includePayload","excludePreviewThumbnail","homeFileId","homeTargetDrive","getTargetDriveFromProfileId","headerImageQueryParam","push","profilePhotoFileId","profileTargetDrive","profilePhotoQueryParams","publishChannels","blogMasterDrive","getBlogMasterContentTargetDrive","channelQueryParams","BlogConfig","publishBlog","blogDefinitionProvider","getChannelDefinitions","channels","channel","blogOnChannelQuery","channelId","blogPostReadonlyProvider","getRecentPosts","length","imageSections","blog","getPublishChannelDrive","primaryImageFileId","publish","useMutation","onError","ex","console","error","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}