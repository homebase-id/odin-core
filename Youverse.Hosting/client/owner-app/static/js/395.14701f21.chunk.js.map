{"version":3,"file":"static/js/395.14701f21.chunk.js","mappings":"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","sources":["hooks/socialFeed/useSocialChannel.ts","components/ui/Icons/Bubble/Bubble.tsx","hooks/socialFeed/media/useExternalImage.ts","hooks/socialFeed/media/useExternalTinyThumb.ts","components/SocialFeed/media/ExternalImage.tsx","components/Blog/PostTeaserCard/PostTeaserCard.tsx","components/Connection/ContactInfo/ContactInfo.tsx","components/Image/Image.tsx","components/ui/FallbackImg/FallbackImg.tsx","components/ui/Icons/Cake/Cake.tsx","components/ui/Icons/IconFrame/IconFrame.tsx","components/ui/Icons/Phone/Phone.tsx","hooks/intersection/useIntersection.ts","provider/transit/ExternalPostsDataProvider.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport ExternalPostsDataProvider from '../../provider/transit/ExternalPostsDataProvider';\nimport useAuth from '../auth/useAuth';\n\ninterface useSocialChannelProps {\n  dotYouId: string;\n  channelId: string;\n}\n\nconst useSocialChannel = ({ dotYouId, channelId }: useSocialChannelProps) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetch = async ({ dotYouId, channelId }: useSocialChannelProps) => {\n    if (!dotYouId || !channelId) {\n      return;\n    }\n\n    const externalPostDataProvider = ExternalPostsDataProvider.getInstance(getSharedSecret());\n    return await externalPostDataProvider.getChannel(dotYouId, channelId);\n  };\n\n  return {\n    fetch: useQuery(['channel', dotYouId, channelId], () => fetch({ dotYouId, channelId }), {\n      enabled: !!dotYouId && !!channelId,\n    }),\n  };\n};\n\nexport default useSocialChannel;\n","import { FC } from 'react';\n\nconst Bubble: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n    </svg>\n  );\n};\n\nexport default Bubble;\n","import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { TargetDrive, ThumbSize } from '@youfoundation/dotyoucore-js';\nimport { ExternalMediaProvider } from '../../../provider/transit/ExternalMediaProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst useExternalImage = (\n  dotYouId: string,\n  imageFileId: string | undefined,\n  imageDrive?: TargetDrive,\n  size?: ThumbSize\n) => {\n  const { getSharedSecret } = useAuth();\n  const queryClient = useQueryClient();\n\n  const fetchImageData = async (\n    dotYouId: string,\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive,\n    size?: ThumbSize\n  ) => {\n    if (imageFileId === undefined || imageFileId === '') {\n      return;\n    }\n\n    const externalMediaProvider = ExternalMediaProvider.getInstance(getSharedSecret());\n    return await externalMediaProvider.getDecryptedImageUrl(\n      dotYouId,\n      imageDrive,\n      imageFileId,\n      size\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['external-image', dotYouId, imageFileId, imageDrive, size],\n      () => fetchImageData(dotYouId, imageFileId, imageDrive, size),\n      {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        staleTime: Infinity,\n        enabled: !!dotYouId && !!imageFileId && !!imageDrive,\n      }\n    ),\n    testCache: (imageFileId: string, imageDrive: TargetDrive) => {\n      const cache = queryClient.getQueryData(['image', imageFileId, imageDrive]);\n      return !!cache;\n    },\n  };\n};\n\nexport default useExternalImage;\n","import { useQuery } from '@tanstack/react-query';\nimport { TargetDrive } from '@youfoundation/dotyoucore-js';\nimport { ExternalMediaProvider } from '../../../provider/transit/ExternalMediaProvider';\nimport useAuth from '../../auth/useAuth';\n\nconst useExternalTinyThumb = (\n  dotYouId: string,\n  imageFileId: string | undefined,\n  imageDrive?: TargetDrive\n) => {\n  const { getSharedSecret } = useAuth();\n\n  const fetchImageData = async (\n    dotYouId: string,\n    imageFileId: string | undefined,\n    imageDrive?: TargetDrive\n  ) => {\n    if (!dotYouId || imageFileId === undefined || imageFileId === '' || !imageDrive) {\n      return;\n    }\n\n    const externalMediaProvider = ExternalMediaProvider.getInstance(getSharedSecret());\n    return await externalMediaProvider.getDecryptedThumbnailMeta(dotYouId, imageDrive, imageFileId);\n  };\n\n  return useQuery(\n    ['tinyThumb', dotYouId, imageFileId, imageDrive],\n    () => fetchImageData(dotYouId, imageFileId, imageDrive),\n    {\n      enabled: !!dotYouId && !!imageFileId && !!imageDrive,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      onError: (err) => console.error(err),\n    }\n  );\n};\n\nexport default useExternalTinyThumb;\n","import { TargetDrive, ThumbSize } from '@youfoundation/dotyoucore-js';\nimport { useEffect, useRef, useState } from 'react';\nimport { useIntersection } from '../../../hooks/intersection/useIntersection';\nimport useExternalImage from '../../../hooks/socialFeed/media/useExternalImage';\nimport useExternalTinyThumb from '../../../hooks/socialFeed/media/useExternalTinyThumb';\n\ninterface ExternalImageProps {\n  dotYouId: string;\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  cover?: boolean;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst ExternalImage = ({\n  dotYouId,\n  targetDrive,\n  fileId,\n  cover,\n  className,\n  alt,\n  title,\n}: ExternalImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const [loadSize, setLoadSize] = useState<ThumbSize | 'full' | undefined>(undefined);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: thumbMeta } = useExternalTinyThumb(\n    dotYouId,\n    isInView ? fileId : undefined,\n    targetDrive\n  );\n  const {\n    fetch: { data: imageUrl },\n    testCache,\n  } = useExternalImage(\n    dotYouId,\n    loadSize !== undefined ? fileId : undefined,\n    targetDrive,\n    loadSize !== 'full' ? loadSize : undefined\n  );\n\n  useIntersection(imgRef, () => {\n    if (fileId && testCache(fileId, targetDrive)) {\n      findLoadOptimalSize();\n    }\n    setIsInView(true);\n  });\n\n  useEffect(() => {\n    if (thumbMeta && thumbMeta.url?.length) {\n      // Set to load full, with timeout to allow other tinies to load\n      setTimeout(() => {\n        findLoadOptimalSize();\n      }, 100);\n    }\n  }, [thumbMeta]);\n\n  const findLoadOptimalSize = () => {\n    if (!thumbMeta?.sizes?.length || !imgRef.current) {\n      setLoadSize('full');\n      return;\n    }\n\n    const targetWidth = imgRef.current?.clientWidth;\n    const targetHeight = imgRef.current?.clientHeight;\n\n    const matchingSize = thumbMeta.sizes.find((size) => {\n      return targetWidth < size.pixelWidth && targetHeight < size.pixelHeight;\n    });\n\n    setLoadSize(matchingSize ?? 'full');\n  };\n\n  const state: 'idle' | 'loading-tiny' | 'tiny' | 'loading-full' | 'loaded' = loadSize\n    ? imageUrl\n      ? 'loaded'\n      : 'loading-full'\n    : isInView\n    ? thumbMeta && thumbMeta.url?.length\n      ? 'tiny'\n      : 'loading-tiny'\n    : 'idle';\n\n  // const discardUrls = () => {\n  //   const currentUrl = state === 'loaded' ? imageUrl : thumbMeta?.url;\n  //   if (currentUrl) {\n  //     window.URL.revokeObjectURL(currentUrl);\n  //   }\n  // };\n\n  return (\n    <figure\n      className={`${\n        className?.indexOf('absolute') !== -1 ? '' : 'relative'\n      } overflow-hidden ${className}`}\n    >\n      {state !== 'loading-tiny' ? (\n        <img\n          src={state === 'loaded' ? imageUrl : thumbMeta?.url}\n          alt={isInView && thumbMeta?.url ? alt : ' '}\n          className={`${state !== 'loaded' ? 'blur-[50px]' : ''} ${\n            cover ? 'h-full w-full object-cover' : 'h-auto w-full'\n          }`}\n          title={\n            title ||\n            `${fileId}@${\n              loadSize !== undefined && loadSize !== 'full'\n                ? `${loadSize.pixelWidth}x${loadSize.pixelHeight}`\n                : loadSize\n            }`\n          }\n          ref={imgRef}\n          width={thumbMeta?.naturalSize?.width}\n          height={thumbMeta?.naturalSize?.height}\n          // onLoad={discardUrls}\n        />\n      ) : null}\n    </figure>\n  );\n};\n\nexport default ExternalImage;\n","import { Article, PostContent, getChannelDrive } from '@youfoundation/dotyoucore-js';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useSocialChannel from '../../../hooks/socialFeed/useSocialChannel';\nimport { ContactImage } from '../../Connection/ContactInfo/ContactInfo';\n\nimport Bubble from '../../ui/Icons/Bubble/Bubble';\nimport Triangle from '../../ui/Icons/Triangle/Triangle';\nimport Image from '../../Image/Image';\nimport ExternalImage from '../../SocialFeed/media/ExternalImage';\n\ninterface PostTeaserCardProps {\n  className?: string;\n  post: PostContent;\n  linkRoot: string;\n  isDraft?: boolean;\n}\n\nconst PostTeaserCard: FC<PostTeaserCardProps> = ({ className, post, linkRoot, isDraft }) => {\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <Link\n        to={`${linkRoot}${post.slug ?? post.id}`}\n        className=\"relative flex h-full flex-col rounded-lg border border-gray-200 border-opacity-60 bg-white transition-colors hover:shadow-md dark:border-gray-800 dark:bg-gray-800 hover:dark:shadow-slate-600 sm:flex-row\"\n      >\n        <div className=\"order-2 flex flex-col py-4 sm:-order-none\">\n          <div className=\"px-6\">\n            <div className=\"flex flex-row items-center text-gray-400 dark:text-gray-400\">\n              <span className=\"text-xs\">\n                {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {post.type}\n              </h2>\n              {isDraft ? (\n                <div className=\"ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                  <p className=\"bg-orange-100 py-1 px-2 dark:bg-orange-900\">{t('Draft')}</p>\n                </div>\n              ) : null}\n            </div>\n            <h1 className=\"text-lg font-medium text-gray-900 dark:text-white\">{post.caption}</h1>\n            {post.type === 'Article' ? (\n              <p className=\"my-3 leading-relaxed\">{(post as Article).abstract}</p>\n            ) : null}\n          </div>\n          <div className=\"mt-auto flex items-center px-5 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n        {post.primaryImageFileId && (\n          <div\n            className={`relative mx-auto max-w-[15rem] flex-shrink-0 flex-grow-0 sm:ml-auto sm:mr-0 sm:w-2/5 sm:p-3`}\n          >\n            <>\n              <Image\n                className={`aspect-square object-cover sm:rounded-lg`}\n                fileId={post.primaryImageFileId}\n                targetDrive={getChannelDrive(post.channelId)}\n                alt=\"post\"\n              />\n              {post.type === 'Video' && (\n                <>\n                  <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                </>\n              )}\n            </>\n          </div>\n        )}\n      </Link>\n    </div>\n  );\n};\n\ninterface ExternalPostTeaserCardProps extends Omit<PostTeaserCardProps, 'linkRoot'> {\n  dotYouId: string;\n}\n\nexport const ExternalPostTeaserCard: FC<ExternalPostTeaserCardProps> = ({\n  className,\n  dotYouId,\n  post,\n}) => {\n  const { data: channel } = useSocialChannel({ dotYouId, channelId: post.channelId }).fetch;\n\n  return (\n    <div className={`w-full ${className ?? ''}`}>\n      <a\n        href={`https://${dotYouId}/home/posts/${channel ? channel.slug : 'public-posts'}/${\n          post.slug ?? post.id\n        }`}\n        target=\"__blank\"\n        rel=\"nofollow noreferrer\"\n        className=\"relative flex h-full flex-col rounded-lg border border-gray-200 border-opacity-60 bg-white transition-colors hover:shadow-md dark:border-gray-800 dark:bg-gray-800 hover:dark:shadow-slate-600 sm:flex-row\"\n      >\n        <div className=\"p-4\">\n          <ContactImage dotYouId={dotYouId} className=\"h-[5rem] w-[5rem] rounded-full\" />\n        </div>\n        <div className=\"flex max-w-lg flex-grow flex-col py-3\">\n          <div className=\"pr-6\">\n            {/* Card Header */}\n            <div className=\"mb-1 flex flex-row items-center text-gray-400 dark:text-gray-400\">\n              <h2 className=\"mr-4 text-gray-900 dark:text-white\">{dotYouId}</h2>\n              <span className=\"text-xs\">\n                {new Date(post.dateUnixTime).toLocaleDateString(undefined, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </span>\n              <h2 className=\"ml-2 border-l pl-2 text-xs font-medium uppercase tracking-wide dark:border-slate-500\">\n                {post.type}\n              </h2>\n            </div>\n\n            {/* Type specific content */}\n            {post.type === 'Article' ? (\n              <>\n                <h1 className=\"text-slate-900 dark:text-white\">{post.caption}</h1>\n                <p className=\"leading-relaxed text-slate-600\">{(post as Article).abstract}</p>\n              </>\n            ) : (\n              <h1 className=\"text-slate-700 dark:text-white\">{post.caption}</h1>\n            )}\n          </div>\n\n          {post.primaryImageFileId && (\n            <div className={`relative pr-6 sm:py-4`}>\n              <ExternalImage\n                className={`${'sm:rounded-lg'} ${\n                  post.type === 'Image' || post.type === 'Video'\n                    ? 'h-full max-h-[30rem] w-auto'\n                    : 'h-64 w-full md:h-36 lg:h-48'\n                } ${post.type === 'Video' ? 'aspect-video' : ''}`}\n                dotYouId={dotYouId}\n                fileId={post.primaryImageFileId}\n                targetDrive={getChannelDrive(post.channelId)}\n                alt=\"post\"\n              />\n              {post.type === 'Video' && (\n                <>\n                  <Triangle className=\"absolute top-[calc(50%-2.5rem)] left-[calc(50%-2.5rem)] h-20 w-20 text-white\" />\n                </>\n              )}\n            </div>\n          )}\n\n          {/* Interacts */}\n          <div className=\"mt-auto flex items-center pr-6 text-sm text-gray-300\">\n            <span className=\"inline-flex items-center\">\n              <Bubble className=\"mr-1 inline-block h-4 w-4\" /> 6\n            </span>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default PostTeaserCard;\n","import { t } from '../../../helpers/i18n/dictionary';\nimport useContact from '../../../hooks/contacts/useContact';\nimport useImage from '../../../hooks/media/useImage';\nimport { ContactConfig } from '../../../provider/contact/ContactTypes';\nimport ErrorNotification from '../../ui/Alerts/ErrorNotification/ErrorNotification';\nimport ActionButton from '../../ui/Buttons/ActionButton';\nimport FallbackImg from '../../ui/FallbackImg/FallbackImg';\nimport Cake from '../../ui/Icons/Cake/Cake';\nimport House from '../../ui/Icons/House/House';\nimport IconFrame from '../../ui/Icons/IconFrame/IconFrame';\nimport Person from '../../ui/Icons/Person/Person';\nimport Phone from '../../ui/Icons/Phone/Phone';\nimport Section from '../../ui/Sections/Section';\n\ninterface ContactInfoProps {\n  dotYouId?: string;\n  contactId?: string;\n}\n\nconst ContactInfo = ({ dotYouId, contactId }: ContactInfoProps) => {\n  const {\n    fetch: { data: contact },\n    refresh: { mutate: refresh, status: refreshState, error: refreshError },\n  } = useContact(dotYouId ? { dotYouId: dotYouId } : { id: contactId });\n\n  return (\n    <>\n      <ErrorNotification error={refreshError} />\n      <Section\n        isOpaqueBg={true}\n        title={t('Details')}\n        actions={\n          dotYouId &&\n          contact.id && (\n            <ActionButton\n              className=\"m-2 text-base\"\n              state={refreshState}\n              onClick={() => refresh({ contact })}\n              confirmOptions={{\n                title: t('Refresh data'),\n                buttonText: t('Refresh'),\n                body: t(\n                  'Are you sure you want to refresh data, overwritten data cannot be recovered.'\n                ),\n              }}\n            >\n              {t('Refresh')}\n            </ActionButton>\n          )\n        }\n      >\n        <div className=\"-mx-4 sm:flex sm:flex-row\">\n          <div className=\"flex flex-row px-4 sm:mx-0\">\n            <ContactImage\n              dotYouId={dotYouId}\n              contactId={contactId}\n              className=\"mx-auto h-[12rem] w-[12rem]\"\n            />\n          </div>\n          <div className=\"px-4\">\n            {contact?.name && (\n              <div className=\"my-3 flex flex-row\">\n                <IconFrame className=\"mr-2\">\n                  <Person className=\"h-4 w-4\" />\n                </IconFrame>\n                {contact.name.givenName ?? ''} {contact.name.surname ?? ''}\n              </div>\n            )}\n            <div className=\"my-3 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <Phone className=\"h-4 w-4\" />\n              </IconFrame>{' '}\n              {contact.phone?.number ?? ''}\n            </div>\n            <div className=\"my-3 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <House className=\"h-4 w-4\" />\n              </IconFrame>{' '}\n              {contact.location?.city ?? ''} {contact.location?.country ?? ''}\n            </div>\n            <div className=\"my-3 flex flex-row\">\n              <IconFrame className=\"mr-2\">\n                <Cake className=\"h-4 w-4\" />\n              </IconFrame>{' '}\n              {contact.birthday?.date ?? ''}\n            </div>\n          </div>\n        </div>\n      </Section>\n    </>\n  );\n};\n\ninterface ContactImageProps extends ContactInfoProps {\n  className?: string;\n}\n\nexport const ContactImage = ({ dotYouId, contactId, className }: ContactImageProps) => {\n  const {\n    fetch: { data: contact },\n  } = useContact(dotYouId ? { dotYouId: dotYouId } : { id: contactId });\n\n  const { data: imageUrl } = useImage(\n    contact?.imageFileId || undefined,\n    ContactConfig.ContactTargetDrive\n  ).fetch;\n\n  return (\n    <>\n      {contact?.imageUrl || imageUrl ? (\n        <figure className={`relative overflow-hidden ${className ?? ''}`}>\n          <img src={contact.imageUrl ?? imageUrl} className=\"aspect-square w-full object-cover\" />\n        </figure>\n      ) : (\n        <FallbackImg\n          initials={contact?.name ? `${contact.name.givenName[0]}${contact.name.surname[0]}` : ''}\n          className={`${className ?? ''}`}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactInfo;\n","import { TargetDrive } from '@youfoundation/dotyoucore-js';\nimport { useRef, useState } from 'react';\nimport { useIntersection } from '../../hooks/intersection/useIntersection';\nimport useImage from '../../hooks/media/useImage';\n\ninterface ImageProps {\n  targetDrive: TargetDrive;\n  fileId: string | undefined;\n  className?: string;\n  alt?: string;\n  title?: string;\n}\n\nconst Image = ({ targetDrive, fileId, className, alt, title }: ImageProps) => {\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const { data: imageUrl } = useImage(isInView ? fileId : undefined, targetDrive).fetch;\n\n  useIntersection(imgRef, () => {\n    setIsInView(true);\n  });\n\n  // const discardUrls = () => {\n  //   if (imageUrl) {\n  //     window.URL.revokeObjectURL(imageUrl);\n  //   }\n  // };\n\n  return (\n    <img\n      src={imageUrl}\n      alt={isInView && imageUrl ? alt : ' '}\n      className={`${className} ${\n        (!isInView || !imageUrl) && 'h-full w-full animate-pulse bg-slate-100'\n      }`}\n      title={title}\n      ref={imgRef}\n      // onLoad={discardUrls}\n    />\n  );\n};\n\nexport default Image;\n","const FallbackImg = ({ initials, className }: { initials: string; className?: string }) => {\n  return (\n    <div\n      className={`flex h-full w-full bg-slate-200 text-4xl font-light text-white dark:bg-slate-700 dark:text-black sm:text-6xl ${\n        className ?? ''\n      }`}\n    >\n      <span className=\"m-auto uppercase\">{initials}</span>\n    </div>\n  );\n};\n\nexport default FallbackImg;\n","import { FC } from 'react';\n\nconst Cake: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M86.4 5.5L61.8 47.6C58 54.1 56 61.6 56 69.2V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L105.6 5.5C103.6 2.1 100 0 96 0s-7.6 2.1-9.6 5.5zm128 0L189.8 47.6c-3.8 6.5-5.8 14-5.8 21.6V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L233.6 5.5C231.6 2.1 228 0 224 0s-7.6 2.1-9.6 5.5zM317.8 47.6c-3.8 6.5-5.8 14-5.8 21.6V72c0 22.1 17.9 40 40 40s40-17.9 40-40V69.2c0-7.6-2-15-5.8-21.6L361.6 5.5C359.6 2.1 356 0 352 0s-7.6 2.1-9.6 5.5L317.8 47.6zM128 176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48c-35.3 0-64 28.7-64 64v71c8.3 5.2 18.1 9 28.8 9c13.5 0 27.2-6.1 38.4-13.4c5.4-3.5 9.9-7.1 13-9.7c1.5-1.3 2.7-2.4 3.5-3.1c.4-.4 .7-.6 .8-.8l.1-.1 0 0 0 0s0 0 0 0s0 0 0 0c3.1-3.2 7.4-4.9 11.9-4.8s8.6 2.1 11.6 5.4l0 0 0 0 .1 .1c.1 .1 .4 .4 .7 .7c.7 .7 1.7 1.7 3.1 3c2.8 2.6 6.8 6.1 11.8 9.5c10.2 7.1 23 13.1 36.3 13.1s26.1-6 36.3-13.1c5-3.5 9-6.9 11.8-9.5c1.4-1.3 2.4-2.3 3.1-3c.3-.3 .6-.6 .7-.7l.1-.1c3-3.5 7.4-5.4 12-5.4s9 2 12 5.4l.1 .1c.1 .1 .4 .4 .7 .7c.7 .7 1.7 1.7 3.1 3c2.8 2.6 6.8 6.1 11.8 9.5c10.2 7.1 23 13.1 36.3 13.1s26.1-6 36.3-13.1c5-3.5 9-6.9 11.8-9.5c1.4-1.3 2.4-2.3 3.1-3c.3-.3 .6-.6 .7-.7l.1-.1c2.9-3.4 7.1-5.3 11.6-5.4s8.7 1.6 11.9 4.8l0 0 0 0 0 0 .1 .1c.2 .2 .4 .4 .8 .8c.8 .7 1.9 1.8 3.5 3.1c3.1 2.6 7.5 6.2 13 9.7c11.2 7.3 24.9 13.4 38.4 13.4c10.7 0 20.5-3.9 28.8-9V288c0-35.3-28.7-64-64-64V176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48H256V176c0-17.7-14.3-32-32-32s-32 14.3-32 32v48H128V176zM448 394.6c-8.5 3.3-18.2 5.4-28.8 5.4c-22.5 0-42.4-9.9-55.8-18.6c-4.1-2.7-7.8-5.4-10.9-7.8c-2.8 2.4-6.1 5-9.8 7.5C329.8 390 310.6 400 288 400s-41.8-10-54.6-18.9c-3.5-2.4-6.7-4.9-9.4-7.2c-2.7 2.3-5.9 4.7-9.4 7.2C201.8 390 182.6 400 160 400s-41.8-10-54.6-18.9c-3.7-2.6-7-5.2-9.8-7.5c-3.1 2.4-6.8 5.1-10.9 7.8C71.2 390.1 51.3 400 28.8 400c-10.6 0-20.3-2.2-28.8-5.4V480c0 17.7 14.3 32 32 32H416c17.7 0 32-14.3 32-32V394.6z\" />\n    </svg>\n  );\n};\n\nexport default Cake;\n","import { ReactNode } from 'react';\n\nconst IconFrame = ({ children, className }: { children: ReactNode; className?: string }) => {\n  return (\n    <div\n      className={`mr-2 flex justify-center bg-slate-200 p-2 align-middle dark:bg-slate-800 ${\n        className ?? ''\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default IconFrame;\n","import { FC } from 'react';\n\nconst Phone: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M164.9 24.6c-7.7-18.6-28-28.5-47.4-23.2l-88 24C12.1 30.2 0 46 0 64C0 311.4 200.6 512 448 512c18 0 33.8-12.1 38.6-29.5l24-88c5.3-19.4-4.6-39.7-23.2-47.4l-96-40c-16.3-6.8-35.2-2.1-46.3 11.6L304.7 368C234.3 334.7 177.3 277.7 144 207.3L193.3 167c13.7-11.2 18.4-30 11.6-46.3l-40-96z\" />\n    </svg>\n  );\n};\n\nexport default Phone;\n","import React, { useEffect } from 'react';\n\nconst listenerCallbacks = new WeakMap();\nconst cleanupSettings = new WeakMap();\n\nlet observer: IntersectionObserver;\n\nconst handleIntersections: IntersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      const callback = listenerCallbacks.get(entry.target);\n      const cleanup = cleanupSettings.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        if (cleanup) {\n          observer.unobserve(entry.target);\n          listenerCallbacks.delete(entry.target);\n        }\n        callback();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '100px',\n      threshold: 0.15,\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (\n  elem: React.RefObject<HTMLElement> | undefined,\n  callback: () => void,\n  keepObserving = false\n) => {\n  useEffect(() => {\n    const target = elem?.current;\n    const observer = getIntersectionObserver();\n\n    if (!target) {\n      return;\n    }\n\n    listenerCallbacks.set(target, callback);\n    cleanupSettings.set(target, !keepObserving);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, [elem]);\n};\n","import {\n  FileQueryParams,\n  BlogConfig,\n  PostFile,\n  PostContent,\n  GetBatchQueryResultOptions,\n  CursoredResult,\n  getChannelDrive,\n  ChannelDefinition,\n} from '@youfoundation/dotyoucore-js';\nimport { CircleNetworkProvider } from '../connections/CircleNetworkProvider';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\nimport TransitProvider from './TransitProvider';\n\nexport interface MultiRequestCursoredResult<T> {\n  results: T;\n  cursorState: Record<string, string>;\n}\n\n// interface ExternalDataProviderOptions extends ProviderOptions {\n//   driveProvider: DriveProvider;\n// }\n\nexport interface PostFileVm<T extends PostContent> extends PostFile<T> {\n  dotYouId: string;\n}\n\nexport default class ExternalPostsDataProvider extends OwnerProviderBase {\n  private static instance: ExternalPostsDataProvider;\n  private transitProvider: TransitProvider;\n  private circleNetworkProvider: CircleNetworkProvider;\n\n  constructor(sharedSecret: Uint8Array | undefined | null) {\n    super(sharedSecret);\n\n    this.transitProvider = TransitProvider.getInstance(sharedSecret);\n    this.circleNetworkProvider = CircleNetworkProvider.getInstance(sharedSecret);\n  }\n\n  async getRecentsFromAllConnections(\n    pageSize = 10,\n    cursorState?: Record<string, string>\n  ): Promise<MultiRequestCursoredResult<PostFileVm<PostContent>[]>> {\n    const connections = await this.circleNetworkProvider.getConnections({\n      pageNumber: 1,\n      pageSize: 100,\n    });\n\n    const allCursors: Record<string, string> = {};\n\n    const resultPerConnection = await Promise.all(\n      connections.results.map(async (connection) => {\n        const result = await this.getRecents(\n          connection.dotYouId,\n          pageSize,\n          cursorState?.[connection.dotYouId]\n        );\n\n        allCursors[connection.dotYouId] = result.cursorState;\n        return result.results;\n      })\n    );\n\n    return { results: resultPerConnection.flat(1), cursorState: allCursors };\n  }\n\n  async getRecents(\n    dotYouId: string,\n    maxRecords = 10,\n    cursorState?: string\n  ): Promise<CursoredResult<PostFileVm<PostContent>[]>> {\n    const targetDrive = BlogConfig.PublicChannelDrive;\n\n    const queryParams: FileQueryParams = {\n      targetDrive: targetDrive,\n      fileType: [BlogConfig.PostFileType],\n    };\n\n    const ro: GetBatchQueryResultOptions = {\n      cursorState: cursorState,\n      maxRecords: maxRecords,\n      includeMetadataHeader: true,\n    };\n\n    const result = await this.transitProvider.QueryBatch(dotYouId, queryParams, ro);\n\n    const posts = (\n      await Promise.all(\n        result.searchResults.map(async (dsr) => {\n          return {\n            fileId: dsr.fileId,\n            acl: dsr.serverMetadata?.accessControlList,\n            content: await this.transitProvider.GetPayload<PostContent>(\n              dotYouId,\n              targetDrive,\n              dsr.fileId,\n              dsr.fileMetadata,\n              dsr.sharedSecretEncryptedKeyHeader,\n              result.includeMetadataHeader\n            ),\n            dotYouId: dotYouId,\n          } as PostFileVm<PostContent>;\n        })\n      )\n    ).filter((item) => !!item);\n\n    return { cursorState: result.cursorState, results: posts };\n  }\n\n  async getChannel(dotYouId: string, channelId: string): Promise<ChannelDefinition | undefined> {\n    const targetDrive = getChannelDrive(channelId);\n\n    const queryParams: FileQueryParams = {\n      targetDrive: targetDrive,\n      fileType: [BlogConfig.ChannelDefinitionFileType],\n    };\n\n    const ro: GetBatchQueryResultOptions = {\n      cursorState: undefined,\n      maxRecords: 1,\n      includeMetadataHeader: true,\n    };\n\n    const response = await this.transitProvider.QueryBatch(dotYouId, queryParams, ro);\n\n    try {\n      if (response.searchResults.length == 1) {\n        const dsr = response.searchResults[0];\n        return await this.transitProvider.GetPayload<ChannelDefinition>(\n          dotYouId,\n          targetDrive,\n          dsr.fileId,\n          dsr.fileMetadata,\n          dsr.sharedSecretEncryptedKeyHeader,\n          response.includeMetadataHeader\n        );\n      }\n    } catch (ex) {\n      // Catch al, as targetDrive might be inaccesible (when it doesn't exist yet)\n    }\n  }\n\n  public static getInstance(sharedSecret): ExternalPostsDataProvider {\n    if (!ExternalPostsDataProvider.instance) {\n      ExternalPostsDataProvider.instance = new ExternalPostsDataProvider(sharedSecret);\n    }\n\n    return ExternalPostsDataProvider.instance;\n  }\n}\n"],"names":["dotYouId","channelId","getSharedSecret","useAuth","fetch","externalPostDataProvider","ExternalPostsDataProvider","getChannel","useQuery","enabled","className","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","viewBox","d","imageFileId","imageDrive","size","queryClient","useQueryClient","fetchImageData","undefined","externalMediaProvider","ExternalMediaProvider","getDecryptedImageUrl","refetchOnMount","refetchOnWindowFocus","staleTime","Infinity","testCache","getQueryData","getDecryptedThumbnailMeta","onError","err","console","error","targetDrive","fileId","cover","alt","title","useState","isInView","setIsInView","loadSize","setLoadSize","imgRef","useRef","thumbMeta","useExternalTinyThumb","data","useExternalImage","imageUrl","useIntersection","findLoadOptimalSize","useEffect","url","length","setTimeout","sizes","current","targetWidth","clientWidth","targetHeight","clientHeight","matchingSize","find","pixelWidth","pixelHeight","state","indexOf","src","ref","width","naturalSize","height","ExternalPostTeaserCard","post","channel","useSocialChannel","href","slug","id","target","rel","Date","dateUnixTime","toLocaleDateString","month","day","year","type","caption","abstract","primaryImageFileId","getChannelDrive","Triangle","linkRoot","isDraft","to","t","Image","ContactImage","contactId","contact","useContact","useImage","ContactConfig","initials","name","givenName","surname","refresh","mutate","refreshState","status","refreshError","isOpaqueBg","actions","onClick","confirmOptions","buttonText","body","phone","number","location","city","country","birthday","date","xmlns","children","observer","listenerCallbacks","WeakMap","cleanupSettings","handleIntersections","entries","forEach","entry","has","callback","get","cleanup","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","IntersectionObserver","rootMargin","threshold","elem","keepObserving","set","observe","sharedSecret","transitProvider","circleNetworkProvider","TransitProvider","CircleNetworkProvider","pageSize","cursorState","this","getConnections","pageNumber","connections","allCursors","Promise","all","results","map","connection","getRecents","result","resultPerConnection","flat","maxRecords","BlogConfig","queryParams","fileType","ro","includeMetadataHeader","QueryBatch","searchResults","dsr","serverMetadata","accessControlList","GetPayload","fileMetadata","sharedSecretEncryptedKeyHeader","acl","content","posts","filter","item","response","instance","OwnerProviderBase"],"sourceRoot":""}