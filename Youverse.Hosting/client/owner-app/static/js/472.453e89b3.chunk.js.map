{"version":3,"file":"static/js/472.453e89b3.chunk.js","mappings":"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","sources":["components/Icons/Check/Check.tsx","components/Icons/Loader/Loader.tsx","components/Icons/Save/Save.tsx","components/Buttons/ActionButton.tsx","components/Buttons/SaveStatus.tsx","components/Icons/Exclamation/Exclamation.tsx","components/Icons/Plus/Plus.tsx","components/Icons/Trash/Trash.tsx","components/Layout/PageMeta/PageMeta.tsx","components/Sections/Section.tsx","components/Templates/Website/Website.tsx","helpers/i18n/dictionary.ts","hooks/profiles/useAttributes.ts","hooks/profiles/useHomeAttributes.ts","provider/file/FileProvider.ts","hooks/staticFiles/useStaticFiles.ts","webpack://owner-app/./src/components/Icons/Loader/Loader.css?58b5","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Trash from '../Icons/Trash/Trash';\n\ntype ActionButtonProps = {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash';\n  type?: 'primary' | 'secondary' | 'remove';\n  state?: 'loading' | 'success' | 'failed' | 'error' | 'idle';\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n  title,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'failed' || state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    state === 'failed' || state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-800 dark:text-white'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : 'bg-green-500 hover:bg-green-600 text-white';\n\n  return (\n    <button\n      className={`flex ${\n        children ? 'min-w-[6rem]' : ''\n      } flex-row rounded-md px-3 py-2 text-left text-sm ${colorClasses}  ${\n        state === 'loading' ? 'animate-pulse' : ''\n      } ${className}`}\n      disabled={state === 'loading'}\n      onClick={onClick}\n      title={title}\n    >\n      <span className=\"mr-1\">{children}</span>\n      <Icon className={'my-auto ml-auto h-4 w-4'} />\n    </button>\n  );\n};\n\nexport default ActionButton;\n","import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { ReactNode } from 'react';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        {title && <h1 className=\"mb-5 text-4xl dark:text-white\">{title}</h1>}\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? 'rounded-lg border-[1px] border-gray-200 border-opacity-80 dark:border-gray-700'\n          : 'bg-slate-50 dark:bg-slate-800'\n      } px-5  dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { t } from '../../../helpers/i18n/dictionary';\nimport useHomeAttributes from '../../../hooks/profiles/useHomeAttributes';\nimport useStaticFiles from '../../../hooks/staticFiles/useStaticFiles';\nimport AttributeGroup from '../../Attribute/AttributeGroup/AttributeGroup';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Cloud from '../../Icons/Cloud/Cloud';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport Section from '../../Sections/Section';\n\nconst Website = () => {\n  const { data } = useHomeAttributes().fetch;\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <section>\n      <PageMeta title={t('Website Configuration')} />\n      {/*<AttributeGroup attributes={data.home} groupTitle={t('Home')} />*/}\n      {/*<AttributeGroup attributes={data.theme} groupTitle={t('Theme')} />*/}\n      <PublishOptions />\n    </section>\n  );\n};\n\nconst PublishOptions = () => {\n  const { mutate: publishFile, status: publishStatus } = useStaticFiles().publish;\n\n  return (\n    <>\n      <Section\n        isOpaqueBg={true}\n        title={\n          <>\n            <Cloud className=\"inline-block h-4 w-4\" /> {t('Publish your public data')}\n          </>\n        }\n      >\n        <div className=\"flex flex-row\">\n          <ActionButton\n            onClick={() => publishFile()}\n            state={publishStatus}\n            icon=\"save\"\n            className=\"ml-auto\"\n          >\n            {t('Publish static file')}\n          </ActionButton>\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Website;\n","const enLocale = [\n  ['login', 'Login'],\n  ['logout', 'Logout'],\n  ['signup', 'Signup'],\n  ['all', 'All'],\n  ['learn more', 'Learn more'],\n  ['load more', 'Load more'],\n  ['blog', 'Blog'],\n  ['me', 'Me'],\n  ['loading', 'Loading'],\n  ['section-empty-attributes', \"You don't have any attributes in this section\"],\n  ['no-data-found', 'No data found'],\n  ['masonrylayout', 'Masonry'],\n  ['largecards', 'Grid'],\n  ['classicblog', 'List'],\n  ['coverpage', 'Cover Page'],\n  ['socialclassic', 'Social Classic'],\n  ['contentproducer', 'Content Producer'],\n] as const;\n\nconst internalDict: Map<string, string> = new Map(enLocale);\n\nconst t = (key: string) => {\n  return internalDict.get(key.toLowerCase()) ?? key;\n};\n\nexport { t };\n","import { useQuery } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinition,\n  AttributeDefinitions,\n  AttributeFile,\n  Client,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nexport interface AttributeVm extends AttributeFile {\n  typeDefinition: AttributeDefinition;\n}\n\nconst useAttributes = ({ profileId, sectionId }: { profileId: string; sectionId: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async (profileId: string, sectionId: string) => {\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100\n    );\n\n    return foundAttributes.map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: Object.values(AttributeDefinitions).find((def) => {\n          return def.type.toString() === attr.type;\n        }),\n      } as AttributeVm;\n    });\n  };\n\n  return [\n    useQuery(['attributes', profileId, sectionId], () => fetchData(profileId, sectionId), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  ] as const;\n};\n\nexport default useAttributes;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client, HomePageAttributes } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useHomeAttributes = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundHomettributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.HomePage.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: { type: HomePageAttributes.HomePage, name: 'Home Page', description: '' },\n      };\n    });\n\n    const foundThemeAttributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.Theme.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: { type: HomePageAttributes.Theme, name: 'Theme', description: '' },\n      };\n    });\n\n    return { home: foundHomettributes, theme: foundThemeAttributes };\n  };\n\n  return {\n    fetch: useQuery(['homeAtrributes'], () => fetchData(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useHomeAttributes;\n","import { ApiType, DataUtil, FileQueryParams, ProviderBase } from '@youfoundation/transit-lib';\n\nexport class FileProvider extends ProviderBase {\n  private static instance: FileProvider;\n\n  constructor(sharedSecret: Uint8Array) {\n    super({ api: ApiType.Owner, sharedSecret: sharedSecret });\n  }\n\n  publishFile = async (fileName: string, sections: QueryParamsSection[]) => {\n    const httpClient = this.createAxiosClient();\n\n    const fileRequest: PublishStaticFileRequest = {\n      filename: fileName,\n      config: {\n        crossOriginalBehavior: 'AllowAllOrigins',\n        contentType: 'string',\n      },\n      sections: sections.map((section) => {\n        return {\n          ...section,\n          queryParams: fixQueryParams(section.queryParams),\n        };\n      }),\n    };\n\n    return await httpClient.post('/optimization/cdn/publish', fileRequest);\n  };\n\n  public static getInstance(sharedSecret): FileProvider {\n    if (!FileProvider.instance) {\n      FileProvider.instance = new FileProvider(sharedSecret);\n    }\n\n    return FileProvider.instance;\n  }\n}\n\nconst fixQueryParams = (params: FileQueryParams): FileQueryParams => {\n  //HACK; convert all strings to byte arrays as base64 values; this is for a test\n\n  //HACK: until we decide where to handle byte arrays\n  if (params.tagsMatchAtLeastOne)\n    params.tagsMatchAtLeastOne = params.tagsMatchAtLeastOne.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.tagsMatchAll)\n    params.tagsMatchAll = params.tagsMatchAll.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.sender)\n    params.sender = params.sender.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.threadId)\n    params.threadId = params.threadId.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n\n  return params;\n};\n\ntype QueryParamsSection = {\n  name: string;\n  queryParams: FileQueryParams;\n  resultOptions: {\n    includeAdditionalThumbnails: boolean;\n    includeJsonContent: boolean;\n    includePayload: boolean;\n    excludePreviewThumbnail: boolean;\n  };\n};\n\ntype PublishStaticFileRequest = {\n  filename: string;\n  config: { crossOriginalBehavior: 'Default' | 'AllowAllOrigins'; contentType: string };\n  sections: QueryParamsSection[];\n};\n","import { useMutation } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeConfig,\n  AttributeDefinitions,\n  BlogConfig,\n  BuiltInProfiles,\n  Client,\n  FileQueryParams,\n  getBlogMasterContentTargetDrive,\n  getTargetDriveFromProfileId,\n  HomePageAttributes,\n  HomePageConfig,\n  ProfileConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport { FileProvider } from '../../provider/file/FileProvider';\nimport useAuth from '../auth/useAuth';\nimport useAttributes from '../profiles/useAttributes';\nimport useHomeAttributes from '../profiles/useHomeAttributes';\n\nconst useStaticFiles = () => {\n  const { getSharedSecret } = useAuth();\n  const { data: homeAtrributes } = useHomeAttributes().fetch;\n  const [{ data: profileAttributes }] = useAttributes({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    sectionId: BuiltInProfiles.PersonalInfoSectionId.toString(),\n  });\n\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const publishData = async () => {\n    const fileProvider = FileProvider.getInstance(getSharedSecret());\n\n    const publishPublicProfile = async () => {\n      const homepageDrive: TargetDrive = {\n        alias: HomePageConfig.DefaultDriveId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const profileDrive: TargetDrive = {\n        alias: BuiltInProfiles.StandardProfileId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const personalInfoNameQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Name.type.toString(),\n        ],\n      };\n\n      const personalInfoPhotoQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Photo.type.toString(),\n        ],\n      };\n\n      const SocialQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [BuiltInProfiles.SocialIdentitySectionId.toString()],\n      };\n\n      const themeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.Theme.toString()],\n      };\n\n      const bioFileQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [AttributeDefinitions.FullBio.type.toString()],\n      };\n\n      const homeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.HomePage.toString()],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'socials',\n          queryParams: SocialQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'name',\n          queryParams: personalInfoNameQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'photo',\n          queryParams: personalInfoPhotoQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'bio',\n          queryParams: bioFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'theme',\n          queryParams: themeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'home',\n          queryParams: homeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      // Image fileId's discovery:\n      const homeFileId = homeAtrributes.home[0]?.data['headerImageUrl'];\n      const homeTargetDrive = getTargetDriveFromProfileId(HomePageConfig.DefaultDriveId.toString());\n      const headerImageQueryParam: FileQueryParams = {\n        targetDrive: homeTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [homeFileId],\n      };\n\n      if (homeFileId) {\n        sections.push({\n          name: homeFileId,\n          queryParams: headerImageQueryParam,\n          resultOptions: baseResultOptions,\n        });\n      }\n\n      const profilePhotoFileId = profileAttributes?.find(\n        (attr) =>\n          attr.acl.requiredSecurityGroup === SecurityGroupType.Anonymous &&\n          attr.type === AttributeDefinitions.Photo.type.toString()\n      )?.data['profileImageId'];\n      const profileTargetDrive = getTargetDriveFromProfileId(\n        BuiltInProfiles.StandardProfileId.toString()\n      );\n      const profilePhotoQueryParams: FileQueryParams = {\n        targetDrive: profileTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [profilePhotoFileId],\n      };\n\n      if (profilePhotoFileId) {\n        sections.push({\n          name: profilePhotoFileId,\n          queryParams: profilePhotoQueryParams,\n          resultOptions: baseResultOptions,\n        });\n      }\n\n      return await fileProvider.publishFile('profile.json', sections);\n    };\n\n    const publishChannels = async () => {\n      const blogMasterDrive = getBlogMasterContentTargetDrive();\n\n      const channelQueryParams: FileQueryParams = {\n        targetDrive: blogMasterDrive,\n        fileType: [BlogConfig.BlogChannelDefinitionFileType],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'channels',\n          queryParams: channelQueryParams,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      return await fileProvider.publishFile('channels.json', sections);\n    };\n\n    const publishBlog = async () => {\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const channels = await client.blogDefinitionProvider.getChannelDefinitions();\n      const sections = channels.map((channel) => {\n        const channelDrive: TargetDrive = {\n          alias: channel.channelId,\n          type: BlogConfig.ChannelDriveType.toString(),\n        };\n\n        const blogOnChannelQuery: FileQueryParams = {\n          targetDrive: channelDrive,\n          fileType: [BlogConfig.BlogPostFileType],\n        };\n\n        return {\n          name: channel.channelId,\n          queryParams: blogOnChannelQuery,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      const imageSections = (\n        await client.blogPostReadonlyProvider.getRecentPosts('Article', channels.length * 6)\n      ).map((blog) => {\n        const params: FileQueryParams = {\n          targetDrive: client.blogDefinitionProvider.getPublishChannelDrive(blog.channelId),\n          fileType: [0],\n          tagsMatchAtLeastOne: [blog.primaryImageFileId],\n        };\n\n        return {\n          name: blog.primaryImageFileId,\n          queryParams: params,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      return await fileProvider.publishFile('blogs.json', [...sections, ...imageSections]);\n    };\n\n    await publishPublicProfile();\n    await publishChannels();\n    await publishBlog();\n  };\n\n  return {\n    publish: useMutation(publishData, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useStaticFiles;\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","require","xmlns","children","onClick","icon","type","state","title","Icon","props","Exclamation","Arrow","Plus","Trash","colorClasses","disabled","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","actions","saveStatus","isOpaqueBg","PublishOptions","useStaticFiles","publish","publishFile","mutate","publishStatus","status","t","useHomeAttributes","fetch","data","internalDict","Map","key","get","toLowerCase","profileId","sectionId","getSharedSecret","useAuth","client","Client","api","ApiType","sharedSecret","fetchData","profileDataProvider","getProfileAttributes","foundAttributes","map","attr","typeDefinition","Object","values","AttributeDefinitions","find","def","toString","useQuery","refetchOnMount","refetchOnWindowFocus","homePageProvider","getAttributes","HomePageAttributes","foundHomettributes","name","description","foundThemeAttributes","home","theme","FileProvider","fileName","sections","httpClient","createAxiosClient","fileRequest","filename","config","crossOriginalBehavior","contentType","section","queryParams","fixQueryParams","post","instance","ProviderBase","params","tagsMatchAtLeastOne","v","DataUtil","tagsMatchAll","sender","threadId","homeAtrributes","useAttributes","BuiltInProfiles","profileAttributes","publishData","fileProvider","getInstance","publishPublicProfile","homepageDrive","alias","HomePageConfig","ProfileConfig","profileDrive","personalInfoNameQueryParam","targetDrive","fileType","AttributeConfig","personalInfoPhotoQueryParam","SocialQueryParam","themeFileQueryParam","bioFileQueryParam","homeFileQueryParam","resultOptions","baseResultOptions","includeAdditionalThumbnails","includeJsonContent","includePayload","excludePreviewThumbnail","homeFileId","homeTargetDrive","getTargetDriveFromProfileId","headerImageQueryParam","push","profilePhotoFileId","acl","requiredSecurityGroup","SecurityGroupType","profileTargetDrive","profilePhotoQueryParams","publishChannels","blogMasterDrive","getBlogMasterContentTargetDrive","channelQueryParams","BlogConfig","publishBlog","blogDefinitionProvider","getChannelDefinitions","channels","channel","blogOnChannelQuery","channelId","blogPostReadonlyProvider","getRecentPosts","length","imageSections","blog","getPublishChannelDrive","primaryImageFileId","useMutation","onError","ex","console","error","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}