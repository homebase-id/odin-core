{"version":3,"file":"static/js/520.bec06184.chunk.js","mappings":"gJAyDA,IA7Cc,SAAC,GAAiE,IAA/DA,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,UAC3CC,EACK,aAATL,EACI,+EACS,YAATA,EACA,iCACA,uDAEN,OACE,oBAASG,UAAS,uCAAkCE,EAAlC,mBAA6CF,QAA7C,IAA6CA,EAAAA,EAAa,IAA5E,UACE,iBAAKA,UAAS,wBAAmBC,EAAY,YAAc,2BAA7C,KAAd,UACY,aAATJ,GACC,gBACEG,UAAS,yEACPC,EAAY,OAAS,sCAFzB,UAKE,SAAC,IAAD,MAES,YAATJ,GACF,gBACEG,UAAS,0DACPC,EAAY,OAAS,sCAFzB,UAKE,SAAC,IAAD,OAGF,gBACED,UAAS,wDACPC,EAAY,OAAS,sCAFzB,UAKE,SAAC,IAAD,OAGJ,iBAAKD,UAAS,eAAUC,EAAY,WAAa,qBAAjD,WACE,cAAGD,UAAU,6BAAb,SAA2CF,IAC1CC,SAKV,C,4ECXD,IAtCqB,SAAC,GAOf,IAAD,EANJI,EAMI,EANJA,cAEAH,EAII,EAJJA,UAKA,GAAyDI,EAAAA,EAAAA,GAAc,CAAC,GAAGC,WAA3DA,EAAhB,EAAQC,OAA4BC,EAApC,EAA4BC,OAE5B,OACE,SAAC,IAAD,CACER,UAAWA,EACXS,SAAUN,EAAcM,SACxBC,KAAI,UAAGP,EAAcM,UAAd,6BAAgDN,EAAcM,iBAAjE,aAAgFE,EAHtF,UAKE,SAAC,IAAD,CACEd,KAAK,YACLG,UAAU,SACVY,QAAS,SAACC,GACRA,EAAEC,iBACFT,EAAW,CAAEU,mBAAoBZ,EAAcM,UAChD,EACDO,MAAOT,EACPU,eAAgB,CACdnB,MAAM,GAAD,QAAKoB,EAAAA,EAAAA,GAAE,UAAP,YAAoBf,EAAcM,UACvCU,YAAYD,EAAAA,EAAAA,GAAE,UACdE,KAAK,GAAD,QAAKF,EAAAA,EAAAA,GAAE,mCAAP,YAA6Cf,EAAcM,SAA3D,aAAuES,EAAAA,EAAAA,GACzE,gEAZN,qBAoBL,C,gGCkDD,IApFmB,SAAC,GAcb,IAAD,IAbJT,EAaI,EAbJA,SACAC,EAYI,EAZJA,KACAW,EAWI,EAXJA,UACArB,EAUI,EAVJA,UACAD,EASI,EATJA,SACAa,EAQI,EARJA,QASMU,EAAU,SAAC,GAAD,IAAGvB,EAAH,EAAGA,SAAH,OAAmBW,GAAO,SAAC,KAAD,CAAMa,GAAIb,EAAV,SAAiBX,KAAmB,8BAAGA,GAAjE,EAChB,GAAyCyB,EAAAA,EAAAA,GAAW,CAClDf,SAAUA,IACTgB,MAFWC,EAAd,EAAQC,KAAmBC,EAA3B,EAA2BA,UAGbC,GAAaC,EAAAA,EAAAA,IACd,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaK,mBAAepB,EAC5BqB,EAAAA,EAAAA,oBACAP,MAHME,KAKR,GAAIC,EACF,OAAO,SAAC,IAAD,CAAkB5B,UAAS,uBAAkBA,KAGtD,IAAMiC,EAAQ,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAaQ,KACxBC,EAAWF,EAAQ,oBAAMA,EAASG,iBAAf,QAA4B,GAA5B,sBAAkCH,EAASI,eAA3C,QAAsD,IAAO5B,EActF,OACE,gBAAKT,UAAWA,EAAhB,UACE,SAACsB,EAAD,WACE,iBACEtB,UAAS,+DACPqB,EACI,qDACc,IAAdA,EACA,WACA,2EAENT,QAASA,EARX,WAUE,gBAAKZ,UAAU,gBAAf,SACG,UAAW0B,GAAeA,EAAYY,OACrC,mBAAQtC,UAAW,2BAAnB,UACE,gBACEuC,IAAKb,EAAYY,MAAME,IACvBC,MAAOf,EAAYY,MAAMI,WACzBC,OAAQjB,EAAYY,MAAMM,YAC1B5C,UAAU,wCAGZ0B,EAAYK,aACd,mBAAQ/B,UAAW,2BAAnB,UACE,gBAAKuC,IAAKV,EAAU7B,UAAU,mCAGhC,SAAC,IAAD,CAAa6C,SAzCL,WACH,IAAD,IAAd,GAAIZ,EACF,OAAO,UAAAA,EAASG,iBAAT,eAAqB,KAArB,UAA0BH,EAASI,eAAnC,aAA0B,EAAmB,IAAK,GAG3D,IAAMS,EAAc,OAAGrC,QAAH,IAAGA,OAAH,EAAGA,EAAUsC,MAAM,KACvC,OAAkB,OAAdD,QAAc,IAAdA,OAAA,EAAAA,EAAgBE,SAAU,EACrBF,EAAe,GAAG,GAAKA,EAAe,GAAG,GAAK,GAGhD,IACR,CA8BkCG,QAG3B,iBAAKjD,UAAU,MAAf,WACE,eAAIA,UAAU,mCAAd,gBAAkDmC,QAAlD,IAAkDA,EAAAA,EAAY1B,IAC7DV,WAMZ,C,8HCnBD,IAhE8B,SAAC,GAQxB,IAAD,EAPJmD,EAOI,EAPJA,eACAnD,EAMI,EANJA,SACAC,EAKI,EALJA,UAMA,GAEII,EAAAA,EAAAA,GAAc,CAAC,GADjB+C,cAA8BA,EADhC,EACmBC,YAAoCC,EADvD,EAC+C7C,OAG/C,GAAoD8C,EAAAA,EAAAA,WAAS,GAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KAEA,OACE,iCACE,UAAC,IAAD,CACExD,UAAWA,EACXS,SAAUyC,EACVxC,KAAI,UAAGwC,GAAc,6BAA0BA,UAA3C,aAAgEvC,EAHtE,UAKGZ,GACD,UAAC,IAAD,CACEF,KAAK,UACLG,UAAU,cACVY,QAAS,SAACC,GAGR,OAFAA,EAAEC,iBACF0C,GAAsB,IACf,CACR,EAPH,WASGtC,EAAAA,EAAAA,GAAE,WATL,UAWA,SAAC,IAAD,CACErB,KAAK,YACLG,UAAU,cACVY,QAAO,yCAAE,WAAOC,GAAP,6EACPA,EAAEC,iBADK,SAEDqC,EAAc,CAAED,eAAgBA,IAF/B,iCAIA,GAJA,2CAAF,sDAMPlC,MAAOqC,EATT,UAWGnC,EAAAA,EAAAA,GAAE,gBAGP,SAAC,IAAD,CACEuC,OAAQF,EACRL,eAAgBA,EAChBpD,OAAOoB,EAAAA,EAAAA,GAAE,6BACTwC,aAAaxC,EAAAA,EAAAA,GAAE,0BACfyC,WAAS,uBAAE,mFACTH,GAAsB,GADb,2CAGXI,SAAU,WACRJ,GAAsB,EACvB,MAIR,C,oCCtDD,IAbgC,SAAC,GAAmB,IAAjBxD,EAAgB,EAAhBA,UACjC,OACE,gBACE6D,MAAM,6BACNC,QAAQ,cACRC,KAAK,eACL/D,UAAWA,EAJb,UAME,iBAAMgE,EAAE,ofAGb,C,iECqBD,IA7B0B,SAAC,GAQpB,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,gBACAlE,EAKI,EALJA,UAMA,OAAKiE,GAKH,gBAAKjE,UAAS,iBAAKA,QAAL,IAAKA,EAAAA,EAAa,GAAlB,YAAwBiE,EAAOE,WAAa,cAA1D,UACE,SAAC,KAAD,CAAM5C,GAAE,sBAAiB0C,EAAOG,OAAhC,UACE,gBAAIpE,UAAU,6BAAd,WACE,SAAC,IAAD,CAASA,UAAU,yBAA0B,KAC7C,kBAAMA,UAAU,UAAhB,UACGiE,EAAOE,WAAP,WAAuBjD,EAAAA,EAAAA,GAAE,WAAzB,MACA+C,EAAO/B,QAETgC,IAAmB,kBAAMlE,UAAU,UAAhB,eAA6BkE,aAZhD,uBAiBV,C,mJC6BYG,EAAY,SAAC,GAA0E,IAAD,QAAvEC,EAAuE,EAAvEA,MAAOtE,EAAgE,EAAhEA,UACjC,OACE,gBAEEA,UAAS,wBAAmBA,GAF9B,UAIE,UAAC,KAAD,CACEuB,GAAE,+BAAmB+C,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAOC,uBAA1B,aAAmB,EAAwBC,MAA3C,mBAAoDF,QAApD,IAAoDA,GAApD,UAAoDA,EAAOC,uBAA3D,aAAoD,EAAwB1E,MAC9EG,UAAU,+EAFZ,WAIE,SAAC,IAAD,CAAWA,UAAU,6CACrB,gBAAKA,UAAU,qBAAf,UACE,cAAGA,UAAS,UAAZ,gBAA0BsE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOpC,UAEnC,SAAC,IAAD,CAAOlC,UAAU,gCAZrB,oBACUsE,EAAMC,uBADhB,aACU,EAAuBC,MADjC,sBAC0CF,EAAMC,uBADhD,aAC0C,EAAuB1E,MAepE,EAED,IAtE4B,SAAC,GAQtB,IAAD,UAPJ4E,EAOI,EAPJA,WACAC,EAMI,EANJA,eACA1E,EAKI,EALJA,UAMA,GAAmC2E,EAAAA,EAAAA,GAAS,CAC1CC,YAAaH,EAAWI,kBAAkBP,QACzC7C,MAFW6C,EAAd,EAAQ3C,KAIR,OAJA,EAAqBC,WAKZ,SAAC,IAAD,CAAkB5B,UAAS,uBAAkBA,MAIpD,gBAEEA,UAAS,wBAAmBA,GAC5BF,MAAO4E,EAHT,UAKE,UAAC,KAAD,CACEnD,GAAE,+BAAmB+C,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAOC,uBAA1B,aAAmB,EAAwBC,MAA3C,mBAAoDF,QAApD,IAAoDA,GAApD,UAAoDA,EAAOC,uBAA3D,aAAoD,EAAwB1E,MAC9EG,UAAU,+EAFZ,WAIE,SAAC,IAAD,CAAWA,UAAU,+BACrB,iBAAKA,UAAU,qBAAf,WACE,eAAGA,UAAS,uBAAmB0E,EAA6B,GAAZ,WAAhD,iBACGJ,QADH,IACGA,OADH,EACGA,EAAOpC,KADV,IACiB,KAEb4C,EAAAA,EAAAA,IAA6B,OAC3BL,QAD2B,IAC3BA,OAD2B,EAC3BA,EAAYI,kBAAkBE,WAC9BC,EAAAA,IACA9C,QAGLwC,IACC,mBAAO1E,UAAU,GAAjB,WACGkB,EAAAA,EAAAA,GAAE,OADL,IACcwD,SAIlB,SAAC,IAAD,CAAO1E,UAAU,gCA1BrB,iBACUyE,QADV,IACUA,GADV,UACUA,EAAYI,yBADtB,iBACU,EAA+BP,aADzC,aACU,EAAsCE,MADhD,mBACyDC,QADzD,IACyDA,GADzD,UACyDA,EAAYI,kBAAkBP,aADvF,aACyD,EAAqCzE,MA6BjG,C,sOCbD,EAvCmB,SAAC,GAkBb,IAjBLC,EAiBI,EAjBJA,MACAC,EAgBI,EAhBJA,SACA2D,EAeI,EAfJA,YAEAD,EAaI,EAbJA,OAEAE,EAWI,EAXJA,UACAC,EAUI,EAVJA,SAWMqB,GAASC,EAAAA,EAAAA,GAAU,mBAEzB,IAAKzB,EACH,OAAO,KAGT,IAAM0B,GACJ,UAACC,EAAA,EAAD,CAAetF,MAAOA,EAAOuF,QAASzB,EAAtC,UACG7D,GACD,gBAAKC,UAAU,kCAAf,UACE,SAACsF,EAAA,EAAD,CAActF,UAAU,MAAMY,QAAS+C,EAAvC,SACGD,IAAexC,EAAAA,EAAAA,GAAE,aAM1B,OAAOqE,EAAAA,EAAAA,cAAaJ,EAAQF,EAC7B,E,UCRD,EA/BgB,SAAC,GAQV,IAPLnF,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UAMA,GAA4BsD,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAe+B,EAAf,KAEA,OACE,iCACE,cACE5E,QAAS,kBAAM4E,GAAU,EAAhB,EACT1F,MAAOA,EACPE,UAAS,gCAAoBA,QAApB,IAAoBA,EAAAA,EAAa,IAH5C,UAKE,SAACyF,EAAA,EAAD,CAAUzF,UAAU,eAEtB,SAAC,EAAD,CACEyD,OAAQA,EACRE,UAAW,kBAAM6B,GAAU,EAAhB,EACX5B,SAAU,kBAAM4B,GAAU,EAAhB,EACV1F,MAAOA,EACPC,SAAUA,EACV2D,aAAaxC,EAAAA,EAAAA,GAAE,UAItB,E,4DClBKwE,EAAQ,CACZC,QACE,iCACE,+LAE+E,QAE/E,eAAG3F,UAAU,OAAb,+HAEwB,iBAAMA,UAAU,eAAhB,2BAFxB,6KAQJ4F,SACE,6OAMFC,MACE,iTAgLJ,EAxKoB,WAClB,OAGIC,EAAAA,EAAAA,GAAe,CAAEC,SAAU,IAH/B,IACEC,aAAsBC,EADxB,EACkBtE,KAAqCuE,EADvD,EAC4CtE,UAD5C,IAEEuE,YAAqBC,EAFvB,EAEiBzE,KAAoC0E,EAFrD,EAE0CzE,UAE1C,GAEI0E,EAAAA,EAAAA,KADF7E,MAAemE,EADjB,EACWjE,KAA0B4E,EADrC,EAC0B3E,UAE1B,GAAiD4E,EAAAA,EAAAA,KAAUC,gBAA7CZ,EAAd,EAAQlE,KAAuB+E,EAA/B,EAAoB9E,UACpB,GAEI+E,EAAAA,EAAAA,KADFlF,MAAekE,EADjB,EACWhE,KAAyBiF,EADpC,EACyBhF,UAGzB,OACE,iCACE,SAACiF,EAAA,EAAD,CAAU/G,OAAOoB,EAAAA,EAAAA,GAAE,gBAEnB,eAAGlB,UAAU,WAAb,8EACoE,KAClE,SAAC,KAAD,CAAMA,UAAU,YAAYuB,GAAG,iBAA/B,qBAFF,gBAKgB,KACd,SAAC,KAAD,CAAMvB,UAAU,YAAYuB,GAAG,qBAA/B,yBANF,8BAS8B,KAC5B,SAAC,KAAD,CAAMvB,UAAU,YAAYuB,GAAG,iBAA/B,qBAEQ,IAZV,MAaM,KACJ,SAAC,KAAD,CAAMvB,UAAU,YAAYuB,GAAG,cAA/B,kBAdF,QAoBE2E,GAAD,OAA8BD,QAA9B,IAA8BA,GAAAA,EAAoBjD,QACjD,SAAC8D,EAAA,EAAD,CAASC,YAAY,EAAMjH,OAAOoB,EAAAA,EAAAA,GAAE,uBAAwBlB,UAAU,OAAtE,UACE,gBAAKA,UAAU,+BAAf,gBACGiG,QADH,IACGA,OADH,EACGA,EAAoBe,KAAI,SAACC,GAAD,OACvB,SAACC,EAAA,EAAD,CACElH,UAAU,gDACVkD,eAAgB+D,EAAkB/D,eAFpC,UAKE,gBAAKlD,UAAU,QAAf,UACE,cAAGA,UAAU,eAAb,SAA6BiH,EAAkBE,aAH5CF,EAAkB/D,eAJF,QAa3B,KAEc,OAAjBkD,QAAiB,IAAjBA,GAAAA,EAAmBpD,QAAUqD,GAC5B,SAACS,EAAA,EAAD,CAASC,YAAY,EAAMjH,OAAOoB,EAAAA,EAAAA,GAAE,sBAApC,UACE,iBAAKlB,UAAU,+BAAf,UACGqG,IACC,iCACE,SAACe,EAAA,EAAD,CAAkBpH,UAAU,iEAC5B,SAACoH,EAAA,EAAD,CAAkBpH,UAAU,mEAJlC,OAQGoG,QARH,IAQGA,OARH,EAQGA,EAAmBY,KAAI,SAACK,GAAD,OACtB,SAACC,EAAA,EAAD,CACEtH,UAAU,gDACVG,cAAekH,GACVA,EAAiB5G,SAJF,SAS1B,MAEJ,iBAAKT,UAAU,4BAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,SAAC8G,EAAA,EAAD,CACE9G,UAAU,SACV+G,YAAY,EACZjH,OACE,iBAAKE,UAAU,gBAAf,WACGkB,EAAAA,EAAAA,GAAE,UAAW,KACd,SAAC,EAAD,CAASpB,OAAOoB,EAAAA,EAAAA,GAAE,gBAAiBlB,UAAU,OAA7C,SACG0F,EAAK,YAPd,SAYG,OAACC,QAAD,IAACA,GAAAA,EAAQ3C,QAAW4D,GAKnB,gBAAK5G,UAAU,QAAf,gBACG2F,QADH,IACGA,OADH,EACGA,EAAQqB,KAAI,SAAC1C,GACZ,OACE,SAAC,IAAD,CAEEA,MAAOA,EACPtE,UAAU,QAHZ,UACUsE,EAAMC,gBAAgBC,MADhC,YACyCF,EAAMC,gBAAgB1E,MAKlE,OAbH,SAAC0H,EAAA,EAAD,CAAOvH,UAAU,OAAOH,KAAM,OAAQI,WAAW,EAAjD,SACGyF,EAAK,cAiBd,gBAAK1F,UAAU,gBAAf,UACE,SAAC8G,EAAA,EAAD,CACE9G,UAAU,SACV+G,YAAY,EACZjH,OACE,iBAAKE,UAAU,gBAAf,WACGkB,EAAAA,EAAAA,GAAE,WAAY,KACf,SAAC,EAAD,CAASpB,OAAOoB,EAAAA,EAAAA,GAAE,iBAAkBlB,UAAU,OAA9C,SACG0F,EAAK,aAPd,UAYE,eAAI1F,UAAU,QAAd,SACG,OAAC4F,QAAD,IAACA,GAAAA,EAAS5C,QAAWuD,EAArB,OAKCX,QALD,IAKCA,OALD,EAKCA,EAASoB,KAAI,SAACQ,GACZ,OACE,SAACC,EAAA,EAAD,CAAsBC,UAAWF,EAAwBxH,UAAU,QAArBwH,EAAOG,GAExD,KARD,SAACJ,EAAA,EAAD,CAAOvH,UAAU,OAAOH,KAAM,OAAQI,WAAW,EAAjD,SACGyF,EAAK,iBAYhB,gBAAK1F,UAAU,gBAAf,UACE,SAAC8G,EAAA,EAAD,CACE9G,UAAU,SACV+G,YAAY,EACZjH,OACE,iBAAKE,UAAU,gBAAf,WACGkB,EAAAA,EAAAA,GAAE,QAAS,KACZ,SAAC,EAAD,CAASpB,OAAOoB,EAAAA,EAAAA,GAAE,cAAelB,UAAU,OAA3C,SACG0F,EAAK,UAPd,UAYE,eAAI1F,UAAU,QAAd,SACG,OAAC6F,QAAD,IAACA,GAAAA,EAAM7C,QAAW0D,EAAlB,OAKCb,QALD,IAKCA,OALD,EAKCA,EAAMmB,KAAI,SAACY,GACT,OAAO,SAAC,IAAD,CAAmB5H,UAAU,OAAOiE,OAAQ2D,GAAUA,EAAIxD,MAClE,KAND,SAACmD,EAAA,EAAD,CAAOvH,UAAU,OAAOH,KAAM,OAAQI,WAAW,EAAjD,SACGyF,EAAK,kBAavB,EC5MD,EARa,WACX,OACE,8BACE,SAACmC,EAAD,KAGL,C,4ECaD,IAjBgB,WACd,IAAQC,GAAoBC,EAAAA,EAAAA,KAApBD,gBAEFE,EAAwBC,EAAAA,EAAAA,YAAkCH,KAE1DrB,EAAe,yCAAG,yGACHuB,EAAsBE,sBADnB,cAChBrC,EADgB,gCAEfA,QAFe,IAEfA,OAFe,EAEfA,EAAMsC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEjE,UAAY,EAAI,IAAMkE,EAAElE,UAAY,EAAI,EAArD,KAFI,2CAAH,qDAKrB,MAAO,CACLsC,iBAAiB6B,EAAAA,EAAAA,UAAS,CAAC,mBAAmB,kBAAM7B,GAAN,GAAyB,CACrE8B,sBAAsB,IAG3B,C,uFC6BD,IA3CuB,WAA4D,IAAD,yDAArB,CAAExC,SAAU,IAA/CA,EAAwD,EAAxDA,SACxB,GAA4BgC,EAAAA,EAAAA,KAApBD,EAAR,EAAQA,gBACFU,EAA+BC,EAAAA,EAAAA,YAAyCX,KACxEY,EAAwBC,EAAAA,EAAAA,YAAkCb,KAE1Dc,EAAuB,yCAAG,iGAAS7C,EAAT,EAASA,SAAT,SAEtByC,EAA6BK,mBAAmB,CAAEC,WAAY,EAAG/C,SAAUA,IAFrD,8BAG5BgD,QAH4B,mFAAH,sDAMvBC,EAAiB,yCAAG,iGAASjD,EAAT,EAASA,SAAT,SAEhByC,EAA6BS,gBAAgB,CAAEH,WAAY,EAAG/C,SAAUA,IAFxD,8BAGtBgD,QAHsB,mFAAH,sDAMjBG,EAAgB,yCAAG,iGAASnD,EAAT,EAASA,SAAT,SAEf2C,EAAsBS,eAAe,CAAEL,WAAY,EAAG/C,SAAUA,IAFjD,8BAGrBgD,QAHqB,mFAAH,sDAMtB,MAAO,CACL/C,cAAcsC,EAAAA,EAAAA,UACZ,CAAC,qBAAsBvC,IACvB,kBAAM6C,EAAwB,CAAE7C,SAAAA,GAAhC,GACA,CACEwC,sBAAsB,EACtBa,QAAS,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAvB,IAGbG,WAAWlB,EAAAA,EAAAA,UAAS,CAAC,eAAgBvC,IAAW,kBAAMiD,EAAkB,CAAEjD,SAAAA,GAA1B,GAAuC,CACrFwC,sBAAsB,EACtBa,QAAS,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAvB,IAEXlD,aAAamC,EAAAA,EAAAA,UAAS,CAAC,oBAAqBvC,IAAW,kBAAMmD,EAAiB,CAAEnD,SAAAA,GAAzB,GAAsC,CAC3FwC,sBAAsB,EACtBa,QAAS,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAvB,IAGd,C,6ECfD,IA3BiB,SAAC,GAAmD,IAAjDzE,EAAgD,EAAhDA,YACVkD,GAAoBC,EAAAA,EAAAA,KAApBD,gBACF2B,EAAS,IAAIC,EAAAA,GAAW,CAAEC,IAAKC,EAAAA,GAAAA,MAAeC,aAAc/B,MAE5DrG,EAAK,yCAAG,WAAOmD,GAAP,4FAEJ6E,EAAOK,cAAcC,UAAU,CAAEjB,WAAY,EAAG/C,SAAU,MAFtD,8BAGVgD,QAHU,cACNiB,EADM,yBAKLA,EAAUC,MACf,SAAC3F,GAAD,OACEA,EAAMC,gBAAgBC,QAAUI,EAAYJ,OAC5CF,EAAMC,gBAAgB1E,OAAS+E,EAAY/E,IAF7C,KANU,2CAAH,sDAYX,MAAO,CACL4B,OAAO6G,EAAAA,EAAAA,UACL,CAAC,QAAD,UAAa1D,EAAYJ,MAAzB,YAAkCI,EAAY/E,QAC9C,kBAAM4B,EAAMmD,EAAZ,GACA,CACE2D,sBAAsB,IAI7B,C,6ECRD,IAjBkB,WAChB,IAAQT,GAAoBC,EAAAA,EAAAA,KAApBD,gBACF2B,EAAS,IAAIC,EAAAA,GAAW,CAAEC,IAAKC,EAAAA,GAAAA,MAAeC,aAAc/B,MAE5DoC,EAAQ,yCAAG,mGAEPT,EAAOK,cAAcC,UAAU,CAAEjB,WAAY,EAAG/C,SAAU,MAFnD,8BAGbgD,QAHa,mFAAH,qDAMd,MAAO,CACLtH,OAAO6G,EAAAA,EAAAA,UAAS,CAAC,WAAW,kBAAM4B,GAAN,GAAkB,CAC5C3B,sBAAsB,IAG3B,C,uHCVoBN,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAEnB,WAAY4B,GAAuC,kCAC3CA,EACP,CAsEA,O,kFAnED,WACEM,GADF,qFAGQV,EAASW,KAAKC,oBAHtB,SAIyBZ,EAAOa,KAC5B,gCACAH,GANJ,cAIQI,EAJR,yBAQSA,EAAS5I,MARlB,mG,IAAA,iFAWA,WACEwI,GADF,qFAGQV,EAASW,KAAKC,oBAHtB,SAIyBZ,EAAOa,KAC5B,yCACAH,GANJ,cAIQI,EAJR,OAQEjB,QAAQkB,IAAI,iDACZlB,QAAQkB,IAAID,GATd,kBAWSA,EAAS5I,MAXlB,mGAXA,IAWA,kEAcA,WAAkBwI,GAAlB,qFACQV,EAASW,KAAKC,oBADtB,SAEyBZ,EAAOa,KAC5B,6BACAH,GAJJ,cAEQI,EAFR,OAOEjB,QAAQkB,IAAI,kCACZlB,QAAQkB,IAAID,GARd,kBAUSA,EAAS5I,MAVlB,mGAdA,IAcA,yEAaA,WAAyBwI,GAAzB,qFACQV,EAASW,KAAKC,oBADtB,SAEyBZ,EAAOa,KAA8B,oBAAqBH,GAFnF,cAEQI,EAFR,yBAGSA,EAAS5I,MAHlB,mGAbA,IAaA,0EAMA,kGACQ8H,EAASW,KAAKC,oBADtB,SAEyBZ,EAAOgB,IAA+B,sBAF/D,cAEQF,EAFR,yBAGSA,EAAS5I,MAHlB,kGANA,IAMA,gEAMA,WAAgBwI,GAAhB,mFACQV,EAASW,KAAKC,oBADtB,SAEQZ,EAAOa,KAAK,uBAAwBH,GAF5C,mGANA,IAMA,+DAKA,WAAeA,GAAf,qFACQV,EAASW,KAAKC,oBADtB,SAEyBZ,EAAOa,KAAK,sBAAuBH,GAF5D,OAEQI,EAFR,OAGEjB,QAAQkB,IAAID,GAHd,mGALA,KAKA,0BAMA,SAA0BV,GAKxB,OAJK5B,EAAsByC,WACzBzC,EAAsByC,SAAW,IAAIzC,EAAsB4B,IAGtD5B,EAAsByC,QAC9B,OA1EkBzC,C,QAA8B0C,GAA9B1C,EACJyC,cAAAA,C,sHCRJ1F,EAAwB,CACnC,CAAE9C,MAAMhB,EAAAA,EAAAA,GAAE,QAAS0J,MAAO,GAC1B,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,UAAW0J,MAAO,GAC5B,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,UAAW0J,MAAO,IAGjBC,EAAyB,CACpC,CAAE3I,MAAMhB,EAAAA,EAAAA,GAAE,QAAS0J,MAAO,GAC1B,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,oBAAqB0J,MAAO,IACtC,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,uBAAwB0J,MAAO,KAG9BE,EAAsB,CACjC,CAAE5I,MAAMhB,EAAAA,EAAAA,GAAE,QAAS0J,MAAO,GAC1B,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,oBAAqB0J,MAAO,IACtC,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,8BAA+B0J,MAAO,IAChD,CAAE1I,MAAMhB,EAAAA,EAAAA,GAAE,uBAAwB0J,MAAO,I","sources":["components/Alerts/Alert/Alert.tsx","components/Connection/PersonActive/PersonActive.tsx","components/Connection/PersonCard/PersonCard.tsx","components/Connection/PersonIncomingRequest/PersonIncomingRequest.tsx","components/Icons/Question/Question.tsx","components/PermissionViews/AppPermissionView/AppPermissionView.tsx","components/PermissionViews/DrivePermissionView/DrivePermissionView.tsx","components/Dialog/InfoDialog/InfoDialog.tsx","components/InfoBox/InfoBox.tsx","components/Dashboard/Dashboard.tsx","components/Templates/Home/Home.tsx","hooks/apps/useApps.ts","hooks/connections/useConnections.ts","hooks/drive/useDrive.ts","hooks/drives/useDrives.ts","provider/app/AppManagementProvider.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport Exclamation from '../../Icons/Exclamation/Exclamation';\nimport Question from '../../Icons/Question/Question';\n\ninterface AlertProps {\n  type: 'success' | 'warning' | 'critical' | 'info';\n  title?: ReactNode;\n  children?: ReactNode;\n  className?: string;\n  isCompact?: boolean;\n}\n\nconst Alert = ({ type, title, children, className, isCompact }: AlertProps) => {\n  const bgClass =\n    type === 'critical'\n      ? 'bg-red-50 dark:bg-red-900 border-red-100 dark:border-red-800 dark:text-white'\n      : type === 'warning'\n      ? 'bg-orange-50 border-orange-100'\n      : 'bg-slate-100 dark:bg-slate-700 dark:border-slate-900';\n\n  return (\n    <section className={`bg-red rounded-lg border p-5 ${bgClass} ${className ?? ''}`}>\n      <div className={`flex flex-row ${isCompact ? 'flex-wrap' : 'flex-wrap sm:flex-nowrap'} `}>\n        {type === 'critical' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-red-400 dark:text-red-300 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : type === 'warning' ? (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-orange-400 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Exclamation />\n          </div>\n        ) : (\n          <div\n            className={`mb-2 flex h-8 w-8 flex-shrink-0 text-blue-400 ${\n              isCompact ? 'mb-2' : 'sm:my-auto sm:mx-0 sm:h-10 sm:w-10'\n            }`}\n          >\n            <Question />\n          </div>\n        )}\n        <div className={`ml-5 ${isCompact ? 'contents' : 'contents sm:block'}`}>\n          <p className=\"ml-3 mb-2 text-2xl sm:ml-0\">{title}</p>\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Alert;\n","import { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport { DotYouProfile } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonActive = ({\n  dotYouProfile,\n\n  className,\n}: {\n  dotYouProfile: DotYouProfile;\n  className: string;\n}) => {\n  const { mutate: disconnect, status: disconnectStatus } = useConnection({}).disconnect;\n\n  return (\n    <PersonCard\n      className={className}\n      dotYouId={dotYouProfile.dotYouId}\n      href={(dotYouProfile.dotYouId && `/owner/connections/${dotYouProfile.dotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          disconnect({ connectionDotYouId: dotYouProfile.dotYouId });\n        }}\n        state={disconnectStatus}\n        confirmOptions={{\n          title: `${t('Remove')} ${dotYouProfile.dotYouId}`,\n          buttonText: t('Remove'),\n          body: `${t('Are you sure you want to remove')} ${dotYouProfile.dotYouId} ${t(\n            'from your connections. They will lose all existing access.'\n          )}`,\n        }}\n      >\n        Remove\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default PersonActive;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport useContact from '../../../hooks/contact/useContact';\nimport useImage from '../../../hooks/media/useImage';\nimport { ContactConfig } from '../../../provider/contact/ContactTypes';\nimport FallbackImg from '../../FallbackImg/FallbackImg';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst PersonCard = ({\n  dotYouId,\n  href,\n  isChecked,\n  className,\n  children,\n  onClick,\n}: {\n  dotYouId: string;\n  href?: string;\n  isChecked?: boolean;\n  className: string;\n  children?: ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}) => {\n  const Wrapper = ({ children }) => (href ? <Link to={href}>{children}</Link> : <>{children}</>);\n  const { data: contactData, isLoading } = useContact({\n    dotYouId: dotYouId,\n  }).fetch;\n  const { data: imageUrl } = useImage(\n    contactData?.imageFileId || undefined,\n    ContactConfig.ContactTargetDrive\n  ).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`aspect-[3/5] ${className}`} />;\n  }\n\n  const nameData = contactData?.name;\n  const fullName = nameData ? `${nameData.givenName ?? ''} ${nameData.surname ?? ''}` : dotYouId;\n  const getInitials = () => {\n    if (nameData) {\n      return nameData.givenName?.[0] + nameData.surname?.[0] + '';\n    }\n\n    const splittedDomain = dotYouId?.split('.');\n    if (splittedDomain?.length >= 2) {\n      return splittedDomain[0][0] + splittedDomain[1][0] + '';\n    }\n\n    return '--';\n  };\n\n  return (\n    <div className={className}>\n      <Wrapper>\n        <div\n          className={`h-full rounded-md border bg-white transition-colors  ${\n            isChecked\n              ? 'border-4 border-indigo-500 dark:border-indigo-700'\n              : isChecked === false\n              ? 'border-4'\n              : 'border-gray-200 border-opacity-60 dark:border-gray-800 dark:bg-gray-800'\n          }`}\n          onClick={onClick}\n        >\n          <div className=\"aspect-square\">\n            {'image' in contactData && contactData.image ? (\n              <figure className={'relative overflow-hidden'}>\n                <img\n                  src={contactData.image.url}\n                  width={contactData.image.pixelWidth}\n                  height={contactData.image.pixelHeight}\n                  className=\"aspect-square w-full object-cover\"\n                />\n              </figure>\n            ) : contactData.imageFileId ? (\n              <figure className={'relative overflow-hidden'}>\n                <img src={imageUrl} className=\"aspect-square object-cover \" />\n              </figure>\n            ) : (\n              <FallbackImg initials={getInitials()} />\n            )}\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">{fullName ?? dotYouId}</h2>\n            {children}\n          </div>\n        </div>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport ActionButton from '../../Buttons/ActionButton';\nimport IncomingConnectionDialog from '../../Dialog/ConnectionDialogs/IncomingConnectionDialog';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonIncomingRequest = ({\n  senderDotYouId,\n  children,\n  className,\n}: {\n  senderDotYouId: string;\n  children?: ReactNode;\n  className: string;\n}) => {\n  const {\n    ignoreRequest: { mutateAsync: ignoreRequest, status: ignoreRequestStatus },\n  } = useConnection({});\n\n  const [isAcceptDialogOpen, setIsAcceptDialogOpen] = useState(false);\n\n  return (\n    <>\n      <PersonCard\n        className={className}\n        dotYouId={senderDotYouId}\n        href={(senderDotYouId && `/owner/connections/${senderDotYouId}`) ?? undefined}\n      >\n        {children}\n        <ActionButton\n          type=\"primary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            setIsAcceptDialogOpen(true);\n            return false;\n          }}\n        >\n          {t('Confirm')}...\n        </ActionButton>\n        <ActionButton\n          type=\"secondary\"\n          className=\"mb-2 w-full\"\n          onClick={async (e) => {\n            e.preventDefault();\n            await ignoreRequest({ senderDotYouId: senderDotYouId });\n\n            return false;\n          }}\n          state={ignoreRequestStatus}\n        >\n          {t('Ignore')}\n        </ActionButton>\n      </PersonCard>\n      <IncomingConnectionDialog\n        isOpen={isAcceptDialogOpen}\n        senderDotYouId={senderDotYouId}\n        title={t('Accept connection request')}\n        confirmText={t('Accept and give access')}\n        onConfirm={async () => {\n          setIsAcceptDialogOpen(false);\n        }}\n        onCancel={() => {\n          setIsAcceptDialogOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default PersonIncomingRequest;\n","import { FC } from 'react';\n\nconst Question: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z\" />\n    </svg>\n  );\n};\n\nexport default Question;\n","import { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { RedactedAppRegistration } from '../../../provider/app/AppManagementProviderTypes';\nimport Circles from '../../Icons/Circles/Circles';\n\nconst AppMembershipView = ({\n  appDef,\n  permissionLevel,\n  className,\n}: {\n  appDef: RedactedAppRegistration;\n  permissionLevel?: string;\n  className?: string;\n}) => {\n  if (!appDef) {\n    return <></>;\n  }\n\n  return (\n    <div className={`${className ?? ''} ${appDef.isRevoked && 'opacity-50'}`}>\n      <Link to={`/owner/apps/${appDef.appId}`}>\n        <h2 className=\"mb-2 flex flex-row text-xl\">\n          <Circles className=\"my-auto mr-2 h-4 w-4\" />{' '}\n          <span className=\"my-auto\">\n            {appDef.isRevoked && `${t('Revoked')}: `}\n            {appDef.name}\n          </span>\n          {permissionLevel && <span className=\"my-auto\">: {permissionLevel}</span>}\n        </h2>\n      </Link>\n    </div>\n  );\n};\n\nexport default AppMembershipView;\n","import { DriveDefinition } from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useDrive from '../../../hooks/drive/useDrive';\nimport { DriveGrant } from '../../../provider/connections/CircleDataTypes';\nimport { drivePermissionLevels } from '../../../provider/permission/permissionLevels';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport HardDrive from '../../Icons/HardDrive/HardDrive';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\nimport { getAccessFromPermissionNumber } from '../../Templates/DemoData/helpers';\n\nconst DrivePermissionView = ({\n  driveGrant,\n  permissionTree,\n  className,\n}: {\n  driveGrant: DriveGrant;\n  permissionTree?: string;\n  className?: string;\n}) => {\n  const { data: drive, isLoading } = useDrive({\n    targetDrive: driveGrant.permissionedDrive.drive,\n  }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`h-4 max-w-xs ${className}`} />;\n  }\n\n  return (\n    <div\n      key={`${driveGrant?.permissionedDrive?.drive?.alias}-${driveGrant?.permissionedDrive.drive?.type}`}\n      className={`flex flex-row ${className}`}\n      title={permissionTree}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`leading-none ${!permissionTree ? 'my-auto' : ''}`}>\n            {drive?.name}:{' '}\n            {\n              getAccessFromPermissionNumber(\n                driveGrant?.permissionedDrive.permission,\n                drivePermissionLevels\n              ).name\n            }\n          </p>\n          {permissionTree && (\n            <small className=\"\">\n              {t('Via')} {permissionTree}\n            </small>\n          )}\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport const DriveView = ({ drive, className }: { drive: DriveDefinition; className?: string }) => {\n  return (\n    <div\n      key={`${drive.targetDriveInfo?.alias}-${drive.targetDriveInfo?.type}`}\n      className={`flex flex-row ${className}`}\n    >\n      <Link\n        to={`/owner/drives/${drive?.targetDriveInfo?.alias}_${drive?.targetDriveInfo?.type}`}\n        className=\"flex flex-row hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        <HardDrive className=\"mt-1 mb-auto mr-3 h-6 w-6 flex-shrink-0\" />\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`my-auto`}>{drive?.name}</p>\n        </div>\n        <Arrow className=\"my-auto ml-auto h-5 w-5\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default DrivePermissionView;\n","import { ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst InfoDialog = ({\n  title,\n  children,\n  confirmText,\n\n  isOpen,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  children: ReactNode;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      {children}\n      <div className=\"-m-2 flex flex-row-reverse py-3\">\n        <ActionButton className=\"m-2\" onClick={onConfirm}>\n          {confirmText || t('Ok')}\n        </ActionButton>\n      </div>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default InfoDialog;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport InfoDialog from '../Dialog/InfoDialog/InfoDialog';\nimport Question from '../Icons/Question/Question';\n\nconst InfoBox = ({\n  title,\n  children,\n  className,\n}: {\n  title: string;\n  children: ReactNode;\n  className?: string;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <a\n        onClick={() => setIsOpen(true)}\n        title={title}\n        className={`cursor-pointer ${className ?? ''}`}\n      >\n        <Question className=\"h-6 w-6\" />\n      </a>\n      <InfoDialog\n        isOpen={isOpen}\n        onConfirm={() => setIsOpen(false)}\n        onCancel={() => setIsOpen(false)}\n        title={title}\n        children={children}\n        confirmText={t('Ok')}\n      />\n    </>\n  );\n};\nexport default InfoBox;\n","import { Link } from 'react-router-dom';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useApps from '../../hooks/apps/useApps';\nimport useCircles from '../../hooks/circles/useCircles';\nimport useConnections from '../../hooks/connections/useConnections';\nimport useDrives from '../../hooks/drives/useDrives';\nimport Alert from '../Alerts/Alert/Alert';\nimport PersonActive from '../Connection/PersonActive/PersonActive';\nimport PersonIncomingRequest from '../Connection/PersonIncomingRequest/PersonIncomingRequest';\nimport InfoBox from '../InfoBox/InfoBox';\nimport PageMeta from '../Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../Loaders/LoadingParagraph/LoadingParagraph';\nimport AppMembershipView from '../PermissionViews/AppPermissionView/AppPermissionView';\nimport CirclePermissionView from '../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport { DriveView } from '../PermissionViews/DrivePermissionView/DrivePermissionView';\nimport Section from '../Sections/Section';\n\nconst About = {\n  drives: (\n    <>\n      <p>\n        Drives are the center of your identity. They contain your data in their many different\n        forms. Drives hold the data of your profile(s), drafted and published blogs.{' '}\n      </p>\n      <p className=\"mt-2\">\n        Data on these drives can be accessed by you, one of your approved connections, one of your\n        approved apps and the <span className=\"line-through\">YouFoundation</span>. No scratch that,\n        it is your data you are always in control. We will never access your data, because we\n        promise not to... And because it is technically impossible.\n      </p>\n    </>\n  ),\n  circles: (\n    <p>\n      Circles are groups of members that share the same permissions. You can name them based on\n      which social circle your connections belong (eg: family, friends, co-workers, ...). Or\n      anything else that works for you\n    </p>\n  ),\n  apps: (\n    <p>\n      Apps are applications that have been granted access to one or more of your drives. They are\n      able to access that information on your behalf so do make sure when registering new apps on\n      your identity that they don't request any drive access that you don't feel comfortable with.\n    </p>\n  ),\n};\n\nconst DemoButtons = () => {\n  const {\n    fetchPending: { data: pendingConnections, isLoading: pendingConnectionsLoading },\n    fetchActive: { data: activeConnections, isLoading: activeConnectionsLoading },\n  } = useConnections({ pageSize: 5 });\n  const {\n    fetch: { data: circles, isLoading: isCirclesLoading },\n  } = useCircles();\n  const { data: apps, isLoading: isAppsLoading } = useApps().fetchRegistered;\n  const {\n    fetch: { data: drives, isLoading: isDrivesLoading },\n  } = useDrives();\n\n  return (\n    <>\n      <PageMeta title={t('Dashboard')} />\n\n      <p className=\"max-w-md\">\n        Welcome to your owner console. Here you will be able to edit your{' '}\n        <Link className=\"underline\" to=\"/owner/profile\">\n          profile\n        </Link>\n        , manage your{' '}\n        <Link className=\"underline\" to=\"/owner/connections\">\n          connections\n        </Link>\n        , manage permissions within{' '}\n        <Link className=\"underline\" to=\"/owner/circles\">\n          circles\n        </Link>{' '}\n        and{' '}\n        <Link className=\"underline\" to=\"/owner/apps\">\n          apps\n        </Link>\n        .\n      </p>\n\n      {!pendingConnectionsLoading && pendingConnections?.length ? (\n        <Section isOpaqueBg={true} title={t('Connection requests')} className=\"mb-4\">\n          <div className=\"-m-1 flex flex-row flex-wrap\">\n            {pendingConnections?.map((pendingConnection) => (\n              <PersonIncomingRequest\n                className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                senderDotYouId={pendingConnection.senderDotYouId}\n                key={pendingConnection.senderDotYouId}\n              >\n                <div className=\"-mt-3\">\n                  <p className=\"mb-3 text-sm\">{pendingConnection.message}</p>\n                </div>\n              </PersonIncomingRequest>\n            ))}\n          </div>\n        </Section>\n      ) : null}\n\n      {activeConnections?.length || activeConnectionsLoading ? (\n        <Section isOpaqueBg={true} title={t('Latest Connections')}>\n          <div className=\"-m-1 flex flex-row flex-wrap\">\n            {activeConnectionsLoading && (\n              <>\n                <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n                <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n              </>\n            )}\n\n            {activeConnections?.map((activeConnection) => (\n              <PersonActive\n                className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                dotYouProfile={activeConnection}\n                key={activeConnection.dotYouId}\n              />\n            ))}\n          </div>\n        </Section>\n      ) : null}\n\n      <div className=\"-mx-4 lg:flex lg:flex-row\">\n        <div className=\"px-4 lg:w-1/3\">\n          <Section\n            className=\"h-full\"\n            isOpaqueBg={true}\n            title={\n              <div className=\"flex flex-row\">\n                {t('Drives')}{' '}\n                <InfoBox title={t('About Drives')} className=\"ml-2\">\n                  {About['drives']}\n                </InfoBox>\n              </div>\n            }\n          >\n            {!drives?.length && !isDrivesLoading ? (\n              <Alert className=\"my-2\" type={'info'} isCompact={true}>\n                {About['drives']}\n              </Alert>\n            ) : (\n              <div className=\"-my-4\">\n                {drives?.map((drive) => {\n                  return (\n                    <DriveView\n                      key={`${drive.targetDriveInfo.alias}-${drive.targetDriveInfo.type}`}\n                      drive={drive}\n                      className=\"my-4\"\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </Section>\n        </div>\n        <div className=\"px-4 lg:w-1/3\">\n          <Section\n            className=\"h-full\"\n            isOpaqueBg={true}\n            title={\n              <div className=\"flex flex-row\">\n                {t('Circles')}{' '}\n                <InfoBox title={t('About Circles')} className=\"ml-2\">\n                  {About['circles']}\n                </InfoBox>\n              </div>\n            }\n          >\n            <ul className=\"-my-4\">\n              {!circles?.length && !isCirclesLoading ? (\n                <Alert className=\"my-2\" type={'info'} isCompact={true}>\n                  {About['circles']}\n                </Alert>\n              ) : (\n                circles?.map((circle) => {\n                  return (\n                    <CirclePermissionView circleDef={circle} key={circle.id} className=\"my-4\" />\n                  );\n                })\n              )}\n            </ul>\n          </Section>\n        </div>\n        <div className=\"px-4 lg:w-1/3\">\n          <Section\n            className=\"h-full\"\n            isOpaqueBg={true}\n            title={\n              <div className=\"flex flex-row\">\n                {t('Apps')}{' '}\n                <InfoBox title={t('About Apps')} className=\"ml-2\">\n                  {About['apps']}\n                </InfoBox>\n              </div>\n            }\n          >\n            <ul className=\"-my-4\">\n              {!apps?.length && !isAppsLoading ? (\n                <Alert className=\"my-2\" type={'info'} isCompact={true}>\n                  {About['apps']}\n                </Alert>\n              ) : (\n                apps?.map((app) => {\n                  return <AppMembershipView className=\"my-4\" appDef={app} key={app.appId} />;\n                })\n              )}\n            </ul>\n          </Section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DemoButtons;\n","import Dashboard from '../../Dashboard/Dashboard';\n\nconst Home = () => {\n  return (\n    <section>\n      <Dashboard />\n    </section>\n  );\n};\n\nexport default Home;\n","import { useQuery } from '@tanstack/react-query';\nimport AppManagementProvider from '../../provider/app/AppManagementProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useApps = () => {\n  const { getSharedSecret } = useAuth();\n\n  const appManagementProvider = AppManagementProvider.getInstance(getSharedSecret());\n\n  const fetchRegistered = async () => {\n    const apps = await appManagementProvider.GetAppRegistrations();\n    return apps?.sort((a, b) => (a.isRevoked ? 1 : 0) - (b.isRevoked ? 1 : 0));\n  };\n\n  return {\n    fetchRegistered: useQuery(['registeredApps'], () => fetchRegistered(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useApps;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = ({ pageSize }: { pageSize: number } = { pageSize: 10 }) => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async ({ pageSize }: { pageSize: number }) => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: pageSize })\n    ).results;\n  };\n\n  const fetchSentRequests = async ({ pageSize }: { pageSize: number }) => {\n    return await (\n      await circleNetworkRequestProvider.getSentRequests({ pageNumber: 1, pageSize: pageSize })\n    ).results;\n  };\n\n  const fetchConnections = async ({ pageSize }: { pageSize: number }) => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: pageSize })\n    ).results;\n  };\n\n  return {\n    fetchPending: useQuery(\n      ['pendingConnections', pageSize],\n      () => fetchPendingConnections({ pageSize }),\n      {\n        refetchOnWindowFocus: false,\n        onError: (err) => console.error(err),\n      }\n    ),\n    fetchSent: useQuery(['sentRequests', pageSize], () => fetchSentRequests({ pageSize }), {\n      refetchOnWindowFocus: false,\n      onError: (err) => console.error(err),\n    }),\n    fetchActive: useQuery(['activeConnections', pageSize], () => fetchConnections({ pageSize }), {\n      refetchOnWindowFocus: false,\n      onError: (err) => console.error(err),\n    }),\n  };\n};\n\nexport default useConnections;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient, TargetDrive } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrive = ({ targetDrive }: { targetDrive: TargetDrive }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetch = async (targetDrive: TargetDrive) => {\n    const allDrives = await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n\n    return allDrives.find(\n      (drive) =>\n        drive.targetDriveInfo.alias === targetDrive.alias &&\n        drive.targetDriveInfo.type === targetDrive.type\n    );\n  };\n\n  return {\n    fetch: useQuery(\n      ['drive', `${targetDrive.alias}_${targetDrive.type}`],\n      () => fetch(targetDrive),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useDrive;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    return await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['drives'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useDrives;\n","import {\n  AppClientRegistrationRequest,\n  AppClientRegistrationResponse,\n  AppRegistrationRequest,\n  RedactedAppRegistration,\n  GetAppRequest,\n} from './AppManagementProviderTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\nexport default class AppManagementProvider extends OwnerProviderBase {\n  private static instance: AppManagementProvider;\n  constructor(sharedSecret: Uint8Array | undefined) {\n    super(sharedSecret);\n  }\n\n  //adds the specified client to the list of allowed clients for a given app; returns a CAT\n  async RegisterAppClient(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/client',\n      request\n    );\n    return response.data;\n  }\n\n  async RegisterChatAppClient_temp(\n    request: AppClientRegistrationRequest\n  ): Promise<AppClientRegistrationResponse> {\n    const client = this.createAxiosClient();\n    const response = await client.post<AppClientRegistrationResponse>(\n      'appmanagement/register/chatclient_temp',\n      request\n    );\n    console.log('RegisterChatAppClient_temp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async RegisterApp(request: AppRegistrationRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>(\n      'appmanagement/register/app',\n      request\n    );\n\n    console.log('RegisterApp returning response');\n    console.log(response);\n\n    return response.data;\n  }\n\n  async GetAppRegistration(request: GetAppRequest): Promise<RedactedAppRegistration> {\n    const client = this.createAxiosClient();\n    const response = await client.post<RedactedAppRegistration>('appmanagement/app', request);\n    return response.data;\n  }\n\n  async GetAppRegistrations(): Promise<RedactedAppRegistration[]> {\n    const client = this.createAxiosClient();\n    const response = await client.get<RedactedAppRegistration[]>('appmanagement/list');\n    return response.data;\n  }\n\n  async RevokeApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    await client.post('appmanagement/revoke', request);\n  }\n\n  async AllowApp(request: GetAppRequest): Promise<void> {\n    const client = this.createAxiosClient();\n    const response = await client.post('appmanagement/allow', request);\n    console.log(response);\n  }\n\n  public static getInstance(sharedSecret): AppManagementProvider {\n    if (!AppManagementProvider.instance) {\n      AppManagementProvider.instance = new AppManagementProvider(sharedSecret);\n    }\n\n    return AppManagementProvider.instance;\n  }\n}\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n\nexport const appPermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Manage Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["type","title","children","className","isCompact","bgClass","dotYouProfile","useConnection","disconnect","mutate","disconnectStatus","status","dotYouId","href","undefined","onClick","e","preventDefault","connectionDotYouId","state","confirmOptions","t","buttonText","body","isChecked","Wrapper","to","useContact","fetch","contactData","data","isLoading","imageUrl","useImage","imageFileId","ContactConfig","nameData","name","fullName","givenName","surname","image","src","url","width","pixelWidth","height","pixelHeight","initials","splittedDomain","split","length","getInitials","senderDotYouId","ignoreRequest","mutateAsync","ignoreRequestStatus","useState","isAcceptDialogOpen","setIsAcceptDialogOpen","isOpen","confirmText","onConfirm","onCancel","xmlns","viewBox","fill","d","appDef","permissionLevel","isRevoked","appId","DriveView","drive","targetDriveInfo","alias","driveGrant","permissionTree","useDrive","targetDrive","permissionedDrive","getAccessFromPermissionNumber","permission","drivePermissionLevels","target","usePortal","dialog","DialogWrapper","onClose","ActionButton","createPortal","setIsOpen","Question","About","drives","circles","apps","useConnections","pageSize","fetchPending","pendingConnections","pendingConnectionsLoading","fetchActive","activeConnections","activeConnectionsLoading","useCircles","isCirclesLoading","useApps","fetchRegistered","isAppsLoading","useDrives","isDrivesLoading","PageMeta","Section","isOpaqueBg","map","pendingConnection","PersonIncomingRequest","message","LoadingParagraph","activeConnection","PersonActive","Alert","circle","CirclePermissionView","circleDef","id","app","Dashboard","getSharedSecret","useAuth","appManagementProvider","AppManagementProvider","GetAppRegistrations","sort","a","b","useQuery","refetchOnWindowFocus","circleNetworkRequestProvider","CircleNetworkRequestProvider","circleNetworkProvider","CircleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","results","fetchSentRequests","getSentRequests","fetchConnections","getConnections","onError","err","console","error","fetchSent","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","allDrives","find","fetchAll","request","this","createAxiosClient","post","response","log","get","instance","OwnerProviderBase","value","circlePermissionLevels","appPermissionLevels"],"sourceRoot":""}