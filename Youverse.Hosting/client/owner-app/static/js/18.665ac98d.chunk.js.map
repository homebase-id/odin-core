{"version":3,"file":"static/js/18.665ac98d.chunk.js","mappings":"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","sources":["components/Form/Radio.tsx","components/Dialog/AclDialog/AclDialog.tsx","components/Icons/Lock/Lock.tsx","components/Icons/OpenLock/OpenLock.tsx","components/AclEditor/AclEditor.tsx","components/Form/Input.tsx","components/Form/Select.tsx","components/Form/Textarea.tsx","components/Sections/Section.tsx","components/SubMenu/SubMenu.tsx","hooks/blogs/useBlogs.ts","components/Channel/ChannelCreator/ChannelCreator.tsx","components/Blog/BlogTeaser/BlogTeaser.tsx","components/Channel/ChannelEditor/ChannelEditor.tsx","components/Channel/ChannelOverview/ChannelOverview.tsx","components/Templates/Blog/Blog.tsx","hooks/blogs/useChannels.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["const Radio = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type=\"radio\"\n      className=\"h-4 w-4 rounded-full border-gray-300 bg-gray-100 text-blue-600 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800\"\n    />\n  );\n};\n\nexport default Radio;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Radio from '../../Form/Radio';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst AclDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n\n  onConfirm: (acl: AccessControlList) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const [newAcl, setNewAcl] = useState<AccessControlList>(acl);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const saveAcl = () => {\n    onConfirm(newAcl);\n  };\n\n  const updateSecurityGroup = (e) => {\n    setNewAcl({ ...acl, requiredSecurityGroup: SecurityGroupType[e.target.value] });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <div>\n          <Radio\n            id=\"anonymous\"\n            value=\"Anonymous\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Anonymous}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"anonymous\" className=\"ml-2\">\n            Anonymous\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"authenticated\"\n            value=\"Authenticated\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Authenticated}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"authenticated\" className=\"ml-2\">\n            Authenticated\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"connected\"\n            value=\"Connected\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Connected}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"connected\" className=\"ml-2\">\n            Connected\n          </label>\n        </div>\n        <div>\n          <Radio\n            id=\"owner\"\n            value=\"Owner\"\n            name=\"securityGroup\"\n            checked={newAcl.requiredSecurityGroup === SecurityGroupType.Owner}\n            onChange={updateSecurityGroup}\n          />\n          <label htmlFor=\"owner\" className=\"ml-2\">\n            Owner\n          </label>\n        </div>\n\n        <div className=\"-m-2 flex flex-row-reverse px-4 py-3\">\n          <ActionButton className=\"m-2\" onClick={saveAcl}>\n            {confirmText ?? 'Save'}\n          </ActionButton>\n          <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default AclDialog;\n","import { FC } from 'react';\n\nconst Lock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\" />\n    </svg>\n  );\n};\n\nexport default Lock;\n","import { FC } from 'react';\n\nconst OpenLock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M352 144c0-44.2 35.8-80 80-80s80 35.8 80 80v48c0 17.7 14.3 32 32 32s32-14.3 32-32V144C576 64.5 511.5 0 432 0S288 64.5 288 144v48H64c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V256c0-35.3-28.7-64-64-64H352V144z\" />\n    </svg>\n  );\n};\n\nexport default OpenLock;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport AclDialog from '../Dialog/AclDialog/AclDialog';\nimport Lock from '../Icons/Lock/Lock';\nimport OpenLock from '../Icons/OpenLock/OpenLock';\n\nexport const getAclSummary = (acl: AccessControlList) => {\n  return acl.requiredSecurityGroup === SecurityGroupType.Anonymous\n    ? t('Public')\n    : acl.requiredSecurityGroup === SecurityGroupType.Authenticated\n    ? t('Authenticated')\n    : acl.requiredSecurityGroup === SecurityGroupType.Connected\n    ? t('Connections')\n    : acl.requiredSecurityGroup === SecurityGroupType.Owner\n    ? t('Owner')\n    : t('Owner');\n};\n\nconst AclEditor = ({\n  acl,\n  onChange,\n  className,\n}: {\n  acl: AccessControlList;\n  onChange?: (acl: AccessControlList) => void;\n  className?: string;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const Icon = (props: { className: string }) => {\n    return acl.requiredSecurityGroup === SecurityGroupType.Anonymous ||\n      acl.requiredSecurityGroup === SecurityGroupType.Authenticated ? (\n      <OpenLock {...props} />\n    ) : (\n      <Lock {...props} />\n    );\n  };\n\n  return (\n    <>\n      <button\n        title={acl.requiredSecurityGroup}\n        className={`mr-2 inline-block ${onChange ? '' : 'cursor-default'} ${className ?? ''}`}\n        onClick={() => onChange && setIsEditing(true)}\n      >\n        <Icon className=\"h-5 w-5\" />\n      </button>\n      <AclDialog\n        acl={acl}\n        isOpen={isEditing}\n        title={t('Edit security')}\n        onCancel={() => {\n          setIsEditing(false);\n        }}\n        onConfirm={(newAcl) => {\n          onChange(newAcl);\n          setIsEditing(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AclEditor;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { FC, ReactNode } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport Select from '../Form/Select';\nimport LoadingParagraph from '../Loaders/LoadingParagraph/LoadingParagraph';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: ReactNode; text?: string; key: string; path: string; className?: string }[];\n  isLoading?: boolean;\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items, isLoading }) => {\n  const navigate = useNavigate();\n  const forceMobileView = items?.length >= 6;\n\n  if (isLoading === true) {\n    return <LoadingParagraph className=\"h-10\" />;\n  }\n\n  return (\n    <>\n      <div\n        className={`hidden flex-col flex-wrap ${!forceMobileView ? 'sm:flex' : ''} sm:flex-row ${\n          className ?? ''\n        }`}\n      >\n        {items.map((item) => {\n          return (\n            // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n            <NavLink\n              className={({ isActive }) =>\n                `flex-grow cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                  isActive\n                    ? 'border-indigo-500 text-indigo-500 dark:text-indigo-400'\n                    : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n                } ${item.className ?? ''}`\n              }\n              to={item.path}\n              key={item.key}\n              end\n            >\n              {item.title}\n            </NavLink>\n          );\n        })}\n      </div>\n      <Select\n        className={`${!forceMobileView ? 'sm:hidden' : ''} py-4`}\n        onChange={(e) => navigate(e.target.value)}\n        value={window.location.pathname}\n      >\n        {items.map((item) => {\n          return (\n            <option key={item.key} value={item.path}>\n              {item.text || item.title}\n            </option>\n          );\n        })}\n      </Select>\n    </>\n  );\n};\n\nexport default Submenu;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, BlogPostFile, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  page: string | undefined;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogs = ({ channelId, page }: useBlogPostsProps = { page: undefined }) => {\n  const pageSize = 50;\n  const { getSharedSecret } = useAuth();\n\n  const fetchBlogData = async ({ channelId, page }: useBlogPostsProps = { page: undefined }) => {\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    const foundBlogPosts: BlogPostFile<BlogContentVm>[] =\n      await client.blogPostProvider.getMasterPosts(page, pageSize);\n\n    let filteredBlogPosts = foundBlogPosts.filter((post) => {\n      if (!channelId) {\n        return true;\n      }\n      return post.publishTargets.some((channel) => channel.channelId === channelId);\n    });\n\n    // Process blog posts (Only until fixed in data upload)\n    filteredBlogPosts = filteredBlogPosts.map((item) => {\n      return {\n        ...item,\n        content: {\n          ...item.content,\n          itemKey: `${item.content.channelId}_${item.content.id}`,\n          slug: item.content.caption ? convertTextToSlug(item.content.caption) : item.content.id,\n        },\n      };\n    });\n\n    return filteredBlogPosts;\n  };\n\n  return useQuery(['blogs', channelId, page], () => fetchBlogData({ channelId, page }), {\n    refetchOnWindowFocus: false,\n  });\n};\n\nexport default useBlogs;\n","import { ChannelDefinition, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Section from '../../Sections/Section';\n\nconst ChannelCreator = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const { mutate: saveChannel, status: saveStatus } = useChannel().save;\n  const navigate = useNavigate();\n\n  const createChannel: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const newChannelDef: ChannelDefinition = {\n      channelId: '',\n      name: name,\n      description: description,\n      templateId: undefined,\n      acl: { requiredSecurityGroup: SecurityGroupType.Owner },\n    };\n\n    saveChannel(newChannelDef, {\n      onSuccess: () => {\n        navigate(`/owner/blog/${convertTextToSlug(newChannelDef.name)}`);\n      },\n    });\n\n    return false;\n  };\n\n  return (\n    <Section title=\"New: channel\" isOpaqueBg={true}>\n      <form onSubmit={createChannel}>\n        <div className=\"mb-5\">\n          <label htmlFor=\"channelName\">{t('Name')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelName\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Description')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelDescription\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"flex flex-row\">\n          <ActionButton className=\"ml-auto\" state={saveStatus}>\n            {t('Add channel')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelCreator;\n","import {\n  BlogArticle,\n  BlogPostFile,\n  BlogTypeUnion,\n  PublishTarget,\n} from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\nimport useChannels from '../../../hooks/blogs/useChannels';\n\nconst BlogTeaser = ({\n  className,\n  blog,\n  linkRoot,\n}: {\n  className?: string;\n  blog: BlogPostFile<BlogContentVm>;\n  linkRoot: string;\n}) => {\n  return (\n    <Link to={`${linkRoot}${blog.content.slug ?? '#'}`} className=\"contents\">\n      <div\n        className={`flex flex-nowrap px-5 py-8 transition-colors duration-200 hover:bg-slate-50 hover:dark:bg-slate-800 ${\n          className ?? ''\n        }`}\n      >\n        <div className=\"flex flex-col md:flex-grow md:flex-row\">\n          <div className=\"flex flex-shrink-0 md:order-3 md:mb-0 md:mt-3 md:w-32 md:flex-col md:text-right lg:w-64\">\n            <span className=\"title-font font-semibold text-gray-700 dark:text-white\">\n              {(blog.content as BlogTypeUnion).type.toUpperCase()}\n            </span>\n            <span className=\"pl-2 text-gray-500 md:mt-1 md:pl-0 md:text-sm\">\n              {new Date(blog.content.dateUnixTime).toLocaleDateString()}\n            </span>\n          </div>\n          <div className=\"md:order-2 md:flex-grow\">\n            <h2 className=\"title-font mb-2 flex flex-row text-2xl font-medium text-gray-900 dark:text-white\">\n              {blog.content.caption}\n              <BlogPublishTags publishTargets={blog.publishTargets} />\n            </h2>\n            {'abstract' in blog.content ? (\n              <p className=\"leading-relaxed\">{(blog.content as BlogArticle).abstract}</p>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nconst BlogPublishTags = ({ publishTargets }: { publishTargets?: PublishTarget[] }) => {\n  const { data: channels } = useChannels().fetch;\n  if (!publishTargets?.length) {\n    return;\n  }\n\n  return (\n    <span className=\"my-auto ml-2 flex flex-row flex-wrap\">\n      {publishTargets.map((target) => {\n        const publishedChannel = channels.find((channel) => channel.channelId === target.channelId);\n        if (!publishedChannel) {\n          return null;\n        }\n        return (\n          <span\n            key={publishedChannel.channelId}\n            className=\"mr-2 bg-green-300 px-2 py-1 text-xs\"\n            title={`${t('Published to')}: ${publishedChannel.name}`}\n          >\n            {publishedChannel.name}\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n\nexport default BlogTeaser;\n","import { ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport AclEditor from '../../AclEditor/AclEditor';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Select from '../../Form/Select';\nimport Textarea from '../../Form/Textarea';\nimport Section from '../../Sections/Section';\n\nconst ChannelEditor = ({\n  channel,\n  onCancel,\n}: {\n  channel: ChannelDefinitionVm;\n  onCancel: () => void;\n}) => {\n  const [channelData, setChannelData] = useState({ ...channel });\n  const {\n    save: { mutate: saveChannel, status: saveStatus },\n    remove: { mutate: removeChannel, status: removeChannelStatus },\n  } = useChannel();\n  const navigate = useNavigate();\n\n  if (!channel) {\n    return;\n  }\n\n  const handleChange = (e: { target: { value: unknown; name: string } }) => {\n    const newChannelData = { ...channelData };\n    newChannelData[e.target.name] = e.target.value;\n\n    setChannelData(newChannelData);\n  };\n\n  const tmpKeys = Object.keys(ChannelTemplate).filter((f) => !isNaN(Number(f)));\n  const tmpVals = Object.keys(ChannelTemplate).filter((f) => isNaN(Number(f)));\n\n  return (\n    <Section\n      title={\n        <>\n          <AclEditor\n            key={channelData.channelId}\n            acl={channelData.acl}\n            onChange={(acl) => {\n              handleChange({ target: { name: 'acl', value: acl } });\n            }}\n          />{' '}\n          {`${t('Edit')}: ${channel.name}`}\n        </>\n      }\n      isOpaqueBg={true}\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          saveChannel(channelData, {\n            onSuccess: () => {\n              navigate(`/owner/blog/${convertTextToSlug(channelData.name)}`);\n            },\n          });\n        }}\n      >\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Name')}</label>\n          <Input id=\"name\" name=\"name\" defaultValue={channel.name} onChange={handleChange} />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"description\">{t('Description')}</label>\n          <Textarea\n            id=\"description\"\n            name=\"description\"\n            defaultValue={channel.description}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"template\">{t('Template')}</label>\n          <Select\n            id=\"template\"\n            name=\"templateId\"\n            defaultValue={channel.templateId}\n            onChange={handleChange}\n          >\n            <option>{t('Make a selection')}</option>\n            {tmpKeys.map((tmpKey, index) => {\n              return (\n                <option value={tmpKey} key={tmpKey}>\n                  {t(tmpVals[index])}\n                </option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"-m-2 flex flex-row-reverse\">\n          <ActionButton\n            type=\"secondary\"\n            className=\"m-2\"\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            {t('Cancel')}\n          </ActionButton>\n          <ActionButton type=\"primary\" className=\"m-2\" state={saveStatus}>\n            {t('Save')}\n          </ActionButton>\n          <ActionButton\n            type=\"remove\"\n            icon={'trash'}\n            className=\"m-2 mr-auto\"\n            state={removeChannelStatus}\n            onClick={() => removeChannel(channel)}\n            confirmOptions={{\n              title: t('Remove channel'),\n              body: t(\n                'Are you sure you want to remove this channel, this action cannot be undone. All blogs published on this channel will also be unpublished.'\n              ),\n              buttonText: t('Remove'),\n            }}\n          >\n            {t('Remove')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelEditor;\n","import { BlogPostFile, ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport BlogTeaser from '../../Blog/BlogTeaser/BlogTeaser';\nimport ActionButton from '../../Buttons/ActionButton';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\nimport ChannelEditor from '../ChannelEditor/ChannelEditor';\n\nconst ChannelOverview = ({\n  channel,\n  blogs,\n  isParentLoading,\n}: {\n  channel: ChannelDefinitionVm | undefined;\n  blogs: BlogPostFile<BlogContentVm>[];\n  isParentLoading;\n}) => {\n  const linkRoot = `/owner/blog/${channel ? channel.slug : 'all'}/`;\n  const [isEditActive, setIsEditActive] = useState(false);\n\n  if (isParentLoading) {\n    return (\n      <div className=\"-m-5 pt-5\">\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n        <LoadingParagraph className=\"m-5 h-20\" />\n      </div>\n    );\n  }\n\n  if (!blogs) {\n    return <></>;\n  }\n\n  return (\n    <>\n      {channel ? (\n        isEditActive ? (\n          <ChannelEditor\n            key={channel.channelId}\n            channel={channel}\n            onCancel={() => setIsEditActive(false)}\n          />\n        ) : (\n          <section className=\"items-center bg-slate-50 p-3 dark:bg-slate-800 sm:flex sm:flex-row\">\n            <p className=\"sm:mr-2\">{channel.description ? channel.description : channel.name}</p>\n\n            <p className=\"ml-auto\">\n              {t('Template')}:{' '}\n              {parseInt(channel.templateId + '') === ChannelTemplate.LargeCards\n                ? t('LargeCards')\n                : parseInt(channel.templateId + '') === ChannelTemplate.ClassicBlog\n                ? t('ClassicBlog')\n                : t('MasonryLayout')}\n            </p>\n            <ActionButton\n              type=\"secondary\"\n              className=\"sm:ml-2\"\n              onClick={() => setIsEditActive(true)}\n            >\n              {t('Edit Channel')}\n            </ActionButton>\n          </section>\n        )\n      ) : null}\n\n      {blogs.length ? (\n        <div className=\"-mx-5 divide-y-2 divide-gray-100 dark:divide-gray-800\">\n          {blogs.map((blog) => {\n            return <BlogTeaser key={blog.content.itemKey} blog={blog} linkRoot={linkRoot} />;\n          })}\n        </div>\n      ) : (\n        <div className=\"mt-4\">{t('no-data-found')}</div>\n      )}\n    </>\n  );\n};\n\nexport default ChannelOverview;\n","import { Link, useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlogs from '../../../hooks/blogs/useBlogs';\nimport useChannels from '../../../hooks/blogs/useChannels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ChannelCreator from '../../Channel/ChannelCreator/ChannelCreator';\nimport ChannelOverview from '../../Channel/ChannelOverview/ChannelOverview';\nimport Plus from '../../Icons/Plus/Plus';\nimport Quote from '../../Icons/Quote/Quote';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport Submenu from '../../SubMenu/SubMenu';\n\nconst Blog = () => {\n  const { channelKey } = useParams();\n  const { data: channels, isLoading: isChannelsLoading } = useChannels().fetch;\n  const activeChannel = channels?.find((channel) => channel.slug === channelKey);\n  const { data: blogs, isLoading: isBlogsLoading } = useBlogs({\n    channelId: activeChannel?.channelId,\n    page: undefined,\n  });\n\n  return (\n    <section>\n      <PageMeta\n        icon={Quote}\n        title={t('Blog')}\n        actions={\n          <Link className=\"contents\" to={`/owner/blog/draft/new`}>\n            <ActionButton type=\"primary\" icon=\"plus\" className=\"m-2\">\n              {t('New')}\n            </ActionButton>\n          </Link>\n        }\n      />\n\n      <Submenu\n        items={[\n          {\n            title: t('Drafts'),\n            key: '',\n            path: `/owner/blog`,\n          },\n          ...(channels ?? []).map((channel) => {\n            return {\n              title: channel.name,\n              key: channel.channelId,\n              path: `/owner/blog/${channel.slug}`,\n            };\n          }),\n          {\n            title: <Plus className=\"h-5 w-5\" />,\n            text: `-- ${t('Create new channel')} --`,\n            key: 'new',\n            className: 'flex-grow-0',\n            path: `/owner/blog/new`,\n          },\n        ]}\n        isLoading={isChannelsLoading}\n      />\n\n      <div className=\"pt-5\">\n        {channelKey === 'new' ? (\n          <ChannelCreator />\n        ) : (\n          <ChannelOverview\n            channel={activeChannel}\n            blogs={blogs}\n            isParentLoading={isChannelsLoading || isBlogsLoading}\n          />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Blog;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, ChannelDefinition, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n}\n\nconst useChannels = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundChannels = await client.blogDefinitionProvider.getChannelDefinitions();\n\n    return foundChannels.map((channel) => {\n      return {\n        ...channel,\n        slug: convertTextToSlug(channel.name),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return {\n    fetch: useQuery(['channels'], () => fetchData(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useChannels;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["props","type","className","title","confirmText","isOpen","acl","onConfirm","onCancel","target","usePortal","useState","newAcl","setNewAcl","updateSecurityGroup","e","requiredSecurityGroup","SecurityGroupType","value","dialog","DialogWrapper","onClose","id","name","checked","onChange","htmlFor","ActionButton","onClick","t","createPortal","xmlns","viewBox","fill","d","getAclSummary","isEditing","setIsEditing","Icon","children","isOpaqueBg","isBorderLess","items","isLoading","navigate","useNavigate","forceMobileView","length","map","item","isActive","to","path","end","key","window","location","pathname","text","page","undefined","channelId","pageSize","useAuth","getSharedSecret","fetchBlogData","client","Client","api","ApiType","sharedSecret","blogPostProvider","getMasterPosts","foundBlogPosts","filteredBlogPosts","filter","post","publishTargets","some","channel","content","itemKey","slug","caption","convertTextToSlug","useQuery","refetchOnWindowFocus","setName","description","setDescription","useChannel","save","saveChannel","mutate","saveStatus","status","Section","onSubmit","preventDefault","newChannelDef","templateId","onSuccess","Input","required","state","BlogPublishTags","channels","useChannels","fetch","data","publishedChannel","find","blog","linkRoot","toUpperCase","Date","dateUnixTime","toLocaleDateString","abstract","channelData","setChannelData","remove","removeChannel","removeChannelStatus","handleChange","newChannelData","tmpKeys","Object","keys","ChannelTemplate","f","isNaN","Number","tmpVals","AclEditor","defaultValue","Textarea","Select","tmpKey","index","icon","confirmOptions","body","buttonText","blogs","isParentLoading","isEditActive","setIsEditActive","LoadingParagraph","parseInt","channelKey","useParams","isChannelsLoading","activeChannel","useBlogs","isBlogsLoading","PageMeta","Quote","actions","Plus","fetchData","blogDefinitionProvider","getChannelDefinitions","foundChannels","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}