{"version":3,"file":"static/js/225.5e3fdc78.chunk.js","mappings":"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","sources":["components/Icons/Check/Check.tsx","components/Icons/Loader/Loader.tsx","components/Icons/Save/Save.tsx","components/Buttons/ActionButton.tsx","components/Buttons/SaveStatus.tsx","components/Form/Input.tsx","components/Form/Select.tsx","components/Form/Textarea.tsx","components/Icons/Exclamation/Exclamation.tsx","components/Icons/Plus/Plus.tsx","components/Icons/Trash/Trash.tsx","components/Layout/PageMeta/PageMeta.tsx","components/Sections/Section.tsx","hooks/blogs/useBlogs.ts","components/Channel/ChannelCreator/ChannelCreator.tsx","components/Blog/BlogTeaser/BlogTeaser.tsx","components/Channel/ChannelEditor/ChannelEditor.tsx","components/Channel/ChannelOverview/ChannelOverview.tsx","components/SubMenu/SubMenu.tsx","components/Templates/Blog/Blog.tsx","helpers/common.ts","helpers/i18n/dictionary.ts","hooks/blogs/useChannel.ts","hooks/blogs/useChannels.ts","webpack://owner-app/./src/components/Icons/Loader/Loader.css?58b5","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { FC } from 'react';\n\nconst Check: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n      className={className}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n      <path d=\"M22 4L12 14.01l-3-3\"></path>\n    </svg>\n  );\n};\n\nexport default Check;\n","import { FC } from 'react';\n\nrequire('./Loader.css');\n\nconst Loader: FC<IconProps> = ({ className }) => {\n  return (\n    <div className={`loader ${className}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FC } from 'react';\n\nconst Save: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M433.1 129.1l-83.9-83.9C342.3 38.32 327.1 32 316.1 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V163.9C448 152.9 441.7 137.7 433.1 129.1zM224 416c-35.34 0-64-28.66-64-64s28.66-64 64-64s64 28.66 64 64S259.3 416 224 416zM320 208C320 216.8 312.8 224 304 224h-224C71.16 224 64 216.8 64 208v-96C64 103.2 71.16 96 80 96h224C312.8 96 320 103.2 320 112V208z\" />\n    </svg>\n  );\n};\n\nexport default Save;\n","import { FC, ReactNode } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Check from '../Icons/Check/Check';\nimport Exclamation from '../Icons/Exclamation/Exclamation';\nimport Loader from '../Icons/Loader/Loader';\nimport Plus from '../Icons/Plus/Plus';\nimport Save from '../Icons/Save/Save';\nimport Trash from '../Icons/Trash/Trash';\n\ntype ActionButtonProps = {\n  children?: ReactNode;\n  className?: string;\n  icon?: 'save' | 'send' | 'plus' | 'trash';\n  type?: 'primary' | 'secondary' | 'remove';\n  state?: 'loading' | 'success' | 'failed' | 'error' | 'idle';\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({\n  children,\n  onClick,\n  className,\n  icon,\n  type,\n  state,\n}) => {\n  const Icon = (props: { className: string }) => {\n    if (state === 'loading') {\n      return <Loader {...props} />;\n    }\n    if (state === 'success') {\n      return <Check {...props} />;\n    }\n    if (state === 'failed' || state === 'error') {\n      return <Exclamation {...props} />;\n    }\n\n    return icon === 'save' ? (\n      <Save {...props} />\n    ) : icon === 'send' ? (\n      <Arrow {...props} />\n    ) : icon === 'plus' ? (\n      <Plus {...props} />\n    ) : icon === 'trash' ? (\n      <Trash {...props} />\n    ) : (\n      <></>\n    );\n  };\n\n  const colorClasses =\n    state === 'failed' || state === 'error'\n      ? 'bg-red-500 hover:bg-red-600 text-white'\n      : type === 'secondary'\n      ? 'bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-800 dark:text-white'\n      : type === 'remove'\n      ? 'bg-red-200 hover:bg-red-400 dark:bg-red-700 hover:dark:bg-red-800 dark:text-white'\n      : 'bg-green-500 hover:bg-green-600 text-white';\n\n  return (\n    <button\n      className={`flex ${\n        children ? 'min-w-[6rem]' : ''\n      } flex-row rounded-md px-3 py-2 text-left text-sm ${colorClasses}  ${\n        state === 'loading' ? 'animate-pulse' : ''\n      } ${className}`}\n      disabled={state === 'loading'}\n      onClick={onClick}\n    >\n      <span>{children}</span>\n      <Icon className={'my-auto ml-auto h-4 w-4'} />\n    </button>\n  );\n};\n\nexport default ActionButton;\n","import { useEffect, useState } from 'react';\n\nconst seconds = 60000;\nconst minutes = 600000;\n\nconst SaveStatus = ({\n  className,\n  state,\n}: {\n  className: string;\n  state: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  const [lastSave, setLastSave] = useState<Date>(null);\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (state === 'success') {\n      setLastSave(new Date());\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 30000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [now]);\n\n  if (!lastSave) {\n    return null;\n  }\n\n  const diff = now.getTime() - lastSave.getTime();\n  const text = lastSave\n    ? diff <= seconds\n      ? 'a few seconds ago'\n      : diff <= minutes\n      ? 'a few minutes ago'\n      : lastSave.toLocaleString()\n    : '';\n\n  return text ? <p className={`${className} text-sm`}>Last saved {text}</p> : null;\n};\n\nexport default SaveStatus;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { FC } from 'react';\n\nconst Exclamation: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\" />\n    </svg>\n  );\n};\n\nexport default Exclamation;\n","import { FC } from 'react';\n\nconst Plus: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path d=\"M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z\" />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { FC } from 'react';\n\nconst Trash: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM31.1 128H416V448C416 483.3 387.3 512 352 512H95.1C60.65 512 31.1 483.3 31.1 448V128zM111.1 208V432C111.1 440.8 119.2 448 127.1 448C136.8 448 143.1 440.8 143.1 432V208C143.1 199.2 136.8 192 127.1 192C119.2 192 111.1 199.2 111.1 208zM207.1 208V432C207.1 440.8 215.2 448 223.1 448C232.8 448 240 440.8 240 432V208C240 199.2 232.8 192 223.1 192C215.2 192 207.1 199.2 207.1 208zM304 208V432C304 440.8 311.2 448 320 448C328.8 448 336 440.8 336 432V208C336 199.2 328.8 192 320 192C311.2 192 304 199.2 304 208z\" />\n    </svg>\n  );\n};\n\nexport default Trash;\n","import { ReactNode } from 'react';\nimport SaveStatus from '../../Buttons/SaveStatus';\n\nconst PageMeta = ({\n  title,\n  actions,\n  saveStatus,\n}: {\n  title?: ReactNode;\n  actions?: ReactNode;\n  saveStatus?: 'error' | 'idle' | 'loading' | 'success';\n}) => {\n  return (\n    <section\n      className=\"-my-8 -mx-10 mb-10 border-b-2 border-gray-100 bg-slate-50 py-8\n    px-10 dark:border-gray-700 dark:bg-slate-800\"\n    >\n      <div className=\"flex flex-row\">\n        {title && <h1 className=\"mb-5 text-4xl dark:text-white\">{title}</h1>}\n        <div className=\"ml-auto \">\n          <div className=\"flex flex-row\">{actions}</div>\n          {saveStatus && <SaveStatus className=\"mt-1\" state={saveStatus} />}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PageMeta;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? 'rounded-lg border-[1px] border-gray-200 border-opacity-80 dark:border-gray-700'\n          : 'bg-slate-50 dark:bg-slate-800'\n      } px-5  dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, BlogContent, BlogPostPublishStatus, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\ntype useBlogPostsProps = {\n  channelId?: string;\n  page: number;\n};\n\nexport interface BlogContentVm extends BlogContent {\n  itemKey?: string;\n}\n\nconst useBlogs = ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n  const pageSize = 50;\n  const { getSharedSecret } = useAuth();\n\n  const fetchBlogData = async ({ channelId, page }: useBlogPostsProps = { page: 1 }) => {\n    const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n    let foundBlogPosts: BlogContentVm[];\n\n    // If located in a specific channel, only fetch published in those, otherwise fallback to drafts;\n    if (channelId) {\n      //client.blogPostProvider.getPosts(BlogPostPublishStatus.Published);\n      foundBlogPosts = await client.blogPostReadonlyProvider.getPosts(\n        channelId,\n        'Article',\n        page,\n        pageSize\n      );\n    } else {\n      foundBlogPosts = (\n        await client.blogPostProvider.getPosts(BlogPostPublishStatus.Draft, page, pageSize)\n      ).map((blogFile) => blogFile.content);\n    }\n\n    // Process blog posts (Only until fixed in data upload)\n    foundBlogPosts = foundBlogPosts\n      .filter((item) => item.id)\n      .map((item) => {\n        return {\n          ...item,\n          slug: item.caption ? convertTextToSlug(item.caption) : item.id,\n          itemKey: `${item.channelId}_${item.id}_page-${page}`,\n        };\n      });\n\n    return foundBlogPosts;\n  };\n\n  return useQuery(['blogs', channelId, page], () => fetchBlogData({ channelId, page }), {\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n  });\n};\n\nexport default useBlogs;\n","import { ChannelDefinition } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Section from '../../Sections/Section';\n\nconst ChannelCreator = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [, { mutate: saveChannel, status: saveStatus }] = useChannel();\n  const navigate = useNavigate();\n\n  const createChannel: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const newChannelDef: ChannelDefinition = {\n      channelId: '',\n      name: name,\n      description: description,\n      templateId: undefined,\n    };\n\n    saveChannel(newChannelDef, {\n      onSuccess: () => {\n        navigate(`/owner/blog/${convertTextToSlug(newChannelDef.name)}`);\n      },\n    });\n\n    return false;\n  };\n\n  return (\n    <Section title=\"New: channel\" isOpaqueBg={true}>\n      <form onSubmit={createChannel}>\n        <div className=\"mb-5\">\n          <label htmlFor=\"channelName\">{t('Name')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelName\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Description')}</label>\n          <Input\n            id=\"name\"\n            name=\"channelDescription\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <div className=\"flex flex-row\">\n          <ActionButton className=\"ml-auto\" state={saveStatus}>\n            {t('Add channel')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelCreator;\n","import { BlogArticle } from '@youfoundation/transit-lib';\nimport { Link } from 'react-router-dom';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\n\nconst BlogTeaser = ({\n  className,\n  blog,\n  linkRoot,\n}: {\n  className?: string;\n  blog: BlogContentVm;\n  linkRoot: string;\n}) => {\n  return (\n    <div\n      className={`flex flex-nowrap px-5 py-8 transition-colors duration-200 hover:bg-slate-50 hover:dark:bg-slate-800 ${\n        className ?? ''\n      }`}\n    >\n      <Link to={`${linkRoot}${blog.slug ?? '#'}`} className=\"contents\">\n        <div className=\"flex flex-col md:flex-grow md:flex-row\">\n          <div className=\"flex flex-shrink-0 md:order-3 md:mb-0 md:mt-3 md:w-32 md:flex-col md:text-right lg:w-64\">\n            <span className=\"title-font font-semibold text-gray-700 dark:text-white\">\n              {blog.type.toUpperCase()}\n            </span>\n            <span className=\"pl-2 text-gray-500 md:mt-1 md:pl-0 md:text-sm\">\n              {new Date(blog.dateUnixTime).toLocaleDateString()}\n            </span>\n          </div>\n          <div className=\"md:order-2 md:flex-grow\">\n            <h2 className=\"title-font mb-2 text-2xl font-medium text-gray-900 dark:text-white\">\n              {blog.caption}\n            </h2>\n            {'abstract' in blog ? (\n              <p className=\"leading-relaxed\">{(blog as BlogArticle).abstract}</p>\n            ) : null}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogTeaser;\n","import { ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTextToSlug } from '../../../helpers/common';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useChannel from '../../../hooks/blogs/useChannel';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport Select from '../../Form/Select';\nimport Textarea from '../../Form/Textarea';\nimport Section from '../../Sections/Section';\n\nconst ChannelEditor = ({\n  channel,\n  onCancel,\n}: {\n  channel: ChannelDefinitionVm;\n  onCancel: () => void;\n}) => {\n  const [channelData, setChannelData] = useState({ ...channel });\n  const [, { mutate: saveChannel, status: saveStatus }] = useChannel();\n  const navigate = useNavigate();\n\n  if (!channel) {\n    return;\n  }\n\n  const handleChange = (e: { target: { value: string; name: string } }) => {\n    const newChannelData = { ...channelData };\n    newChannelData[e.target.name] = e.target.value;\n\n    setChannelData(newChannelData);\n  };\n\n  const tmpKeys = Object.keys(ChannelTemplate).filter((f) => !isNaN(Number(f)));\n  const tmpVals = Object.keys(ChannelTemplate).filter((f) => isNaN(Number(f)));\n\n  return (\n    <Section title={`${t('Edit')}: ${channel.name}`} isOpaqueBg={true}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          saveChannel(channelData, {\n            onSuccess: () => {\n              navigate(`/owner/blog/${convertTextToSlug(channelData.name)}`);\n            },\n          });\n        }}\n      >\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\">{t('Name')}</label>\n          <Input id=\"name\" name=\"name\" defaultValue={channel.name} onChange={handleChange} />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"description\">{t('Description')}</label>\n          <Textarea\n            id=\"description\"\n            name=\"description\"\n            defaultValue={channel.description}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"template\">{t('Template')}</label>\n          <Select\n            id=\"template\"\n            name=\"templateId\"\n            defaultValue={channel.templateId}\n            onChange={handleChange}\n          >\n            <option>{t('Make a selection')}</option>\n            {tmpKeys.map((tmpKey, index) => {\n              return (\n                <option value={tmpKey} key={tmpKey}>\n                  {t(tmpVals[index])}\n                </option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"flex flex-row\">\n          <ActionButton\n            type=\"secondary\"\n            className=\"ml-auto\"\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            {t('Cancel')}\n          </ActionButton>\n          <ActionButton type=\"primary\" className=\"ml-2\" state={saveStatus}>\n            {t('Save')}\n          </ActionButton>\n        </div>\n      </form>\n    </Section>\n  );\n};\n\nexport default ChannelEditor;\n","import { ChannelTemplate } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport { BlogContentVm } from '../../../hooks/blogs/useBlogs';\nimport { ChannelDefinitionVm } from '../../../hooks/blogs/useChannels';\nimport BlogTeaser from '../../Blog/BlogTeaser/BlogTeaser';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ChannelEditor from '../ChannelEditor/ChannelEditor';\n\nconst ChannelOverview = ({\n  channel,\n  blogs,\n}: {\n  channel: ChannelDefinitionVm | undefined;\n  blogs: BlogContentVm[];\n}) => {\n  const linkRoot = `/owner/blog/${channel ? channel.slug : 'all'}/`;\n  const [isEditActive, setIsEditActive] = useState(false);\n\n  return (\n    <>\n      {channel ? (\n        isEditActive ? (\n          <ChannelEditor channel={channel} onCancel={() => setIsEditActive(false)} />\n        ) : (\n          <section className=\"items-center bg-slate-50 p-3 dark:bg-slate-800 sm:flex sm:flex-row\">\n            <p className=\"sm:mr-2\">{channel.description}</p>\n\n            <p className=\"ml-auto\">\n              {t('Template')}:{' '}\n              {parseInt(channel.templateId + '') === ChannelTemplate.LargeCards\n                ? t('LargeCards')\n                : parseInt(channel.templateId + '') === ChannelTemplate.ClassicBlog\n                ? t('ClassicBlog')\n                : t('MasonryLayout')}\n            </p>\n            <ActionButton\n              type=\"secondary\"\n              className=\"sm:ml-2\"\n              onClick={() => setIsEditActive(true)}\n            >\n              {t('Edit Channel')}\n            </ActionButton>\n          </section>\n        )\n      ) : null}\n\n      {blogs.length ? (\n        <div className=\"-mx-5 divide-y-2 divide-gray-100 dark:divide-gray-800\">\n          {blogs.map((blog) => {\n            return <BlogTeaser key={blog.itemKey} blog={blog} linkRoot={linkRoot} />;\n          })}\n        </div>\n      ) : (\n        <div className=\"mt-4\">{t('no-data-found')}</div>\n      )}\n    </>\n  );\n};\n\nexport default ChannelOverview;\n","import { FC, ReactNode } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface SubmenuProps {\n  className?: string;\n  items: { title: ReactNode; key: string; path: string; className?: string }[];\n}\n\nconst Submenu: FC<SubmenuProps> = ({ className, items }) => {\n  return (\n    <div className={`flex ${className}`}>\n      {items.map((item) => {\n        return (\n          // Only NavLink Supports isActive styling https://reactrouter.com/docs/en/v6/components/nav-link\n          <NavLink\n            className={({ isActive }) =>\n              `flex-grow cursor-pointer border-b-2 py-2 px-1 text-lg ${\n                isActive\n                  ? 'border-indigo-500 text-indigo-500 dark:text-indigo-400'\n                  : 'border-gray-300 transition-colors duration-300 hover:border-indigo-400 dark:border-gray-800 hover:dark:border-indigo-600'\n              } ${item.className ?? ''}`\n            }\n            to={item.path}\n            key={item.key}\n            end\n          >\n            {item.title}\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Submenu;\n","import { Link, useParams } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useBlogs from '../../../hooks/blogs/useBlogs';\nimport useChannels from '../../../hooks/blogs/useChannels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport ChannelCreator from '../../Channel/ChannelCreator/ChannelCreator';\nimport ChannelOverview from '../../Channel/ChannelOverview/ChannelOverview';\nimport Plus from '../../Icons/Plus/Plus';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport Submenu from '../../SubMenu/SubMenu';\n\nconst Blog = () => {\n  const { channelKey } = useParams();\n  const [{ data: channels, isLoading: isChannelsLoading }] = useChannels();\n  const activeChannel = channels?.find((channel) => channel.slug === channelKey);\n  const { data: blogs, isLoading: isBlogsLoading } = useBlogs({\n    channelId: activeChannel?.channelId,\n    page: 1,\n  });\n\n  if (!channels || !blogs || isChannelsLoading || isBlogsLoading) {\n    return <>Loading</>;\n  }\n\n  return (\n    <section>\n      <PageMeta\n        title={t('Blog')}\n        actions={\n          <Link className=\"contents\" to={`/owner/blog/draft/new`}>\n            <ActionButton type=\"primary\" icon=\"plus\" className=\"ml-auto\">\n              {t('New')}\n            </ActionButton>\n          </Link>\n        }\n      />\n\n      <Submenu\n        items={[\n          {\n            title: t('Drafts'),\n            key: '',\n            path: `/owner/blog`,\n          },\n          ...channels.map((channel) => {\n            return {\n              title: channel.name,\n              key: channel.channelId,\n              path: `/owner/blog/${channel.slug}`,\n            };\n          }),\n          {\n            title: <Plus className=\"h-5 w-5\" />,\n            key: 'new',\n            className: 'flex-grow-0',\n            path: `/owner/blog/new`,\n          },\n        ]}\n      />\n\n      <div className=\"pt-5\">\n        {channelKey === 'new' ? (\n          <ChannelCreator />\n        ) : (\n          <ChannelOverview channel={activeChannel} blogs={blogs} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Blog;\n","export const convertTextToSlug = (text: string) => {\n  return text.split(' ').join('-').toLowerCase();\n};\n","const enLocale = [\n  ['login', 'Login'],\n  ['logout', 'Logout'],\n  ['signup', 'Signup'],\n  ['all', 'All'],\n  ['learn more', 'Learn more'],\n  ['load more', 'Load more'],\n  ['blog', 'Blog'],\n  ['me', 'Me'],\n  ['loading', 'Loading'],\n  ['section-empty-attributes', \"You don't have any attributes in this section\"],\n  ['no-data-found', 'No data found'],\n  ['masonrylayout', 'Masonry'],\n  ['largecards', 'Grid'],\n  ['classicblog', 'List'],\n] as const;\n\nconst internalDict: Map<string, string> = new Map(enLocale);\n\nconst t = (key: string) => {\n  return internalDict.get(key.toLowerCase()) ?? key;\n};\n\nexport { t };\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ApiType, ChannelDefinition, Client } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useChannel = ({ channelId }: { channelId?: string } = {}) => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async (channelId?: string) => {\n    if (!channelId) {\n      return;\n    }\n    const foundAttribute = await client.blogDefinitionProvider.getChannelDefinition(channelId);\n\n    return foundAttribute;\n  };\n\n  const saveData = async (channelDef: ChannelDefinition) => {\n    await client.blogDefinitionProvider.saveChannelDefinition(channelDef);\n  };\n\n  return [\n    useQuery(['channel', channelId], () => fetchData(channelId), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n    useMutation(saveData, {\n      onSuccess: (_data, variables) => {\n        // Boom baby!\n        if (variables.channelId) {\n          queryClient.removeQueries(['channel', variables.channelId]);\n        } else {\n          queryClient.removeQueries(['channel']);\n        }\n        queryClient.removeQueries(['channels']);\n      },\n    }),\n  ] as const;\n};\n\nexport default useChannel;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, ChannelDefinition, Client } from '@youfoundation/transit-lib';\nimport { convertTextToSlug } from '../../helpers/common';\nimport useAuth from '../auth/useAuth';\n\nexport interface ChannelDefinitionVm extends ChannelDefinition {\n  slug: string;\n}\n\nconst useChannels = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundChannels = await client.blogDefinitionProvider.getChannelDefinitions();\n\n    return foundChannels.map((channel) => {\n      return {\n        ...channel,\n        slug: convertTextToSlug(channel.name),\n      } as ChannelDefinitionVm;\n    });\n  };\n\n  return [\n    useQuery(['channels'], () => fetchData(), {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }),\n  ] as const;\n};\n\nexport default useChannels;\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["className","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","require","xmlns","children","onClick","icon","type","state","Icon","props","Exclamation","Arrow","Plus","Trash","colorClasses","disabled","useState","lastSave","setLastSave","Date","now","setNow","useEffect","timer","setTimeout","clearTimeout","diff","getTime","text","toLocaleString","title","actions","saveStatus","isOpaqueBg","page","channelId","pageSize","useAuth","getSharedSecret","fetchBlogData","client","Client","api","ApiType","sharedSecret","blogPostReadonlyProvider","getPosts","foundBlogPosts","blogPostProvider","BlogPostPublishStatus","map","blogFile","content","filter","item","id","slug","caption","convertTextToSlug","itemKey","useQuery","refetchOnMount","refetchOnWindowFocus","name","setName","description","setDescription","useChannel","saveChannel","mutate","status","navigate","useNavigate","Section","onSubmit","e","preventDefault","newChannelDef","templateId","undefined","onSuccess","htmlFor","t","Input","onChange","target","value","required","ActionButton","blog","linkRoot","to","toUpperCase","dateUnixTime","toLocaleDateString","abstract","channel","onCancel","channelData","setChannelData","handleChange","newChannelData","tmpKeys","Object","keys","ChannelTemplate","f","isNaN","Number","tmpVals","defaultValue","Textarea","Select","tmpKey","index","blogs","isEditActive","setIsEditActive","parseInt","length","items","isActive","path","end","key","channelKey","useParams","useChannels","channels","data","isChannelsLoading","isLoading","activeChannel","find","useBlogs","isBlogsLoading","PageMeta","split","join","toLowerCase","internalDict","Map","get","queryClient","useQueryClient","fetchData","blogDefinitionProvider","getChannelDefinition","foundAttribute","saveData","channelDef","saveChannelDefinition","useMutation","_data","variables","removeQueries","getChannelDefinitions","foundChannels","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}