{"version":3,"file":"static/js/561.6cb810c9.chunk.js","mappings":"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","sources":["components/Dialog/CircleDialog/CircleDialog.tsx","components/Form/Input.tsx","components/Form/PermissionFlagsEditor.tsx","components/Form/PermissionLevelEditor.tsx","components/Form/Textarea.tsx","components/Icons/Triangle/Triangle.tsx","components/Templates/Circles/Circles.tsx","hooks/circles/useCircles.ts","hooks/drives/useDrives.ts","provider/permission/permissionLevels.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circle/useCircle';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useDrives from '../../../hooks/drives/useDrives';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport {\n  circlePermissionLevels,\n  drivePermissionLevels,\n} from '../../../provider/permission/permissionLevels';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Input from '../../Form/Input';\nimport PermissionFlagsEditor from '../../Form/PermissionFlagsEditor';\nimport PermissionLevelEditor from '../../Form/PermissionLevelEditor';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst CircleDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  defaultValue,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n  defaultValue?: CircleDefinition;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const { mutateAsync: createOrUpdate, status: createOrUpdateStatus } = useCircle(\n    {}\n  ).createOrUpdate;\n  const { data: drives } = useDrives().fetch;\n\n  const [newCircleDefinition, setNewCircleDefinition] = useState<CircleDefinition>({\n    driveGrants: defaultValue.driveGrants || [],\n    ...defaultValue,\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setNewCircleDefinition({\n        driveGrants: defaultValue.driveGrants || [],\n        ...defaultValue,\n      });\n    }\n  }, [isOpen]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const reset = () => {\n    setNewCircleDefinition({\n      driveGrants: defaultValue.driveGrants || [],\n      ...defaultValue,\n    });\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel} size=\"4xlarge\">\n      <>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            await createOrUpdate(newCircleDefinition);\n            onConfirm();\n\n            return false;\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Name')}</label>\n            <Input\n              id=\"name\"\n              name=\"circleName\"\n              defaultValue={newCircleDefinition.name}\n              onChange={(e) => {\n                setNewCircleDefinition({ ...newCircleDefinition, name: e.target.value });\n              }}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Description')}</label>\n            <Textarea\n              id=\"description\"\n              name=\"circleDescription\"\n              defaultValue={newCircleDefinition.description}\n              onChange={(e) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  description: e.target.value,\n                });\n              }}\n              required\n            />\n          </div>\n\n          <div className=\"mb-5 flex flex-row\">\n            <label htmlFor=\"name\" className=\"my-auto mr-2\">\n              {t('Permissions')}\n            </label>\n            <PermissionFlagsEditor\n              className=\"ml-auto\"\n              permissionLevels={circlePermissionLevels}\n              defaultValue={newCircleDefinition.permissions.keys ?? [0]}\n              onChange={(newValue) => {\n                setNewCircleDefinition({\n                  ...newCircleDefinition,\n                  permissions: { keys: newValue },\n                });\n              }}\n            />\n          </div>\n\n          {drives?.length ? (\n            <div className=\"my-7\">\n              <h2 className=\"mb-4 text-lg\">Drive Permissions:</h2>\n\n              {drives.map((drive, index) => {\n                return (\n                  <div key={index} className=\"mb-2 flex flex-row\">\n                    <label\n                      htmlFor={`${drive.targetDriveInfo.alias}-${drive.targetDriveInfo.type}`}\n                      className=\"my-auto mr-2\"\n                    >\n                      {drive.name}\n                    </label>\n                    <PermissionLevelEditor\n                      className=\"ml-auto\"\n                      permissionLevels={drivePermissionLevels}\n                      defaultValue={\n                        newCircleDefinition.driveGrants?.find(\n                          (driveGrant) =>\n                            driveGrant.permissionedDrive.drive.alias ===\n                              drive.targetDriveInfo.alias &&\n                            driveGrant.permissionedDrive.drive.type === drive.targetDriveInfo.type\n                        )?.permissionedDrive.permission ?? 0\n                      }\n                      onChange={(value) => {\n                        if (value > 0) {\n                          setNewCircleDefinition({\n                            ...newCircleDefinition,\n                            driveGrants: [\n                              ...(newCircleDefinition?.driveGrants?.filter(\n                                (driveGrant) =>\n                                  driveGrant.permissionedDrive?.drive.alias !==\n                                    drive.targetDriveInfo.alias ||\n                                  driveGrant.permissionedDrive?.drive.type !==\n                                    drive.targetDriveInfo.type\n                              ) || []),\n                              {\n                                permissionedDrive: {\n                                  drive: drive.targetDriveInfo,\n                                  permission: value,\n                                },\n                              },\n                            ],\n                          });\n                        } else {\n                          setNewCircleDefinition({\n                            ...newCircleDefinition,\n                            driveGrants: [\n                              ...newCircleDefinition.driveGrants.filter(\n                                (driveGrant) =>\n                                  driveGrant.permissionedDrive.drive.alias !==\n                                    drive.targetDriveInfo.alias ||\n                                  driveGrant.permissionedDrive.drive.type !==\n                                    drive.targetDriveInfo.type\n                              ),\n                            ],\n                          });\n                        }\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={createOrUpdateStatus} icon={'send'}>\n              {confirmText || t('Add Circle')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={() => onCancel()}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default CircleDialog;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../Icons/Check/Check';\nimport Triangle from '../Icons/Triangle/Triangle';\n\nconst PermissionFlagsEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number[]) => void;\n  defaultValue: number[];\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue =\n    defaultValue?.length >= 2\n      ? 'Multiple'\n      : (defaultValue?.[0]\n          ? permissionLevels.find((level) => level.value === defaultValue[0])?.name\n          : permissionLevels[0].name) ?? permissionLevels[0].name;\n\n  const setValue = (value: number[]) => {\n    setInnerValue(value);\n    onChange && onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={\n                value.some((val) => val === level.value) ||\n                (value.length === 0 && level.value === 0)\n              }\n              onChange={() =>\n                value.some((val) => val === level.value)\n                  ? setValue(value.filter((val) => val !== level.value))\n                  : level.value !== 0\n                  ? setValue([...value, level.value])\n                  : setValue([])\n              }\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[6rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 flex-shrink-0 ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionFlagsEditor;\n","import { ReactNode, useRef, useState } from 'react';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Check from '../Icons/Check/Check';\nimport Triangle from '../Icons/Triangle/Triangle';\n\nconst PermissionLevelEditor = ({\n  className,\n  permissionLevels,\n  onChange,\n  defaultValue,\n}: {\n  className: string;\n  permissionLevels: { name: string; value: number }[];\n  onChange?: (value: number) => void;\n  defaultValue: number;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setInnerValue] = useState(defaultValue);\n  const wrapperRef = useRef(null);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n\n  const currentValue = permissionLevels.reduce((prevValue, currValue) => {\n    if (currValue.value > prevValue.value && currValue.value <= defaultValue) {\n      return currValue;\n    }\n\n    return prevValue;\n  }, permissionLevels[0]);\n\n  const setValue = (value: number) => {\n    setInnerValue(value);\n    onChange(value);\n  };\n\n  return (\n    <div className={className ?? ''}>\n      <div\n        className=\"relative cursor-pointer rounded-md bg-slate-100 dark:bg-slate-800\"\n        onClick={() => setIsOpen(!isOpen)}\n        ref={wrapperRef}\n      >\n        <div className=\"flex min-w-[6rem] flex-row py-1 px-2\">\n          <span className=\"my-auto mr-2 select-none\">{currentValue.name}</span>{' '}\n          <Triangle className=\"my-auto ml-auto h-2 w-2 rotate-90\" />\n        </div>\n        <ul\n          className={`absolute top-[100%] right-0 overflow-hidden bg-white dark:bg-slate-800 ${\n            isOpen\n              ? 'z-10 max-h-[30rem] border border-slate-100 py-3 shadow-2xl dark:border-slate-700'\n              : 'max-h-0'\n          }`}\n        >\n          {permissionLevels.map((level) => (\n            <Option\n              key={level.value}\n              isChecked={level.value === 0 ? value === level.value : value >= level.value}\n              onChange={() => (value !== level.value ? setValue(level.value) : setValue(0))}\n            >\n              {level.name}\n            </Option>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Option = ({\n  className,\n  isChecked,\n  children,\n  onChange,\n}: {\n  className?: string;\n  isChecked: boolean;\n  children: ReactNode;\n  onChange: () => void;\n}) => {\n  return (\n    <li\n      className={`flex min-w-[6rem] cursor-pointer select-none flex-row py-1 px-4 hover:bg-slate-100 dark:hover:bg-slate-700 ${className}`}\n      onClick={onChange}\n    >\n      <Check\n        className={`my-auto mr-3 h-4 w-4 flex-shrink-0  ${\n          isChecked ? 'text-slate-700 dark:text-slate-200' : 'text-transparent'\n        }`}\n      />{' '}\n      <span className={`mr-auto block h-full py-1`}>{children}</span>\n    </li>\n  );\n};\n\nexport default PermissionLevelEditor;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { FC } from 'react';\n\nconst Triangle: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 384 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\" />\n    </svg>\n  );\n};\n\nexport default Triangle;\n","import { BuiltInProfiles, getTargetDriveFromProfileId } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport CirclesIcon from '../../Icons/Circles/Circles';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport CircleDialog from '../../Dialog/CircleDialog/CircleDialog';\nimport PageMeta from '../../Layout/PageMeta/PageMeta';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst Circles = () => {\n  const {\n    fetch: { data: circles, isLoading: isCirclesLoading },\n  } = useCircles();\n\n  const [isOpenCreate, setIsOpenCreate] = useState(false);\n\n  return (\n    <>\n      <PageMeta\n        icon={CirclesIcon}\n        title={t('My Circles')}\n        actions={\n          <>\n            <ActionButton icon=\"plus\" className=\"m-4\" onClick={() => setIsOpenCreate(true)}>\n              {t('Add Circle')}\n            </ActionButton>\n          </>\n        }\n      />\n\n      <section className=\"-my-4\">\n        {isCirclesLoading ? (\n          <>\n            <LoadingParagraph className=\"m-4 h-10\" />\n            <LoadingParagraph className=\"m-4 h-10\" />\n            <LoadingParagraph className=\"m-4 h-10\" />\n          </>\n        ) : (\n          <>\n            {circles\n              ? circles.map((circleDef) => (\n                  <CircleCard circleDefinintion={circleDef} key={circleDef.id} className=\"py-4\" />\n                ))\n              : null}\n          </>\n        )}\n      </section>\n\n      <CircleDialog\n        title={t('Create new Circle')}\n        isOpen={isOpenCreate}\n        defaultValue={{\n          name: '',\n          description: '',\n          driveGrants: [\n            {\n              permissionedDrive: {\n                drive: getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId),\n                permission: 4,\n              },\n            },\n          ],\n          permissions: {\n            keys: [10],\n          },\n        }}\n        onConfirm={() => {\n          setIsOpenCreate(false);\n        }}\n        onCancel={() => {\n          setIsOpenCreate(false);\n        }}\n      />\n    </>\n  );\n};\n\nconst CircleCard = ({\n  circleDefinintion,\n  className,\n}: {\n  circleDefinintion: CircleDefinition;\n  className: string;\n}) => {\n  return (\n    <div className={`${className} ${circleDefinintion.disabled ? 'opacity-50' : ''}`}>\n      <Link to={`/owner/circles/${encodeURIComponent(circleDefinintion.id)}`} className=\"contents\">\n        <div\n          className={`h-full rounded-md border-[1px] border-gray-200 border-opacity-60 bg-white transition-colors hover:bg-slate-100 dark:border-gray-800 dark:bg-gray-800 dark:hover:bg-slate-700`}\n        >\n          <h2 className=\"bg-slate-100 p-4 text-xl dark:bg-slate-700 dark:text-slate-200\">\n            {circleDefinintion.name}\n          </h2>\n          <div className=\"p-4\">\n            <p>{circleDefinintion.description}</p>\n            <p className=\"text-xs\">\n              Created on: {new Date(circleDefinintion.created).toLocaleDateString()}\n            </p>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Circles;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, CoreClient } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useDrives = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new CoreClient({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchAll = async () => {\n    return await (\n      await client.driveProvider.GetDrives({ pageNumber: 1, pageSize: 100 })\n    ).results;\n  };\n\n  return {\n    fetch: useQuery(['drives'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useDrives;\n","import { t } from '../../helpers/i18n/dictionary';\n\nexport const drivePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Reader'), value: 1 },\n  { name: t('Editor'), value: 3 },\n];\n\nexport const circlePermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n\nexport const appPermissionLevels = [\n  { name: t('None'), value: 0 },\n  { name: t('Read Connections'), value: 10 },\n  { name: t('Manage Connection Requests'), value: 30 },\n  { name: t('Read Circle Members'), value: 50 },\n];\n"],"names":["title","confirmText","isOpen","defaultValue","onConfirm","onCancel","target","usePortal","useCircle","createOrUpdate","mutateAsync","createOrUpdateStatus","status","drives","useDrives","fetch","data","useState","driveGrants","newCircleDefinition","setNewCircleDefinition","useEffect","dialog","onClose","size","onSubmit","e","preventDefault","className","htmlFor","t","id","name","onChange","value","required","description","permissionLevels","circlePermissionLevels","permissions","keys","newValue","length","map","drive","index","targetDriveInfo","alias","type","drivePermissionLevels","find","driveGrant","permissionedDrive","permission","filter","state","icon","onClick","createPortal","props","Option","isChecked","children","setIsOpen","setInnerValue","wrapperRef","useRef","useOutsideTrigger","currentValue","level","setValue","ref","some","val","reduce","prevValue","currValue","xmlns","viewBox","fill","d","CircleCard","circleDefinintion","disabled","to","encodeURIComponent","Date","created","toLocaleDateString","useCircles","circles","isCirclesLoading","isLoading","isOpenCreate","setIsOpenCreate","CirclesIcon","actions","circleDef","getTargetDriveFromProfileId","BuiltInProfiles","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","sort","a","b","useQuery","refetchOnWindowFocus","client","CoreClient","api","ApiType","sharedSecret","driveProvider","GetDrives","pageNumber","pageSize","results","appPermissionLevels"],"sourceRoot":""}