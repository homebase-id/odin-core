{"version":3,"file":"static/js/948.6d4a84c0.chunk.js","mappings":"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","sources":["hooks/connection/useConnectionDetails.ts","components/FallbackImg/FallbackImg.tsx","components/Connection/PersonCard/PersonCard.tsx","components/Form/Select.tsx","components/Sections/CollapsableSection.tsx","hooks/focusedEditing/useFocusedEditing.ts","components/Connection/PersonIncomingRequest/PersonIncomingRequest.tsx","components/Connection/PersonOutgoingRequest/PersonOutgoingRequest.tsx","components/Connection/PersonActive/PersonActive.tsx","hooks/profiles/useAttributeVersions.ts","components/Form/NameSelector.tsx","components/Dialog/ConnectionDialogs/OutgoingConnectionDialog.tsx","components/Templates/Connections/Connections.tsx","hooks/connections/useConnections.ts","provider/connections/CircleProvider.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { ApiType, DataUtil, PublicClient } from '@youfoundation/transit-lib';\n\nconst useConnectionDetails = ({ dotYouId }: { dotYouId?: string }) => {\n  const client = new PublicClient({ api: ApiType.YouAuth, root: dotYouId });\n\n  const fetchSingle = async ({ dotYouId }: { dotYouId: string }) => {\n    if (!dotYouId) {\n      return;\n    }\n\n    const rawData = await client.fileReadOnlyProvider.GetFile('public.json');\n\n    const nameAttr = rawData.get('name')?.[0];\n    const photoRefAttr = rawData.get('photo')?.[0];\n    const photoAttr = rawData.get(photoRefAttr?.payload?.data?.profileImageId)?.[0];\n\n    const previewThumbnail = photoAttr.additionalThumbnails.reduce(\n      (prevVal, curValue) => {\n        if (prevVal.pixelWidth < curValue.pixelWidth && curValue.pixelWidth <= 250) {\n          return curValue;\n        }\n        return prevVal;\n      },\n      { ...photoAttr.header.fileMetadata.appData.previewThumbnail, pixelWidth: 20, pixelHeight: 20 }\n    );\n\n    const buffer = DataUtil.base64ToUint8Array(previewThumbnail.content);\n    const url = window.URL.createObjectURL(new Blob([buffer]));\n\n    const returnVal = {\n      name: {\n        ...nameAttr.payload.data,\n      },\n      profileImage: {\n        naturalSize: { width: previewThumbnail.pixelWidth, height: previewThumbnail.pixelHeight },\n        contentType: previewThumbnail.contentType,\n        url,\n      },\n    };\n\n    return returnVal;\n  };\n\n  return {\n    fetch: useQuery(['connectionDetails', dotYouId], () => fetchSingle({ dotYouId }), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnectionDetails;\n","const FallbackImg = ({ initials }: { initials: string }) => {\n  return (\n    <div className=\"flex aspect-square h-full w-full bg-slate-200 text-4xl font-light text-white dark:bg-slate-700 dark:text-black sm:text-6xl\">\n      <span className=\"m-auto uppercase\">{initials}</span>\n    </div>\n  );\n};\n\nexport default FallbackImg;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport useConnectionDetails from '../../../hooks/connection/useConnectionDetails';\nimport FallbackImg from '../../FallbackImg/FallbackImg';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst PersonCard = ({\n  name,\n  dotYouId,\n  href,\n  checked,\n  className,\n  children,\n  onClick,\n}: {\n  name?: string;\n  dotYouId: string;\n  href?: string;\n  checked?: boolean;\n  className: string;\n  children?: ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}) => {\n  const Wrapper = ({ children }) => (href ? <Link to={href}>{children}</Link> : <>{children}</>);\n  const { data: connectionDetails, isLoading } = useConnectionDetails({ dotYouId }).fetch;\n\n  if (isLoading) {\n    return <LoadingParagraph className={`aspect-square ${className}`} />;\n  }\n\n  const fullName =\n    name ??\n    (connectionDetails\n      ? `${connectionDetails.name?.givenName ?? ''} ${connectionDetails.name?.surname ?? ''}`\n      : undefined);\n\n  const getInitials = () => {\n    const splittedName = fullName?.split(' ');\n    if (splittedName?.length >= 2 && splittedName[0].length) {\n      return splittedName[0][0] + splittedName[1][0] + '';\n    }\n    const splittedDomain = dotYouId?.split('.');\n    if (splittedDomain?.length >= 2) {\n      return splittedDomain[0][0] + splittedDomain[1][0] + '';\n    }\n    return '--';\n  };\n\n  return (\n    <div className={className}>\n      <Wrapper>\n        <div\n          className={`h-full rounded-md border border-gray-200 border-opacity-60 bg-white transition-colors dark:border-gray-800 dark:bg-gray-800 ${\n            checked\n              ? 'border-4 border-indigo-500 dark:border-indigo-700'\n              : checked === false\n              ? 'border-4'\n              : ''\n          }`}\n          onClick={onClick}\n        >\n          <div className=\"aspect-square\">\n            {connectionDetails?.profileImage?.url ? (\n              <figure className={'relative overflow-hidden'}>\n                <img\n                  src={connectionDetails.profileImage.url}\n                  width={connectionDetails.profileImage.naturalSize.width}\n                  height={connectionDetails.profileImage.naturalSize.height}\n                  className=\"aspect-square w-full\"\n                />\n              </figure>\n            ) : (\n              <FallbackImg initials={getInitials()} />\n            )}\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"font-thiner mb-6 dark:text-white\">{fullName ?? dotYouId}</h2>\n            {children}\n          </div>\n        </div>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","import { ReactNode, useEffect, useRef, useState } from 'react';\nimport Arrow from '../Icons/Arrow/Arrow';\n\nconst CollapsableSection = ({\n  isOpenByDefault = true,\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  isOpenByDefault?: boolean;\n  title: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  const [isOpen, setIsOpen] = useState(isOpenByDefault);\n  const sectionContainerRef = useRef<HTMLDivElement>(null);\n  const height = useRef(0);\n\n  useEffect(() => {\n    if (isOpenByDefault && sectionContainerRef.current) {\n      height.current = sectionContainerRef.current.clientHeight;\n    }\n    // Todo apply FLIP approach (when not open by default) to calculate the to-be height when we can't use the height of the open state\n  }, [isOpen]);\n\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800 dark:text-slate-300'\n      } ${className}`}\n    >\n      <div\n        className={`relative cursor-pointer border-b-[1px] border-slate-200 py-5 transition-all duration-300 ${\n          isOpen ? 'border-opacity-100' : 'border-opacity-0'\n        }`}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        <button className=\"absolute top-0 right-0 bottom-0\">\n          <Arrow\n            className={`h-4 w-4 transition-transform duration-300 ${\n              isOpen ? 'rotate-90' : '-rotate-90'\n            }`}\n          />\n        </button>\n      </div>\n      <div\n        className={`overflow-hidden transition-all duration-300 `}\n        style={{ maxHeight: `${isOpen ? (height.current ? height.current : 2000) : 0}px` }}\n        ref={sectionContainerRef}\n      >\n        <div className=\"py-5 \">{children}</div>\n      </div>\n    </section>\n  );\n};\n\nexport default CollapsableSection;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useFocusedEditing = () => {\n  const [searchParams] = useSearchParams();\n\n  const checkReturnTo = () => {\n    if (searchParams.get('ui') !== 'focus' && searchParams.get('ui') !== 'minimal') {\n      return;\n    }\n    const returnUrl = searchParams.get('return');\n\n    window.location.href = returnUrl;\n  };\n\n  return checkReturnTo;\n};\n\nexport default useFocusedEditing;\n","import { ReactNode, useState } from 'react';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport ActionButton from '../../Buttons/ActionButton';\nimport IncomingConnectionDialog from '../../Dialog/ConnectionDialogs/IncomingConnectionDialog';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonIncomingRequest = ({\n  senderDotYouId,\n  name,\n  children,\n  className,\n}: {\n  senderDotYouId: string;\n  name: string;\n  children?: ReactNode;\n  className: string;\n}) => {\n  const {\n    acceptRequest: { mutateAsync: acceptPending, status: acceptPendingStatus },\n    ignoreRequest: { mutate: ignoreRequest, status: ignoreRequestStatus },\n  } = useConnection({});\n  const checkReturnTo = useFocusedEditing();\n\n  const [isAcceptDialogOpen, setIsAcceptDialogOpen] = useState(false);\n\n  return (\n    <>\n      <PersonCard\n        className={className}\n        name={name}\n        dotYouId={senderDotYouId}\n        href={(senderDotYouId && `/owner/connections/${senderDotYouId}`) ?? undefined}\n      >\n        {children}\n        <ActionButton\n          type=\"primary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            setIsAcceptDialogOpen(true);\n            return false;\n          }}\n          state={acceptPendingStatus}\n        >\n          {t('Confirm')}...\n        </ActionButton>\n        <ActionButton\n          type=\"secondary\"\n          className=\"mb-2 w-full\"\n          onClick={(e) => {\n            e.preventDefault();\n            ignoreRequest({ senderDotYouId: senderDotYouId });\n            return false;\n          }}\n          state={ignoreRequestStatus}\n        >\n          {t('Ignore')}\n        </ActionButton>\n      </PersonCard>\n      <IncomingConnectionDialog\n        isOpen={isAcceptDialogOpen}\n        title={t('Accept connection request')}\n        confirmText={t('Accept and give access')}\n        onConfirm={async (circleGrants: string[]) => {\n          await acceptPending({ senderDotYouId: senderDotYouId, circleIds: circleGrants });\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n        onCancel={() => {\n          checkReturnTo();\n          setIsAcceptDialogOpen(false);\n        }}\n      >{`${senderDotYouId} ${t('has sent you a connection request')}`}</IncomingConnectionDialog>\n    </>\n  );\n};\n\nexport default PersonIncomingRequest;\n","import useConnection from '../../../hooks/connection/useConnection';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonOutgoingRequest = ({\n  recipientDotYouId,\n  className,\n}: {\n  recipientDotYouId: string;\n  className: string;\n}) => {\n  const { mutate: revokeRequest, status: revokeRequestStatus } = useConnection(\n    {}\n  ).revokeConnectionRequest;\n\n  return (\n    <PersonCard\n      className={className}\n      dotYouId={recipientDotYouId}\n      href={(recipientDotYouId && `/owner/connections/${recipientDotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"mb-2 w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          revokeRequest({ targetDotYouId: recipientDotYouId });\n          return false;\n        }}\n        state={revokeRequestStatus}\n      >\n        Cancel\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default PersonOutgoingRequest;\n","import { t } from '../../../helpers/i18n/dictionary';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport { DotYouProfile } from '../../../provider/connections/CircleDataTypes';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonCard from '../PersonCard/PersonCard';\n\nconst PersonActive = ({\n  dotYouProfile,\n  className,\n}: {\n  dotYouProfile: DotYouProfile;\n  className: string;\n}) => {\n  const { mutate: disconnect, status: disconnectStatus } = useConnection({}).disconnect;\n\n  return (\n    <PersonCard\n      className={className}\n      dotYouId={dotYouProfile.dotYouId}\n      href={(dotYouProfile.dotYouId && `/owner/connections/${dotYouProfile.dotYouId}`) ?? undefined}\n    >\n      <ActionButton\n        type=\"secondary\"\n        className=\"w-full\"\n        onClick={(e) => {\n          e.preventDefault();\n          disconnect({ connectionDotYouId: dotYouProfile.dotYouId });\n        }}\n        state={disconnectStatus}\n        confirmOptions={{\n          title: `${t('Remove')} ${dotYouProfile.dotYouId}`,\n          buttonText: t('Remove'),\n          body: `${t('Are you sure you want to remove')} ${dotYouProfile.dotYouId} ${t(\n            'from your connections. They will lose all existing access.'\n          )}`,\n        }}\n      >\n        Remove\n      </ActionButton>\n    </PersonCard>\n  );\n};\n\nexport default PersonActive;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useAttributeVersions = ({ profileId, type }: { profileId: string; type: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchVersions = async ({ profileId, type }: { profileId: string; type: string }) => {\n    return (await client.profileDataProvider.getAttributeVersions(profileId, undefined, type))\n      .versions;\n  };\n  return {\n    fetchVersions: useQuery(\n      ['attributeVersions', profileId, type],\n      () => fetchVersions({ profileId, type }),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useAttributeVersions;\n","import {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  MinimalProfileFields,\n} from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useAttributeVersions from '../../hooks/profiles/useAttributeVersions';\nimport Select from './Select';\n\nconst NameSelector = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n) => {\n  const { data: nameAttributes, isLoading: nameAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Name.type,\n  }).fetchVersions;\n\n  return (\n    <Select {...props}>\n      <option>-- {t('Choose a name')} --</option>\n      {nameAttributesLoading && <option>Loading...</option>}\n      {nameAttributes\n        ?.filter((attr) => attr.data !== undefined)\n        .map((attr) => {\n          const fullName = `${attr.data[MinimalProfileFields.GiveNameId]} ${\n            attr.data[MinimalProfileFields.SurnameId]\n          }`;\n          return (\n            <option value={fullName} key={fullName}>\n              {fullName} ({window.location.hostname})\n            </option>\n          );\n        })}\n    </Select>\n  );\n};\n\nexport default NameSelector;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport Checkbox from '../../Form/Checkbox';\nimport Input from '../../Form/Input';\nimport NameSelector from '../../Form/NameSelector';\nimport Textarea from '../../Form/Textarea';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst OutgoingConnectionDialog = ({\n  title,\n  isOpen,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const {\n    mutate: sendConnectionRequest,\n    status: sendConnectionRequestStatus,\n    reset: resetConnectionRequest,\n  } = useConnection({}).sendConnectionRequest;\n  const { data: circles } = useCircles().fetch;\n  const checkReturnTo = useFocusedEditing();\n\n  const [connectionTarget, setConnectionTarget] = useState('samwise.digital');\n  const [message, setMessage] = useState('Hi, I would like to connect with you');\n  const [name, setName] = useState('Frodo Underhill');\n  const [circleGrants, setCircleGrants] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            sendConnectionRequest(\n              {\n                message: message,\n                name: name,\n                targetDotYouId: connectionTarget,\n                circleIds: circleGrants,\n              },\n              {\n                onSuccess: () => {\n                  checkReturnTo();\n\n                  resetConnectionRequest();\n                  setConnectionTarget('');\n                  setMessage('');\n                  setCircleGrants([]);\n\n                  onConfirm();\n                },\n              }\n            );\n          }}\n        >\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">Recipient (dot you id)</label>\n            <Input\n              id=\"dotyouid\"\n              name=\"dotyouid\"\n              onChange={(e) => {\n                setConnectionTarget(e.target.value);\n              }}\n              defaultValue={connectionTarget}\n              required\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">From:</label>\n            <NameSelector\n              id=\"name\"\n              name=\"name\"\n              defaultValue={name}\n              required\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            {/* <Input\n              id=\"name\"\n              name=\"name\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              defaultValue={name}\n              required\n            /> */}\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"message\">{t('Message')}</label>\n            <Textarea\n              id=\"message\"\n              name=\"message\"\n              defaultValue={message}\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n              required\n            />\n          </div>\n\n          {circles.length ? (\n            <>\n              <h2 className=\"mb-2 text-lg\">{t('Add as member to')}:</h2>\n\n              {circles.map((circle, index) => {\n                return (\n                  <div key={circle.id ?? index} className=\"mb-2\">\n                    <Checkbox\n                      value={circle.id}\n                      id={circle.id}\n                      onChange={(e) => {\n                        const newCircleGrants = [...circleGrants];\n                        if (e.target.checked) {\n                          newCircleGrants.push(e.target.value);\n                          setCircleGrants(newCircleGrants);\n                        } else {\n                          setCircleGrants(\n                            newCircleGrants.filter((circleId) => circleId !== e.target.value)\n                          );\n                        }\n                      }}\n                    />\n                    <label htmlFor={circle.id} className=\"ml-2 cursor-pointer\">\n                      {circle.name}\n                    </label>\n                  </div>\n                );\n              })}\n            </>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" state={sendConnectionRequestStatus} icon={'send'}>\n              {t('Send')}\n            </ActionButton>\n            <ActionButton className=\"m-2\" type=\"secondary\" onClick={onCancel}>\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default OutgoingConnectionDialog;\n","import PageMeta from '../../Layout/PageMeta/PageMeta';\nimport useConnections from '../../../hooks/connections/useConnections';\nimport ActionButton from '../../Buttons/ActionButton';\nimport PersonIncomingRequest from '../../Connection/PersonIncomingRequest/PersonIncomingRequest';\nimport PersonOutgoingRequest from '../../Connection/PersonOutgoingRequest/PersonOutgoingRequest';\nimport PersonActive from '../../Connection/PersonActive/PersonActive';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport Section from '../../Sections/Section';\nimport CollapsableSection from '../../Sections/CollapsableSection';\nimport OutgoingConnectionDialog from '../../Dialog/ConnectionDialogs/OutgoingConnectionDialog';\nimport { useState } from 'react';\nimport Persons from '../../Icons/Persons/Persons';\nimport LoadingParagraph from '../../Loaders/LoadingParagraph/LoadingParagraph';\n\nconst Connections = () => {\n  const {\n    fetchPending: { data: pendingConnections, isLoading: pendingConnectionsLoading },\n    fetchActive: { data: activeConnections, isLoading: activeConnectionsLoading },\n    fetchSent: { data: sentRequests, isLoading: sentRequestsLoading },\n  } = useConnections();\n\n  const [isSentConnectionOpen, setIsSentConnectionOpen] = useState(false);\n\n  return (\n    <>\n      <section>\n        <PageMeta\n          icon={Persons}\n          title={'Connections'}\n          actions={\n            <>\n              <ActionButton\n                onClick={() => setIsSentConnectionOpen(true)}\n                icon={'plus'}\n                className=\"m-2\"\n              >\n                {t('Send request')}\n              </ActionButton>\n            </>\n          }\n        />\n\n        {!pendingConnectionsLoading && pendingConnections?.length ? (\n          <Section isOpaqueBg={true} isBorderLess={true} title={t('Connection requests')}>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {pendingConnections?.map((pendingConnection) => (\n                <PersonIncomingRequest\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  senderDotYouId={pendingConnection.senderDotYouId}\n                  name={pendingConnection.name}\n                  key={pendingConnection.senderDotYouId}\n                >\n                  <div className=\"-mt-3\">\n                    <p className=\"mb-3 text-sm\">{pendingConnection.message}</p>\n                  </div>\n                </PersonIncomingRequest>\n              ))}\n            </div>\n          </Section>\n        ) : null}\n\n        {activeConnections?.length || activeConnectionsLoading ? (\n          <Section isOpaqueBg={true} isBorderLess={true} title={t('Your Connections')}>\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {activeConnectionsLoading && (\n                <>\n                  <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n                  <LoadingParagraph className=\"m-1 aspect-square w-1/2 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\" />\n                </>\n              )}\n\n              {activeConnections?.map((activeConnection) => (\n                <PersonActive\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  dotYouProfile={activeConnection}\n                  key={activeConnection.dotYouId}\n                />\n              ))}\n            </div>\n          </Section>\n        ) : null}\n\n        {!sentRequestsLoading && sentRequests?.length ? (\n          <CollapsableSection\n            isOpaqueBg={true}\n            isBorderLess={true}\n            isOpenByDefault={true}\n            title={t('Sent Connection Requests')}\n          >\n            <div className=\"-m-1 flex flex-row flex-wrap\">\n              {sentRequests?.map((sentRequest) => (\n                <PersonOutgoingRequest\n                  className=\"w-1/2 p-1 sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n                  recipientDotYouId={sentRequest.recipient}\n                  key={sentRequest.recipient}\n                />\n              ))}\n            </div>\n          </CollapsableSection>\n        ) : null}\n      </section>\n      <OutgoingConnectionDialog\n        title={t('Send connection request')}\n        isOpen={isSentConnectionOpen}\n        onConfirm={() => setIsSentConnectionOpen(false)}\n        onCancel={() => setIsSentConnectionOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default Connections;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useConnections = () => {\n  const { getSharedSecret } = useAuth();\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n\n  const fetchPendingConnections = async () => {\n    return await (\n      await circleNetworkRequestProvider.getPendingRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchSentRequests = async () => {\n    return await (\n      await circleNetworkRequestProvider.getSentRequests({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  const fetchConnections = async () => {\n    return await (\n      await circleNetworkProvider.getConnections({ pageNumber: 1, pageSize: 10 })\n    ).results;\n  };\n\n  return {\n    fetchPending: useQuery(['pendingConnections'], () => fetchPendingConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchSent: useQuery(['sentRequests'], () => fetchSentRequests(), {\n      refetchOnWindowFocus: false,\n    }),\n    fetchActive: useQuery(['activeConnections'], () => fetchConnections(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useConnections;\n","import { CircleDefinition } from './CircleDataTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\n//Handles management of Circles\nexport class CircleProvider extends OwnerProviderBase {\n  private static instance: CircleProvider;\n  private root = '/circles/definitions';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async updateDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/update';\n\n    const data = { ...circleDefinition };\n    data.driveGrants = data.driveGrants || [];\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async createDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/create';\n\n    return client\n      .post(url, circleDefinition)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  parsePermissions(permission: unknown) {\n    if (typeof permission !== 'string') {\n      return permission;\n    }\n\n    const lowered = permission.toLowerCase();\n\n    return lowered === 'read'\n      ? 2\n      : lowered === 'write'\n      ? 4\n      : lowered === 'readwrite'\n      ? 5\n      : permission;\n  }\n\n  async getCircles(): Promise<CircleDefinition[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data.map((circleDef) => {\n          circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n            return {\n              permissionedDrive: {\n                ...grant.permissionedDrive,\n                permission: this.parsePermissions(grant.permissionedDrive.permission),\n              },\n            };\n          });\n\n          return circleDef;\n        });\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getCircle(circleId: string): Promise<CircleDefinition> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/circle';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .then((circleDef) => {\n        // Parse string permissionflags to number representations\n        circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n          return {\n            permissionedDrive: {\n              ...grant.permissionedDrive,\n              permission: this.parsePermissions(grant.permissionedDrive.permission),\n            },\n          };\n        });\n        return circleDef;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async disableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/disable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async enableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/enable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async removeCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/delete';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleProvider {\n    if (!CircleProvider.instance) {\n      CircleProvider.instance = new CircleProvider(sharedSecret);\n    }\n\n    return CircleProvider.instance;\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["dotYouId","client","PublicClient","api","ApiType","root","fetchSingle","fileReadOnlyProvider","GetFile","rawData","nameAttr","get","photoRefAttr","photoAttr","payload","data","profileImageId","previewThumbnail","additionalThumbnails","reduce","prevVal","curValue","pixelWidth","header","fileMetadata","appData","pixelHeight","buffer","DataUtil","content","url","window","URL","createObjectURL","Blob","returnVal","name","profileImage","naturalSize","width","height","contentType","fetch","useQuery","refetchOnWindowFocus","initials","className","href","checked","children","onClick","Wrapper","to","useConnectionDetails","connectionDetails","isLoading","LoadingParagraph","fullName","givenName","surname","undefined","src","splittedName","split","length","splittedDomain","getInitials","props","isOpenByDefault","title","isOpaqueBg","isBorderLess","useState","isOpen","setIsOpen","sectionContainerRef","useRef","useEffect","current","clientHeight","style","maxHeight","ref","useSearchParams","searchParams","returnUrl","location","senderDotYouId","useConnection","acceptRequest","acceptPending","mutateAsync","acceptPendingStatus","status","ignoreRequest","mutate","ignoreRequestStatus","checkReturnTo","useFocusedEditing","isAcceptDialogOpen","setIsAcceptDialogOpen","PersonCard","ActionButton","type","e","preventDefault","state","t","IncomingConnectionDialog","confirmText","onConfirm","circleGrants","circleIds","onCancel","recipientDotYouId","revokeConnectionRequest","revokeRequest","revokeRequestStatus","targetDotYouId","dotYouProfile","disconnect","disconnectStatus","connectionDotYouId","confirmOptions","buttonText","body","profileId","getSharedSecret","useAuth","Client","sharedSecret","fetchVersions","profileDataProvider","getAttributeVersions","versions","useAttributeVersions","BuiltInProfiles","AttributeDefinitions","nameAttributes","nameAttributesLoading","Select","filter","attr","map","MinimalProfileFields","value","hostname","target","usePortal","sendConnectionRequest","sendConnectionRequestStatus","resetConnectionRequest","reset","circles","useCircles","connectionTarget","setConnectionTarget","message","setMessage","setName","setCircleGrants","dialog","DialogWrapper","onClose","onSubmit","onSuccess","htmlFor","Input","id","onChange","defaultValue","required","Textarea","circle","index","Checkbox","newCircleGrants","push","circleId","icon","createPortal","useConnections","fetchPending","pendingConnections","pendingConnectionsLoading","fetchActive","activeConnections","activeConnectionsLoading","fetchSent","sentRequests","sentRequestsLoading","isSentConnectionOpen","setIsSentConnectionOpen","PageMeta","Persons","actions","Section","pendingConnection","activeConnection","CollapsableSection","sentRequest","recipient","circleNetworkRequestProvider","CircleNetworkRequestProvider","circleNetworkProvider","CircleNetworkProvider","fetchPendingConnections","getPendingRequests","pageNumber","pageSize","results","fetchSentRequests","getSentRequests","fetchConnections","getConnections","CircleProvider","circleDefinition","this","driveGrants","post","then","response","catch","permission","lowered","toLowerCase","circleDef","grant","permissionedDrive","parsePermissions","instance","OwnerProviderBase","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}