{"version":3,"file":"static/js/731.a430f631.chunk.js","mappings":"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","sources":["components/Dialog/ConnectionDialogs/IncomingConnectionDialog.tsx","components/Form/NameSelector.tsx","components/Form/PhotoSelector.tsx","components/Form/Select.tsx","components/PermissionViews/CirclePermissionView/CirclePermissionView.tsx","components/Sections/Section.tsx","hooks/circles/useCircles.ts","hooks/connection/useConnection.ts","hooks/focusedEditing/useFocusedEditing.ts","hooks/profiles/useAttributeVersions.ts"],"sourcesContent":["import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport useConnection from '../../../hooks/connection/useConnection';\nimport useFocusedEditing from '../../../hooks/focusedEditing/useFocusedEditing';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport NameSelector from '../../Form/NameSelector';\nimport PhotoSelector from '../../Form/PhotoSelector';\nimport CirclePermissionView from '../../PermissionViews/CirclePermissionView/CirclePermissionView';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst IncomingConnectionDialog = ({\n  title,\n  confirmText,\n\n  senderDotYouId,\n\n  isOpen,\n\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  senderDotYouId: string;\n\n  isOpen: boolean;\n\n  onConfirm: () => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n\n  const { mutateAsync: acceptPending, status: acceptPendingStatus } = useConnection(\n    {}\n  ).acceptRequest;\n  const { data: circles } = useCircles().fetch;\n\n  const checkReturnTo = useFocusedEditing();\n\n  const [name, setName] = useState<{ givenName: string; surname: string }>();\n  const [photoFileId, setPhotoFileId] = useState<string>(null);\n  const [circleGrants, setCircleGrants] = useState<string[]>([]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel} size=\"2xlarge\">\n      <>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            await acceptPending({\n              senderDotYouId: senderDotYouId,\n              name: name,\n              photoFileId: photoFileId,\n              circleIds: circleGrants,\n            });\n\n            checkReturnTo();\n            onConfirm();\n          }}\n        >\n          <div className=\"mt-2\">{`${senderDotYouId} ${t(\n            'has sent you a connection request'\n          )}`}</div>\n\n          <h2 className=\"mb-2 text-lg\">{t('Your contact info')}:</h2>\n          <div className=\"mb-5\">\n            <label htmlFor=\"dotyouid\">{t('Name')}:</label>\n            <NameSelector\n              id=\"name\"\n              name=\"name\"\n              required\n              onChange={(e) => {\n                const split = e.target.value.split('+');\n                setName({ givenName: split[0], surname: split[1] });\n              }}\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label htmlFor=\"name\">{t('Photo')}:</label>\n            <PhotoSelector\n              defaultValue={photoFileId}\n              id=\"photo\"\n              onChange={(e) => {\n                setPhotoFileId(e.target.value || undefined);\n              }}\n              fallbackInitials={`${name?.givenName?.[0] ?? ''}${name?.surname?.[0] ?? ''}`}\n            />\n          </div>\n          {circles.length ? (\n            <>\n              <h2 className=\"mb-2 text-lg\">{t('Add as member to one or more circles')}:</h2>\n\n              {circles.map((circle, index) => {\n                const checked = circleGrants.some((circleGrant) => circleGrant === circle.id);\n\n                return (\n                  <CirclePermissionView\n                    circleDef={circle}\n                    key={circle.id ?? index}\n                    className={`my-4 w-full rounded-lg border p-4`}\n                    isChecked={checked}\n                    onClick={() => {\n                      const newCircleGrants = [...circleGrants];\n                      if (!newCircleGrants.some((circleGrant) => circleGrant === circle.id)) {\n                        newCircleGrants.push(circle.id);\n                        setCircleGrants(newCircleGrants);\n                      } else {\n                        setCircleGrants(\n                          newCircleGrants.filter((circleId) => circleId !== circle.id)\n                        );\n                      }\n                    }}\n                  />\n                );\n              })}\n            </>\n          ) : null}\n\n          <div className=\"-m-2 flex flex-row-reverse py-3\">\n            <ActionButton className=\"m-2\" icon={'send'} state={acceptPendingStatus}>\n              {confirmText ?? t('Accept')}\n            </ActionButton>\n            <ActionButton\n              className=\"m-2\"\n              type=\"secondary\"\n              onClick={() => {\n                checkReturnTo();\n                onCancel();\n              }}\n            >\n              {t('Cancel')}\n            </ActionButton>\n          </div>\n        </form>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nexport default IncomingConnectionDialog;\n","import {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  MinimalProfileFields,\n  SecurityGroupType,\n} from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useAttributeVersions from '../../hooks/profiles/useAttributeVersions';\nimport Select from './Select';\n\nconst NameSelector = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n) => {\n  const { data: nameAttributes, isLoading: nameAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Name.type,\n  }).fetchVersions;\n\n  const filteredNameAttributes = nameAttributes?.filter(\n    (attr) =>\n      attr.data !== undefined &&\n      Object.keys(attr.data)?.length !== 0 &&\n      attr.acl?.requiredSecurityGroup === SecurityGroupType.Anonymous\n  );\n\n  return (\n    <Select {...props}>\n      <option>-- {t('Choose a name')} --</option>\n      {nameAttributesLoading && <option>Loading...</option>}\n      {filteredNameAttributes\n        ?.filter((attr) => attr.data !== undefined)\n        .map((attr) => {\n          const fullName = `${attr.data[MinimalProfileFields.GivenNameId]}+${\n            attr.data[MinimalProfileFields.SurnameId]\n          }`;\n          return (\n            <option\n              value={fullName}\n              key={fullName}\n              defaultChecked={props.defaultValue === fullName}\n            >\n              {`${attr.data[MinimalProfileFields.GivenNameId]} ${\n                attr.data[MinimalProfileFields.SurnameId]\n              }`}{' '}\n              ({window.location.hostname})\n            </option>\n          );\n        })}\n    </Select>\n  );\n};\n\nexport default NameSelector;\n","import {\n  AttributeDefinitions,\n  BuiltInProfiles,\n  getTargetDriveFromProfileId,\n  MinimalProfileFields,\n  SecurityGroupType,\n} from '@youfoundation/transit-lib';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useImage from '../../hooks/media/useImage';\nimport useAttributeVersions from '../../hooks/profiles/useAttributeVersions';\nimport FallbackImg from '../FallbackImg/FallbackImg';\n\nconst PhotoSelector = ({\n  defaultValue,\n  onChange,\n  id,\n  className,\n  fallbackInitials,\n}: {\n  defaultValue: string;\n  onChange: (e: { target: { value: string } }) => void;\n  id?: string;\n  className?: string;\n  fallbackInitials?: string;\n}) => {\n  const { data: photoAttributes, isLoading: photoAttributesLoading } = useAttributeVersions({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    type: AttributeDefinitions.Photo.type,\n  }).fetchVersions;\n\n  const filteredPhotoAttributes = photoAttributes?.filter(\n    (attr) =>\n      attr.data !== undefined &&\n      Object.keys(attr.data).length !== 0 &&\n      attr.acl?.requiredSecurityGroup === SecurityGroupType.Anonymous\n  );\n\n  return (\n    <ul\n      id={id}\n      className={`flex w-full flex-row flex-wrap rounded border border-gray-300 bg-white p-2 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${className}`}\n    >\n      {photoAttributesLoading && <li className=\"w-full p-3\">Loading...</li>}\n\n      <Option\n        onClick={() => {\n          onChange({\n            target: { value: undefined },\n          });\n        }}\n        key={'empty'}\n        value={fallbackInitials}\n        isActive={!defaultValue}\n      />\n\n      {filteredPhotoAttributes?.map((attr) => {\n        return (\n          <Option\n            onClick={(newValue) => {\n              onChange({\n                target: { value: newValue },\n              });\n            }}\n            key={attr.id}\n            value={attr.data[MinimalProfileFields.ProfileImageId]}\n            isActive={defaultValue === attr.data[MinimalProfileFields.ProfileImageId]}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nconst Option = ({\n  value,\n  onClick,\n  isActive,\n}: {\n  value: string;\n  onClick?: (value: string) => void;\n  isActive: boolean;\n}) => {\n  const { data: imageUrl } = useImage(\n    value?.length > 2 ? value : undefined,\n    getTargetDriveFromProfileId(BuiltInProfiles.StandardProfileId.toString())\n  ).fetch;\n\n  return (\n    <li\n      onClick={() => {\n        onClick && onClick(isActive ? undefined : value);\n      }}\n      className={`mr-1 cursor-pointer list-none rounded-lg border-[3px] p-[1px] ${\n        isActive\n          ? 'overflow-hidden border-indigo-500 dark:border-indigo-700'\n          : 'border-transparent hover:border-slate-100'\n      } `}\n      key={value}\n    >\n      {!imageUrl ? (\n        <FallbackImg\n          initials={value ?? '?'}\n          className=\"aspect-square h-[5rem] w-[5rem] rounded-md sm:text-4xl\"\n        />\n      ) : (\n        <img src={imageUrl} className=\"max-h-[5rem] rounded-md\" />\n      )}\n    </li>\n  );\n};\n\nexport default PhotoSelector;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","import { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircle from '../../../hooks/circle/useCircle';\nimport { CircleDefinition } from '../../../provider/connections/CircleDataTypes';\nimport Arrow from '../../Icons/Arrow/Arrow';\nimport Check from '../../Icons/Check/Check';\nimport Circles from '../../Icons/Circles/Circles';\n\nconst CirclePermissionView = ({\n  circleDef,\n  permissionDetails,\n  className,\n  isChecked,\n  onClick,\n}: {\n  circleDef: CircleDefinition;\n  permissionDetails?: string;\n  className?: string;\n  isChecked?: boolean;\n  onClick?: () => void;\n}) => {\n  const { data: members } = useCircle({ circleId: circleDef?.id }).fetchMembers;\n\n  if (!circleDef) {\n    return <></>;\n  }\n\n  const LinkWrapper = ({ children }: { children: ReactNode }) =>\n    onClick ? (\n      <>{children}</>\n    ) : (\n      <Link\n        to={`/owner/circles/${encodeURIComponent(circleDef.id)}`}\n        className=\"contents hover:text-slate-700 hover:underline dark:hover:text-slate-400\"\n      >\n        {children}\n      </Link>\n    );\n\n  const checkedClasses = isChecked\n    ? 'border-indigo-500 bg-slate-50 dark:border-indigo-700 dark:bg-slate-700'\n    : isChecked === false\n    ? 'border-slate-100'\n    : '';\n\n  return (\n    <div\n      className={`flex flex-row ${className ?? ''} ${circleDef.disabled && 'opacity-50'} ${\n        onClick && 'cursor-pointer'\n      } ${checkedClasses}`}\n      onClick={() => onClick && onClick()}\n    >\n      <LinkWrapper>\n        {isChecked ? (\n          <Check className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        ) : (\n          <Circles className=\"mt-1 mb-auto mr-3 h-6 w-6\" />\n        )}\n\n        <div className=\"mr-2 flex flex-col\">\n          <p className={`my-auto leading-none`}>\n            {circleDef.disabled && t('Disabled:')} {circleDef?.name}\n            {permissionDetails && `: ${permissionDetails}`}\n          </p>\n          <small className=\"block\">\n            {members\n              ? `${members.length} ${members.length === 1 ? t('member') : t('members')} ${t(\n                  'receives'\n                )} `\n              : null}\n            {circleDef?.driveGrants\n              ? `${t('access on')} ${circleDef.driveGrants.length} ${\n                  circleDef.driveGrants.length >= 2 ? t('drives') : t('drive')\n                }`\n              : null}\n          </small>\n        </div>\n        {!onClick && <Arrow className=\"my-auto ml-2 h-5 w-5\" />}\n      </LinkWrapper>\n    </div>\n  );\n};\n\nexport default CirclePermissionView;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { CircleNetworkProvider } from '../../provider/connections/CircleNetworkProvider';\nimport { CircleNetworkRequestProvider } from '../../provider/connections/CircleNetworkRequestProvider';\nimport { ConnectionRequest } from '../../provider/connections/CircleDataTypes';\nimport useAuth from '../auth/useAuth';\n\nconst useConnection = ({ dotYouId }: { dotYouId?: string }) => {\n  const queryClient = useQueryClient();\n\n  const { getSharedSecret } = useAuth();\n  const circleNetworkProvider = CircleNetworkProvider.getInstance(getSharedSecret());\n  const circleNetworkRequestProvider = CircleNetworkRequestProvider.getInstance(getSharedSecret());\n\n  const fetchSingle = async ({ dotYouId }: { dotYouId: string }) => {\n    if (!dotYouId) {\n      return;\n    }\n\n    const connectionInfo = await circleNetworkProvider.getConnectionInfo(dotYouId);\n    if (connectionInfo && connectionInfo.status.toLowerCase() !== 'none') {\n      return connectionInfo;\n    }\n\n    const pendingRequest = await circleNetworkRequestProvider.getPendingRequest(dotYouId);\n    if (pendingRequest) {\n      return pendingRequest;\n    }\n\n    const sentRequest = await circleNetworkRequestProvider.getSentRequest(dotYouId);\n    return sentRequest ?? connectionInfo;\n  };\n\n  const disconnect = async ({ connectionDotYouId }: { connectionDotYouId?: string }) => {\n    return await circleNetworkProvider.disconnectFromContact(connectionDotYouId ?? dotYouId);\n  };\n\n  const sendConnectionRequest = async ({\n    targetDotYouId,\n    message,\n    name,\n    photoFileId,\n    circleIds,\n  }: {\n    targetDotYouId: string;\n    message: string;\n    name: { givenName: string; surname: string };\n    photoFileId: string | undefined;\n    circleIds: string[];\n  }) => {\n    await circleNetworkRequestProvider.sendRequest(\n      targetDotYouId,\n      message,\n      name,\n      photoFileId,\n      circleIds\n    );\n    return { targetDotYouId };\n  };\n\n  const revokeConnectionRequest = async ({ targetDotYouId }: { targetDotYouId: string }) => {\n    return await circleNetworkRequestProvider.deleteSentRequest(targetDotYouId);\n  };\n\n  const acceptRequest = async ({\n    senderDotYouId,\n    name,\n    photoFileId,\n    circleIds,\n  }: {\n    senderDotYouId: string;\n    name: { givenName: string; surname: string };\n    photoFileId: string | undefined;\n    circleIds: string[];\n  }) => {\n    await circleNetworkRequestProvider.acceptConnectionRequest(\n      senderDotYouId,\n      name,\n      photoFileId,\n      circleIds\n    );\n    return { senderDotYouId };\n  };\n\n  const ignoreRequest = async ({ senderDotYouId }: { senderDotYouId: string }) => {\n    return await circleNetworkRequestProvider.deletePendingRequest(senderDotYouId);\n  };\n\n  const block = async (dotYouId: string) => {\n    return await circleNetworkRequestProvider.blockDotYouId(dotYouId);\n  };\n  const unblock = async (dotYouId: string) => {\n    return await circleNetworkRequestProvider.unblockDotYouId(dotYouId);\n  };\n\n  return {\n    fetch: useQuery(['connectionInfo', dotYouId], () => fetchSingle({ dotYouId }), {\n      refetchOnWindowFocus: false,\n    }),\n\n    disconnect: useMutation(disconnect, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', param]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n\n    sendConnectionRequest: useMutation(sendConnectionRequest, {\n      onMutate: async (newRequest) => {\n        await queryClient.cancelQueries(['sentRequests']);\n\n        const previousRequests: ConnectionRequest[] = queryClient.getQueryData(['sentRequests']);\n        const newRequests = [\n          {\n            status: 'sent',\n            recipient: newRequest.targetDotYouId,\n          },\n          ...(previousRequests ?? []),\n        ];\n\n        queryClient.setQueryData(['sentRequests'], newRequests);\n\n        return { previousRequests, newRequest };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['sentRequests'], context.previousRequests);\n      },\n      onSettled: (data) => {\n        queryClient.invalidateQueries(['sentRequests']);\n        queryClient.invalidateQueries(['connectionInfo', data.targetDotYouId]);\n      },\n    }),\n    revokeConnectionRequest: useMutation(revokeConnectionRequest, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['sentRequests']);\n        queryClient.invalidateQueries(['connectionInfo', param.targetDotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n    acceptRequest: useMutation(acceptRequest, {\n      onMutate: async (newRequest) => {\n        await queryClient.cancelQueries(['activeConnections']);\n\n        const previousConnections: ConnectionRequest[] = queryClient.getQueryData([\n          'activeConnections',\n        ]);\n        const newConnections = [\n          {\n            status: 'pending', // Set to pending to not update the connetion details page yet, as we don't have the data for that\n            dotYouId: newRequest.senderDotYouId,\n          },\n          ...(previousConnections ?? []),\n        ];\n\n        queryClient.setQueryData(['activeConnections'], newConnections);\n\n        return { previousConnections, newRequest };\n      },\n      onError: (err, newData, context) => {\n        console.error(err);\n\n        queryClient.setQueryData(['activeConnections'], context.previousConnections);\n      },\n      onSettled: (data) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', data.senderDotYouId]);\n      },\n    }),\n    ignoreRequest: useMutation(ignoreRequest, {\n      onSuccess: (data, param) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['connectionInfo', param.senderDotYouId]);\n      },\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n    block: useMutation(block, {\n      onSettled: (_data, _err, dotYouId) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n      },\n    }),\n    unblock: useMutation(unblock, {\n      onSettled: (_data, _err, dotYouId) => {\n        queryClient.invalidateQueries(['pendingConnections']);\n        queryClient.invalidateQueries(['activeConnections']);\n        queryClient.invalidateQueries(['connectionInfo', dotYouId]);\n      },\n    }),\n  };\n};\n\nexport default useConnection;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useFocusedEditing = () => {\n  const [searchParams] = useSearchParams();\n\n  const checkReturnTo = () => {\n    if (searchParams.get('ui') !== 'focus' && searchParams.get('ui') !== 'minimal') {\n      return;\n    }\n    const returnUrl = searchParams.get('return');\n\n    window.location.href = returnUrl;\n  };\n\n  return checkReturnTo;\n};\n\nexport default useFocusedEditing;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useAttributeVersions = ({ profileId, type }: { profileId: string; type: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const fetchVersions = async ({ profileId, type }: { profileId: string; type: string }) => {\n    return await client.profileDataProvider.getAttributeVersions(profileId, undefined, type);\n  };\n  return {\n    fetchVersions: useQuery(\n      ['attributeVersions', profileId, type],\n      () => fetchVersions({ profileId, type }),\n      {\n        refetchOnWindowFocus: false,\n      }\n    ),\n  };\n};\n\nexport default useAttributeVersions;\n"],"names":["title","confirmText","senderDotYouId","isOpen","onConfirm","onCancel","target","usePortal","useConnection","acceptRequest","acceptPending","mutateAsync","acceptPendingStatus","status","circles","useCircles","fetch","data","checkReturnTo","useFocusedEditing","useState","name","setName","photoFileId","setPhotoFileId","circleGrants","setCircleGrants","dialog","onClose","size","onSubmit","e","preventDefault","circleIds","className","t","htmlFor","id","required","onChange","split","value","givenName","surname","defaultValue","undefined","fallbackInitials","length","map","circle","index","checked","some","circleGrant","circleDef","isChecked","onClick","newCircleGrants","filter","circleId","push","icon","state","type","createPortal","props","useAttributeVersions","profileId","BuiltInProfiles","AttributeDefinitions","fetchVersions","nameAttributes","nameAttributesLoading","isLoading","filteredNameAttributes","attr","Object","keys","acl","requiredSecurityGroup","SecurityGroupType","fullName","MinimalProfileFields","defaultChecked","window","location","hostname","Option","isActive","imageUrl","useImage","getTargetDriveFromProfileId","src","initials","photoAttributes","photoAttributesLoading","filteredPhotoAttributes","newValue","children","permissionDetails","members","useCircle","fetchMembers","LinkWrapper","to","encodeURIComponent","checkedClasses","disabled","driveGrants","isOpaqueBg","isBorderLess","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","sort","a","b","useQuery","refetchOnWindowFocus","dotYouId","queryClient","useQueryClient","circleNetworkProvider","CircleNetworkProvider","circleNetworkRequestProvider","CircleNetworkRequestProvider","fetchSingle","getConnectionInfo","connectionInfo","toLowerCase","getPendingRequest","pendingRequest","getSentRequest","sentRequest","disconnect","connectionDotYouId","disconnectFromContact","sendConnectionRequest","targetDotYouId","message","sendRequest","revokeConnectionRequest","deleteSentRequest","acceptConnectionRequest","ignoreRequest","deletePendingRequest","block","blockDotYouId","unblock","unblockDotYouId","useMutation","onSuccess","param","invalidateQueries","onError","ex","console","error","onMutate","newRequest","cancelQueries","previousRequests","getQueryData","newRequests","recipient","setQueryData","err","newData","context","onSettled","previousConnections","newConnections","_data","_err","useSearchParams","searchParams","get","returnUrl","href","client","Client","api","ApiType","sharedSecret","profileDataProvider","getAttributeVersions"],"sourceRoot":""}