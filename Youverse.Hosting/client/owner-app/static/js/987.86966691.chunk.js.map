{"version":3,"file":"static/js/987.86966691.chunk.js","mappings":"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","sources":["components/Form/MultiSelect.tsx","components/Icons/Lock/Lock.tsx","components/Icons/OpenLock/OpenLock.tsx","components/Dialog/AclDialog/AclDialog.tsx","components/AclEditor/AclEditor.tsx","components/Form/Input.tsx","components/Form/Select.tsx","components/Form/Textarea.tsx","components/Sections/Section.tsx","hooks/circles/useCircles.ts","hooks/profiles/useAttributes.ts","hooks/profiles/useHomeAttributes.ts","provider/file/FileProvider.ts","hooks/staticFiles/useStaticFiles.ts","provider/connections/CircleProvider.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport useOutsideTrigger from '../../hooks/clickedOutsideTrigger/useClickedOutsideTrigger';\nimport Arrow from '../Icons/Arrow/Arrow';\nimport Times from '../Icons/Times/Times';\n\ninterface SelectElement {\n  value: string;\n  label: string;\n}\n\ninterface MultiSelectProps\n  extends Omit<\n    Omit<\n      React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n      'defaultValue'\n    >,\n    'onChange'\n  > {\n  options: SelectElement[];\n  defaultValue: SelectElement[];\n  onChange: (e: { target: { name: string; value: string[] } }) => void;\n}\n\nconst MultiSelect = (props: MultiSelectProps) => {\n  const { defaultValue, options, onChange, ...otherProps } = props;\n\n  const wrapperRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useOutsideTrigger(wrapperRef, () => setIsOpen(false));\n  const [selection, setSelection] = useState<SelectElement[]>(defaultValue ?? []);\n\n  useEffect(() => {\n    setSelection(defaultValue ?? []);\n  }, [defaultValue]);\n\n  const doSelect = (option: SelectElement) => {\n    if (selection.some((selected) => selected.value === option.value)) {\n      setSelection([...selection.filter((selected) => selected.value !== option.value)]);\n    } else {\n      setSelection([...selection, option]);\n    }\n  };\n\n  const availableOptions = options.filter(\n    (option) => !selection.some((selected) => selected.value === option.value)\n  );\n\n  useEffect(() => {\n    if (!isOpen) {\n      // Closing\n      onChange({\n        target: { name: props.name, value: selection?.map((selected) => selected.value) },\n      });\n    }\n  }, [isOpen]);\n\n  return (\n    <div className=\"relative\" ref={wrapperRef}>\n      <ul\n        className=\"relative flex min-h-[2.7rem] select-none flex-row flex-wrap py-[6px] px-[10px]\"\n        onClick={(e) => {\n          e.preventDefault();\n          setIsOpen(!isOpen);\n          return false;\n        }}\n      >\n        {selection.map((select) => (\n          <li\n            key={select.value}\n            className=\"my-auto mr-1 mb-1 flex cursor-pointer flex-row bg-slate-100 p-1 text-xs hover:bg-slate-200 dark:bg-slate-700\n            dark:hover:bg-slate-500\"\n            onClick={() => doSelect(select)}\n          >\n            {select.label}\n            <Times className=\"my-auto ml-1 h-2 w-2\" />\n          </li>\n        ))}\n        <Arrow className=\"my-auto ml-auto h-4 w-4 rotate-90\" />\n      </ul>\n      {isOpen && (\n        <ul className=\"absolute top-full left-0 right-0 z-30 select-none border border-slate-100 bg-white dark:border-slate-700 dark:bg-gray-800\">\n          {availableOptions?.length ? (\n            availableOptions.map((option) => (\n              <li\n                onClick={() => doSelect(option)}\n                key={option.value}\n                className=\"cursor-pointer px-2 py-1 text-sm hover:bg-slate-50 dark:hover:bg-slate-600\"\n              >\n                {option.label}\n              </li>\n            ))\n          ) : (\n            <li className=\"px-2 py-1 text-sm\">{t('No options')}</li>\n          )}\n        </ul>\n      )}\n\n      <input\n        {...otherProps}\n        onClick={(e) => {\n          e.preventDefault();\n          setIsOpen(!isOpen);\n          return false;\n        }}\n        type={props.type ?? 'input'}\n        className={`absolute inset-0 w-full rounded border border-gray-300 bg-transparent py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-300 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelect;\n","import { FC } from 'react';\n\nconst Lock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\" />\n    </svg>\n  );\n};\n\nexport default Lock;\n","import { FC } from 'react';\n\nconst OpenLock: FC<IconProps> = ({ className }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n      fill=\"currentColor\"\n      className={className}\n    >\n      <path d=\"M352 144c0-44.2 35.8-80 80-80s80 35.8 80 80v48c0 17.7 14.3 32 32 32s32-14.3 32-32V144C576 64.5 511.5 0 432 0S288 64.5 288 144v48H64c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V256c0-35.3-28.7-64-64-64H352V144z\" />\n    </svg>\n  );\n};\n\nexport default OpenLock;\n","import { AccessControlList, DataUtil, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { t } from '../../../helpers/i18n/dictionary';\nimport useCircles from '../../../hooks/circles/useCircles';\nimport usePortal from '../../../hooks/portal/usePortal';\nimport ActionButton from '../../Buttons/ActionButton';\nimport MultiSelect from '../../Form/MultiSelect';\nimport Select from '../../Form/Select';\nimport Lock from '../../Icons/Lock/Lock';\nimport OpenLock from '../../Icons/OpenLock/OpenLock';\nimport { pascalCase } from '../../Templates/DemoData/helpers';\nimport DialogWrapper from '../Common/DialogWrapper';\n\nconst AclDialog = ({\n  title,\n  confirmText,\n  isOpen,\n  acl,\n  onConfirm,\n  onCancel,\n}: {\n  title: string;\n  confirmText?: string;\n\n  isOpen: boolean;\n\n  acl: AccessControlList;\n\n  onConfirm: (acl: AccessControlList) => void;\n  onCancel: () => void;\n}) => {\n  const target = usePortal('modal-container');\n  const [newAcl, setNewAcl] = useState<AccessControlList>(acl);\n  const { data: circles } = useCircles().fetch;\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const saveAcl = () => {\n    onConfirm(newAcl);\n  };\n\n  const updateSecurityGroup = (e) => {\n    const dirtyAcl = {\n      ...newAcl,\n      requiredSecurityGroup: SecurityGroupType[pascalCase(e.target.value)],\n    };\n    if (\n      dirtyAcl.circleIdList &&\n      (dirtyAcl.requiredSecurityGroup === SecurityGroupType.Owner.toLowerCase() ||\n        dirtyAcl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase())\n    ) {\n      dirtyAcl.circleIdList = [];\n    }\n\n    setNewAcl(dirtyAcl);\n  };\n\n  const dialog = (\n    <DialogWrapper title={title} onClose={onCancel}>\n      <>\n        {/* <h2 className=\"mb-2 text-xl\">{t('People with access')}</h2> */}\n        <h2 className=\"mb-2 text-xl\">{t('Circles with access')}</h2>\n        <div className={`mb-4`}>\n          <MultiSelect\n            id=\"circles\"\n            onChange={(e) => {\n              setNewAcl({\n                ...newAcl,\n                circleIdList: e.target.value,\n                // Reset security group to connected when circles were specified\n                requiredSecurityGroup:\n                  e.target.value.length &&\n                  (newAcl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase() ||\n                    newAcl.requiredSecurityGroup === SecurityGroupType.Owner.toLowerCase())\n                    ? SecurityGroupType.Connected\n                    : newAcl.requiredSecurityGroup,\n              });\n            }}\n            defaultValue={newAcl.circleIdList\n              ?.map((circleId) => {\n                return {\n                  value: circleId,\n                  label: circles.find((circle) => DataUtil.stringGuidsEqual(circle.id, circleId))\n                    ?.name,\n                };\n              })\n              .filter((option) => option.label !== undefined)}\n            options={circles?.map((circle) => {\n              return { value: circle.id, label: circle.name };\n            })}\n            className=\"dark:text-color-100 dark:bg-slate-700\"\n          />\n        </div>\n\n        <h2 className=\"mb-2 text-xl\">{t('General access')}</h2>\n        <RequiredSecurityGroupSelect\n          onChange={updateSecurityGroup}\n          group={newAcl.requiredSecurityGroup ?? SecurityGroupType.Owner}\n        />\n\n        <div className=\"-m-2 flex flex-row-reverse px-4 py-3\">\n          <ActionButton className=\"m-2\" onClick={saveAcl}>\n            {confirmText ?? 'Save'}\n          </ActionButton>\n          <ActionButton\n            className=\"m-2\"\n            type=\"secondary\"\n            onClick={() => {\n              setNewAcl(acl);\n              onCancel();\n            }}\n          >\n            {t('Cancel')}\n          </ActionButton>\n        </div>\n      </>\n    </DialogWrapper>\n  );\n\n  return createPortal(dialog, target);\n};\n\nconst RequiredSecurityGroupSelect = ({\n  group,\n  onChange,\n}: {\n  group: SecurityGroupType;\n  onChange: (e: { target: { name: string; value: string } }) => void;\n}) => {\n  const StateIcon =\n    group === SecurityGroupType.Anonymous.toLowerCase() ||\n    group === SecurityGroupType.Authenticated.toLowerCase()\n      ? OpenLock\n      : Lock;\n\n  return (\n    <>\n      <div className=\"flex w-full rounded-lg border p-4\">\n        <div className=\"mr-2 flex flex-col justify-center\">\n          <div className=\"rounded-full bg-slate-100 p-3\">\n            <StateIcon className=\"h-5 w-5\" />\n          </div>\n        </div>\n        <div className=\"flex w-full flex-col\">\n          <Select value={group.toLowerCase()} onChange={onChange} className=\"w-full border-0 pl-0\">\n            <option value=\"anonymous\">{t('Public')}</option>\n            <option value=\"authenticated\">{t('Authenticated')}</option>\n            <option value=\"connected\">{t('Connected')}</option>\n            <option value=\"owner\">{t('Owner')}</option>\n          </Select>\n          <p className=\"pl-[0.2rem] text-sm text-slate-500\">\n            {group === SecurityGroupType.Anonymous.toLowerCase()\n              ? t('Accessible by everyone on the internet')\n              : group === SecurityGroupType.Authenticated.toLowerCase()\n              ? t('Only people that are authenticated')\n              : group === SecurityGroupType.Connected.toLowerCase()\n              ? t('Only people that are connected to you')\n              : t('Only you')}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AclDialog;\n","import { AccessControlList, SecurityGroupType } from '@youfoundation/transit-lib';\nimport { useState } from 'react';\nimport { t } from '../../helpers/i18n/dictionary';\nimport AclDialog from '../Dialog/AclDialog/AclDialog';\nimport Lock from '../Icons/Lock/Lock';\nimport OpenLock from '../Icons/OpenLock/OpenLock';\n\nexport const getAclSummary = (acl: AccessControlList) => {\n  return acl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase()\n    ? t('Public')\n    : acl.requiredSecurityGroup === SecurityGroupType.Authenticated.toLowerCase()\n    ? t('Authenticated')\n    : acl.requiredSecurityGroup === SecurityGroupType.Connected.toLowerCase()\n    ? t('Connections')\n    : acl.requiredSecurityGroup === SecurityGroupType.Owner.toLowerCase()\n    ? t('Owner')\n    : t('Owner');\n};\n\nconst AclEditor = ({\n  acl,\n  onChange,\n  isEdit,\n  onClose,\n  className,\n}: {\n  acl: AccessControlList;\n  onChange?: (acl: AccessControlList) => void;\n  isEdit?: boolean;\n  onClose?: () => void;\n  className?: string;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const Icon = (props: { className: string }) => {\n    return acl.requiredSecurityGroup === SecurityGroupType.Anonymous.toLowerCase() ||\n      acl.requiredSecurityGroup === SecurityGroupType.Authenticated.toLowerCase() ? (\n      <OpenLock {...props} />\n    ) : (\n      <Lock {...props} />\n    );\n  };\n\n  return (\n    <>\n      <button\n        title={acl.requiredSecurityGroup}\n        className={`mr-2 inline-block ${onChange ? '' : 'cursor-default'} ${className ?? ''}`}\n        onClick={() => onChange && setIsEditing(true)}\n      >\n        <Icon className=\"h-5 w-5\" />\n      </button>\n      <AclDialog\n        acl={acl}\n        isOpen={isEdit || isEditing}\n        title={t('Edit security')}\n        onCancel={() => {\n          setIsEditing(false);\n          onClose && onClose();\n        }}\n        onConfirm={(newAcl) => {\n          onChange(newAcl);\n          setIsEditing(false);\n          onClose && onClose();\n        }}\n      />\n    </>\n  );\n};\n\nexport default AclEditor;\n","const Input = (\n  props: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n) => {\n  return (\n    <input\n      {...props}\n      type={props.type ?? 'input'}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-300 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Input;\n","import { ReactNode } from 'react';\n\ntype SelectProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n> & { children: ReactNode };\n\nconst Select = (props: SelectProps) => {\n  return (\n    <select\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    >\n      {props.children}\n    </select>\n  );\n};\n\nexport default Select;\n","const Textarea = (\n  props: React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  >\n) => {\n  return (\n    <textarea\n      {...props}\n      className={`w-full rounded border border-gray-300 bg-white py-1 px-3 text-base leading-8 text-gray-700 outline-none transition-colors duration-200 ease-in-out focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 ${props.className}`}\n    />\n  );\n};\n\nexport default Textarea;\n","import { ReactNode } from 'react';\n\nconst Section = ({\n  title,\n  className,\n  children,\n  isOpaqueBg = false,\n  isBorderLess = false,\n}: {\n  title?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  isOpaqueBg?: boolean;\n  isBorderLess?: boolean;\n}) => {\n  return (\n    <section\n      className={`my-5 rounded-md ${\n        isOpaqueBg\n          ? isBorderLess\n            ? ''\n            : 'rounded-lg border-[1px] border-gray-200 border-opacity-80 px-5 dark:border-gray-700'\n          : 'bg-slate-50 px-5 dark:bg-slate-800'\n      } dark:text-slate-300 ${className ?? ''}`}\n    >\n      {title ? (\n        <div\n          className={`relative border-b-[1px] border-gray-200 border-opacity-80 py-5 transition-all duration-300 dark:border-gray-700`}\n        >\n          <h3 className=\"text-2xl dark:text-white\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"py-5 \">{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n","import { useQuery } from '@tanstack/react-query';\nimport { CircleProvider } from '../../provider/connections/CircleProvider';\nimport useAuth from '../auth/useAuth';\n\nconst useCircles = () => {\n  const { getSharedSecret } = useAuth();\n  const circleProvider = CircleProvider.getInstance(getSharedSecret());\n\n  const fetchAll = async () => {\n    const circles = await circleProvider.getCircles();\n    return circles?.sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0));\n  };\n\n  return {\n    fetch: useQuery(['circles'], () => fetchAll(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useCircles;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeDefinition,\n  AttributeDefinitions,\n  AttributeFile,\n  Client,\n} from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nexport interface AttributeVm extends AttributeFile {\n  typeDefinition: AttributeDefinition;\n}\n\nconst useAttributes = ({ profileId, sectionId }: { profileId?: string; sectionId?: string }) => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const queryClient = useQueryClient();\n\n  const fetchData = async (profileId: string, sectionId: string) => {\n    if (!profileId || !sectionId) {\n      return;\n    }\n\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100\n    );\n\n    return foundAttributes.map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: Object.values(AttributeDefinitions).find((def) => {\n          return def.type.toString() === attr.type;\n        }),\n      } as AttributeVm;\n    });\n  };\n\n  const removeAttributes = async ({\n    profileId,\n    sectionId,\n  }: {\n    profileId: string;\n    sectionId: string;\n  }) => {\n    if (!profileId || !sectionId) {\n      return;\n    }\n\n    const foundAttributes = await client.profileDataProvider.getProfileAttributes(\n      profileId,\n      sectionId,\n      100\n    );\n\n    return await Promise.all(\n      foundAttributes.map(async (attr) =>\n        client.profileDataProvider.removeAttribute(profileId, attr.fileId)\n      )\n    );\n  };\n\n  return {\n    fetch: useQuery(['attributes', profileId, sectionId], () => fetchData(profileId, sectionId), {\n      refetchOnWindowFocus: false,\n    }),\n    removeAttributes: useMutation(removeAttributes, {\n      onError: (err) => {\n        console.error(err);\n      },\n      onSettled: (data, err, variables) => {\n        queryClient.invalidateQueries(['attributes', variables.profileId, variables.sectionId]);\n      },\n    }),\n  };\n};\n\nexport default useAttributes;\n","import { useQuery } from '@tanstack/react-query';\nimport { ApiType, Client, HomePageAttributes } from '@youfoundation/transit-lib';\nimport useAuth from '../auth/useAuth';\n\nconst useHomeAttributes = () => {\n  const { getSharedSecret } = useAuth();\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n  const fetchData = async () => {\n    const foundHomettributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.HomePage.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.HomePage.toString(),\n          name: 'Home Page',\n          description: '',\n        },\n      };\n    });\n\n    const foundThemeAttributes = (\n      await client.homePageProvider.getAttributes(HomePageAttributes.Theme.toString())\n    ).map((attr) => {\n      return {\n        ...attr,\n        typeDefinition: {\n          type: HomePageAttributes.Theme.toString(),\n          name: 'Theme',\n          description: '',\n        },\n      };\n    });\n\n    return { home: foundHomettributes, theme: foundThemeAttributes };\n  };\n\n  return {\n    fetch: useQuery(['homeAtrributes'], () => fetchData(), {\n      refetchOnWindowFocus: false,\n    }),\n  };\n};\n\nexport default useHomeAttributes;\n","import { ApiType, DataUtil, FileQueryParams, ProviderBase } from '@youfoundation/transit-lib';\n\nexport class FileProvider extends ProviderBase {\n  private static instance: FileProvider;\n\n  constructor(sharedSecret: Uint8Array) {\n    super({ api: ApiType.Owner, sharedSecret: sharedSecret });\n  }\n\n  publishFile = async (fileName: string, sections: QueryParamsSection[]) => {\n    const httpClient = this.createAxiosClient();\n\n    const fileRequest: PublishStaticFileRequest = {\n      filename: fileName,\n      config: {\n        crossOriginBehavior: 'allowAllOrigins',\n        contentType: 'string',\n      },\n      sections: sections.map((section) => {\n        return {\n          ...section,\n          queryParams: fixQueryParams(section.queryParams),\n        };\n      }),\n    };\n\n    return await httpClient.post('/optimization/cdn/publish', fileRequest);\n  };\n\n  public static getInstance(sharedSecret): FileProvider {\n    if (!FileProvider.instance) {\n      FileProvider.instance = new FileProvider(sharedSecret);\n    }\n\n    return FileProvider.instance;\n  }\n}\n\nconst fixQueryParams = (params: FileQueryParams): FileQueryParams => {\n  params = { ...params };\n  //HACK; convert all strings to byte arrays as base64 values; this is for a test\n\n  //HACK: until we decide where to handle byte arrays\n  if (params.tagsMatchAtLeastOne)\n    params.tagsMatchAtLeastOne = params.tagsMatchAtLeastOne.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.tagsMatchAll)\n    params.tagsMatchAll = params.tagsMatchAll.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n  if (params.sender)\n    params.sender = params.sender.map((v) =>\n      DataUtil.uint8ArrayToBase64(DataUtil.stringToUint8Array(v))\n    );\n\n  return params;\n};\n\ntype QueryParamsSection = {\n  name: string;\n  queryParams: FileQueryParams;\n  resultOptions: {\n    includeAdditionalThumbnails: boolean;\n    includeJsonContent: boolean;\n    includePayload: boolean;\n    excludePreviewThumbnail: boolean;\n  };\n};\n\ntype PublishStaticFileRequest = {\n  filename: string;\n  config: { crossOriginBehavior: 'default' | 'allowAllOrigins'; contentType: string };\n  sections: QueryParamsSection[];\n};\n","import { useMutation } from '@tanstack/react-query';\nimport {\n  ApiType,\n  AttributeConfig,\n  AttributeDefinitions,\n  BlogConfig,\n  BuiltInProfiles,\n  Client,\n  FileQueryParams,\n  getBlogMasterContentTargetDrive,\n  getTargetDriveFromProfileId,\n  HomePageAttributes,\n  HomePageConfig,\n  ProfileConfig,\n  SecurityGroupType,\n  TargetDrive,\n} from '@youfoundation/transit-lib';\nimport { FileProvider } from '../../provider/file/FileProvider';\nimport useAuth from '../auth/useAuth';\nimport useAttributes from '../profiles/useAttributes';\nimport useHomeAttributes from '../profiles/useHomeAttributes';\n\nconst useStaticFiles = () => {\n  const { getSharedSecret } = useAuth();\n  const { data: homeAtrributes } = useHomeAttributes().fetch;\n  const { data: profileAttributes } = useAttributes({\n    profileId: BuiltInProfiles.StandardProfileId.toString(),\n    sectionId: BuiltInProfiles.PersonalInfoSectionId.toString(),\n  }).fetch;\n\n  const client = new Client({ api: ApiType.Owner, sharedSecret: getSharedSecret() });\n\n  const publishData = async () => {\n    const fileProvider = FileProvider.getInstance(getSharedSecret());\n\n    const publishProfile = async () => {\n      const homepageDrive: TargetDrive = {\n        alias: HomePageConfig.DefaultDriveId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const profileDrive: TargetDrive = {\n        alias: BuiltInProfiles.StandardProfileId.toString(),\n        type: ProfileConfig.ProfileDriveType.toString(),\n      };\n\n      const personalInfoNameQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Name.type.toString(),\n        ],\n      };\n\n      const personalInfoPhotoQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAll: [\n          BuiltInProfiles.PersonalInfoSectionId.toString(),\n          AttributeDefinitions.Photo.type.toString(),\n        ],\n      };\n\n      const SocialQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [BuiltInProfiles.ExternalLinksSectionId.toString()],\n      };\n\n      const themeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.Theme.toString()],\n      };\n\n      const bioFileQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [AttributeDefinitions.FullBio.type.toString()],\n      };\n\n      const linkFileQueryParam: FileQueryParams = {\n        targetDrive: profileDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [AttributeDefinitions.Link.type.toString()],\n      };\n\n      const homeFileQueryParam: FileQueryParams = {\n        targetDrive: homepageDrive,\n        fileType: [AttributeConfig.AttributeFileType],\n        tagsMatchAtLeastOne: [HomePageAttributes.HomePage.toString()],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'socials',\n          queryParams: SocialQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'name',\n          queryParams: personalInfoNameQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'photo',\n          queryParams: personalInfoPhotoQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'bio',\n          queryParams: bioFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'link',\n          queryParams: linkFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'theme',\n          queryParams: themeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'home',\n          queryParams: homeFileQueryParam,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      const publicSections = [\n        {\n          name: 'name',\n          queryParams: personalInfoNameQueryParam,\n          resultOptions: baseResultOptions,\n        },\n        {\n          name: 'photo',\n          queryParams: personalInfoPhotoQueryParam,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      // Image fileId's discovery:\n      const homeFileId = homeAtrributes.home[0]?.data['headerImageUrl'];\n      const homeTargetDrive = getTargetDriveFromProfileId(HomePageConfig.DefaultDriveId.toString());\n      const headerImageQueryParam: FileQueryParams = {\n        targetDrive: homeTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [homeFileId],\n      };\n\n      if (homeFileId) {\n        sections.push({\n          name: homeFileId,\n          queryParams: headerImageQueryParam,\n          resultOptions: baseResultOptions,\n        });\n      }\n\n      const profilePhotoFileId = profileAttributes?.find(\n        (attr) =>\n          attr.acl.requiredSecurityGroup === SecurityGroupType.Anonymous &&\n          attr.type === AttributeDefinitions.Photo.type.toString()\n      )?.data?.['profileImageId'];\n      const profileTargetDrive = getTargetDriveFromProfileId(\n        BuiltInProfiles.StandardProfileId.toString()\n      );\n      const profilePhotoQueryParams: FileQueryParams = {\n        targetDrive: profileTargetDrive,\n        fileType: [0],\n        tagsMatchAtLeastOne: [profilePhotoFileId],\n      };\n\n      if (profilePhotoFileId) {\n        sections.push({\n          name: profilePhotoFileId,\n          queryParams: profilePhotoQueryParams,\n          resultOptions: baseResultOptions,\n        });\n\n        publicSections.push({\n          name: profilePhotoFileId,\n          queryParams: profilePhotoQueryParams,\n          resultOptions: {\n            ...baseResultOptions,\n            includeAdditionalThumbnails: true,\n          },\n        });\n      }\n\n      return await Promise.all([\n        await fileProvider.publishFile('profile.json', sections),\n        await fileProvider.publishFile('public.json', publicSections),\n      ]);\n    };\n\n    const publishChannels = async () => {\n      const blogMasterDrive = getBlogMasterContentTargetDrive();\n\n      const channelQueryParams: FileQueryParams = {\n        targetDrive: blogMasterDrive,\n        fileType: [BlogConfig.BlogChannelDefinitionFileType],\n      };\n\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const sections = [\n        {\n          name: 'channels',\n          queryParams: channelQueryParams,\n          resultOptions: baseResultOptions,\n        },\n      ];\n\n      return await fileProvider.publishFile('channels.json', sections);\n    };\n\n    const publishBlog = async () => {\n      const baseResultOptions = {\n        includeAdditionalThumbnails: false,\n        includeJsonContent: true,\n        includePayload: false,\n        excludePreviewThumbnail: false,\n      };\n\n      const channels = await client.blogDefinitionProvider.getChannelDefinitions();\n      const sections = channels.map((channel) => {\n        const channelDrive: TargetDrive = {\n          alias: channel.channelId,\n          type: BlogConfig.ChannelDriveType.toString(),\n        };\n\n        const blogOnChannelQuery: FileQueryParams = {\n          targetDrive: channelDrive,\n          fileType: [BlogConfig.BlogPostFileType],\n        };\n\n        return {\n          name: channel.channelId,\n          queryParams: blogOnChannelQuery,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      const imageSections = (\n        await client.blogPostReadonlyProvider.getRecentPosts('Article', channels.length * 6)\n      ).map((blog) => {\n        const params: FileQueryParams = {\n          targetDrive: client.blogDefinitionProvider.getPublishChannelDrive(blog.channelId),\n          fileType: [0],\n          tagsMatchAtLeastOne: [blog.primaryImageFileId],\n        };\n\n        return {\n          name: blog.primaryImageFileId,\n          queryParams: params,\n          resultOptions: baseResultOptions,\n        };\n      });\n\n      return await fileProvider.publishFile('blogs.json', [...sections, ...imageSections]);\n    };\n\n    await publishProfile();\n    await publishChannels();\n    await publishBlog();\n  };\n\n  return {\n    publish: useMutation(publishData, {\n      onError: (ex) => {\n        console.error(ex);\n      },\n    }),\n  };\n};\n\nexport default useStaticFiles;\n","import { CircleDefinition } from './CircleDataTypes';\nimport { OwnerProviderBase } from '../OwnerProviderBase';\n\n//Handles management of Circles\nexport class CircleProvider extends OwnerProviderBase {\n  private static instance: CircleProvider;\n  private root = '/circles/definitions';\n\n  constructor(sharedSecret: Uint8Array | undefined) {\n    if (!sharedSecret) {\n      throw 'Shared Secret is required';\n    }\n    super(sharedSecret);\n  }\n\n  async updateDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/update';\n\n    const data = { ...circleDefinition };\n    data.driveGrants = data.driveGrants || [];\n\n    return client\n      .post(url, data)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async createDefinition(circleDefinition: CircleDefinition) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/create';\n\n    return client\n      .post(url, circleDefinition)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  parsePermissions(permission: unknown) {\n    if (typeof permission !== 'string') {\n      return permission;\n    }\n\n    const lowered = permission.toLowerCase();\n\n    return lowered === 'read'\n      ? 2\n      : lowered === 'write'\n      ? 4\n      : lowered === 'readwrite'\n      ? 5\n      : permission;\n  }\n\n  async getCircles(): Promise<CircleDefinition[]> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/list';\n\n    return client\n      .get(url)\n      .then((response) => {\n        return response.data.map((circleDef) => {\n          circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n            return {\n              permissionedDrive: {\n                ...grant.permissionedDrive,\n                permission: this.parsePermissions(grant.permissionedDrive.permission),\n              },\n            };\n          });\n\n          return circleDef;\n        });\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async getCircle(circleId: string): Promise<CircleDefinition> {\n    const client = super.createAxiosClient();\n    const url = this.root + '/circle';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .then((circleDef) => {\n        // Parse string permissionflags to number representations\n        circleDef.driveGrants = circleDef.driveGrants?.map((grant) => {\n          return {\n            permissionedDrive: {\n              ...grant.permissionedDrive,\n              permission: this.parsePermissions(grant.permissionedDrive.permission),\n            },\n          };\n        });\n        return circleDef;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async disableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/disable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async enableCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/enable';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  async removeCircle(circleId: string) {\n    const client = super.createAxiosClient();\n    const url = this.root + '/delete';\n\n    return client\n      .post(url, circleId)\n      .then((response) => {\n        return response.data;\n      })\n      .catch(super.handleErrorResponse);\n  }\n\n  public static getInstance(sharedSecret): CircleProvider {\n    if (!CircleProvider.instance) {\n      CircleProvider.instance = new CircleProvider(sharedSecret);\n    }\n\n    return CircleProvider.instance;\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["props","defaultValue","options","onChange","otherProps","wrapperRef","useRef","useState","isOpen","setIsOpen","useOutsideTrigger","selection","setSelection","useEffect","doSelect","option","some","selected","value","filter","availableOptions","target","name","map","className","ref","onClick","e","preventDefault","select","label","Times","Arrow","length","t","type","xmlns","viewBox","fill","d","RequiredSecurityGroupSelect","group","StateIcon","SecurityGroupType","OpenLock","Lock","Select","toLowerCase","title","confirmText","acl","onConfirm","onCancel","usePortal","newAcl","setNewAcl","circles","useCircles","fetch","data","dialog","DialogWrapper","onClose","id","circleIdList","requiredSecurityGroup","circleId","find","circle","DataUtil","undefined","dirtyAcl","pascalCase","ActionButton","createPortal","getAclSummary","isEdit","isEditing","setIsEditing","Icon","children","isOpaqueBg","isBorderLess","getSharedSecret","useAuth","circleProvider","CircleProvider","fetchAll","getCircles","sort","a","b","disabled","useQuery","refetchOnWindowFocus","profileId","sectionId","client","Client","api","ApiType","sharedSecret","queryClient","useQueryClient","fetchData","profileDataProvider","getProfileAttributes","foundAttributes","attr","typeDefinition","Object","values","AttributeDefinitions","def","toString","removeAttributes","Promise","all","removeAttribute","fileId","useMutation","onError","err","console","error","onSettled","variables","invalidateQueries","homePageProvider","getAttributes","HomePageAttributes","foundHomettributes","description","foundThemeAttributes","home","theme","FileProvider","publishFile","fileName","sections","httpClient","createAxiosClient","fileRequest","filename","config","crossOriginBehavior","contentType","section","queryParams","fixQueryParams","post","instance","ProviderBase","params","tagsMatchAtLeastOne","v","tagsMatchAll","sender","homeAtrributes","useHomeAttributes","profileAttributes","useAttributes","BuiltInProfiles","publishData","fileProvider","getInstance","publishProfile","homepageDrive","alias","HomePageConfig","ProfileConfig","profileDrive","personalInfoNameQueryParam","targetDrive","fileType","AttributeConfig","personalInfoPhotoQueryParam","SocialQueryParam","themeFileQueryParam","bioFileQueryParam","linkFileQueryParam","homeFileQueryParam","resultOptions","baseResultOptions","includeAdditionalThumbnails","includeJsonContent","includePayload","excludePreviewThumbnail","publicSections","homeFileId","homeTargetDrive","getTargetDriveFromProfileId","headerImageQueryParam","push","profilePhotoFileId","profileTargetDrive","profilePhotoQueryParams","publishChannels","blogMasterDrive","getBlogMasterContentTargetDrive","channelQueryParams","BlogConfig","publishBlog","blogDefinitionProvider","getChannelDefinitions","channels","channel","blogOnChannelQuery","channelId","blogPostReadonlyProvider","getRecentPosts","imageSections","blog","getPublishChannelDrive","primaryImageFileId","publish","ex","root","circleDefinition","url","this","driveGrants","then","response","catch","permission","lowered","get","circleDef","grant","permissionedDrive","parsePermissions","OwnerProviderBase","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}